{"version":3,"sources":["components/MenuBar/MenuItem.js","components/MenuBar/MenuBar.jsx","EventController.js","sounds/delete.wav","sounds/snip.wav","util/color.js","shapes/Cut/Cut.js","shapes/Premise/Premise.js","util/collisions.js","sounds/pop.wav","util/otherUtil.js","components/Paper/Sheet/Sheet.js","components/Paper/History/HistoryItem.jsx","components/Paper/History/History.jsx","components/Paper/UtilBar/UtilBar.jsx","components/Paper/UtilBar/UtilBarItem.jsx","components/Paper/Paper.jsx","components/Button/Button.jsx","components/ButtonGroup/ButtonGroup.jsx","util/proof-util.js","components/SideBar/SideBar.jsx","components/Modal/Modal.jsx","components/Workspace/Workspace.jsx","components/App/App.jsx","index.js"],"names":["MenuItem","props","styling","SVGS","id","xmlns","viewBox","width","height","className","d","transform","text","img","style","custom_style","classString","onClick","label","fontSize","MenuBar","MenuItems","left","window","open","marginLeft","graph","console","log","input","document","createElement","type","onchange","ev","file","target","files","reader","FileReader","readAsText","onload","readerEvent","content","result","confirm","clear","dataObj","JSON","parse","fromJSON","alert","click","graphJSON","toJSON","Blob","stringify","a","url","URL","createObjectURL","href","download","body","appendChild","setTimeout","removeChild","revokeObjectURL","right","handleMuteToggle","map","menu_item","E","this","mousePosition","x","y","keys","which","key","isMouseDown","toLocaleLowerCase","$","on","event","clientX","clientY","color","background","odd","inactive","active","even","default","CUT_DEFAULTS","position","size","attrs","rect","class","fill","stroke","strokeWidth","ref","Cut","markup","tagName","selector","config","sheet","options","_","cloneDeep","Object","assign","child","attributes","cut","level","addTo","addTools","Audio","Snip","play","hasparent","get","parent","getCell","unembed","embed","toBack","treeResize","getParentCell","children","getEmbeddedCells","remove","handleCollisions","paper","handleDeleteCell","colorByLevel","premise","element","elementView","findView","jpaper","removeTools","boundaryTool","joint","Boundary","NWresizeTool","Button","createResizeTool","cursor","NEresizeTool","SWresizeTool","SEresizeTool","el","resize_mousedown","bind","rect_tools","toolsView","ToolsView","tools","hideTools","Element","prev_pos","current_pos","MIN_SIZE","attr","resize_mouseup","direction","getAttribute","resize_mousemove","stopPropagation","data","delta","modifiers","size_x","size_y","pos_x","pos_y","RangeError","set","off","onGraphUpdate","r","offset","substring","rotate","PREMISE_DEFAULTS","Premise","fast","findSmallestCell","cells","length","smallest_area","smallest_cell","cell","area","contains","bbox","otherbbox","bbox_info","otherbbox_info","overlapsCells","cell_collisions","intersects","getBoundingBox","push","mainbbox","cellInArray","arr","e","NSPremise","define","NSCut","DEFAULT_BACKGROUND_COLORS","Sheet","handlePlayAudio","Graph","cellNamespace","nameSpace","spacing","mute","create","pop","Pop","collisions","snip","clones","clone","resetCells","exported","getCells","json","parsed","new_element","addPremise","addCut","dom_element","trigger","clean","cellbbox","potential_parents","findPotentialParents","filterChildren","treeToFront","elements_inside","findElementsInside","pack","cleanOverlaps","root","findRoot","pack_rec","siblings","siblingsbbox","min_x","max_x","min_y","max_y","i","getCellsBoundingBox","roots","getCellsByLevel","sort","b","getArea","current","next","overlaps","invader","separate","dupe","main","invaderbbox","shared_x","shared_y","Math","abs","dir","sign","treeMove","elements","targetbbox","new_child_bbox","potential_children","node","toFront","subgraph","selected","root_clone","new_root","subgraphToGraph","embeds","findCellInSubgraph","resize_value","center_nodes","color_config","parity","next_children","HistoryItem","prevProps","prevState","num","total","importCells","scaleContentToFit","Paper","getElementById","model","preventContextMenu","clickThreshold","updateViews","setInteractivity","closest","addClass","removeClass","backgroundColor","React","Component","History","handleJump","setState","index","handleHistoryJump","getItem","MAX_SIZE","batch_mode","batch_state","locked","state","callback","item","splice","shift","error","history_item","id_prefix","UtilBar","handleChangeActive","Children","isValidElement","cloneElement","UtilBarItem","icon","PAPER_SIZE","history","lock","unlock","onKeyUp","keyCode","previousPremiseCode","canInsertPremise","onKeyDown","getMode","selected_premise","delete_noise","Delete","destroy","toLocaleUpperCase","code","charCodeAt","ctrlKey","metaKey","getRelativeMousePos","saved_template","cloneSubgraph","deep","mouse_adjusted","addSubgraph","onMouseDown","initial_cut_pos","paper_element","getBoundingClientRect","top","temp_cut","preventDefault","onMouseUp","startBatch","action","name","handleClearAction","endBatch","onMouseMove","min","onMouseEnter","focus","paperRoot","createRef","show","setPaperEvents","exportAsJSON","css","mode","sourcePaper","modal_cells","addCells","cellView","evt","showTools","modelView","undefined","nextAction","handleActionChange","shiftKey","new_state","undo","redo","styles","wrapperWidth","wrapperHeight","tabIndex","faHistory","handleInitializeHistory","tooltip_text","defaultProps","faCoffee","ButtonGroup","buttons","button","inferenceInsertion","arguments","__proto__","constructor","handleOpenModal","inferenceErasure","insertDoubleCut","Error","multipliers","new_cuts","deleteDoubleCut","forEach","iteration","iterationend","model_clone","sub_id","legalIteration","obliterate","deiteration","model_id","ancestor","matchingModel","all_models","models","model_one","model_two","model_one_children","model_two_children","outer","search","indexOf","SideBar","faPlus","faVectorSquare","proof","faMinus","faPlusSquare","faMinusSquare","faClone","faEraser","charAt","toUpperCase","slice","onStateSwitch","faExchangeAlt","Modal","Event","Workspace","handleModalExit","showModal","insertPosition","handleModalInsert","proofPaper","importFromJSON","modalPaper","mainPaper","hide","copy","handleStateSwitch","paper_id","App","muted","item_label","mute_button","find","mute_button_label","toggleClass","hasClass","html","audio","sound","workspace","pause","currentTime","APP","ReactDOM","render"],"mappings":"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","file":"static/js/main.c2f173bb.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MenuBar.css'\n\nexport default function MenuItem(props) {\n\n\n  const styling = `\n    .cls-1{\n      fill:#ed6b4d;\n      stroke:#e2f3f7;\n      stroke-miterlimit:10;\n      stroke-width:12px;\n    }\n    .cls-2 {\n      fill:#e2f3f7;\n    }\n  `;\n\n  //get SVG path of icon to include instead of PNG because unless we make the PNGs the correct size to begin with,\n  //it will cause weird scaling issues when it tries to fix the aspect ratio\n  const SVGS = {\n    './MenuIcons/logo.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.23 762.74\" width=\"8vh\" height=\"8vh\"><defs><style>{styling}</style></defs><path className=\"cls-1\" d=\"M1022,769v96.74q0,19.28-3.79,30.81a49,49,0,0,1-13.94,20.83q-10.17,9.28-26,17.9Q932.46,960,890.12,971.41t-92.27,11.36q-58.17,0-106-17.91t-81.58-52q-33.75-34.08-51.81-82.62Q543.75,790.83,541,743.9c-1,0-1.92,0-2.9,0H256.29q-33.87,0-48.71-15t-14.84-48.54V295.58q0-22.33,6.63-36.49a41.18,41.18,0,0,1,20.78-20.6Q234.3,232,256.29,232H530.06q24.78,0,36.84,11t12,28.81q0,18.15-12,29.15t-36.84,11H296.45V437.7h215.1q23.74,0,35.44,10.65t11.7,28.11q0,17.48-11.52,28.46t-35.62,11H296.45V661.53H538.09q3.76,0,7.26.27a287.88,287.88,0,0,1,12.56-47.73q17.55-48.89,51.64-83t83-52.15q48.88-18.07,110.85-18.08,51,0,90.2,13.6t63.69,34.25q24.43,20.67,36.83,43.73t12.39,41q0,19.29-14.28,32.88a47.94,47.94,0,0,1-34.26,13.6,46.05,46.05,0,0,1-21.17-5.17,48,48,0,0,1-17-14.46q-18.93-29.6-32-44.75T852.42,550q-22.2-10.34-56.63-10.33-35.46,0-63.34,12.22a130.87,130.87,0,0,0-47.68,35.46q-19.8,23.24-30.3,57T644,719.07q0,88.81,40.8,136.67t113.77,47.85a231.88,231.88,0,0,0,66.62-9.3,337.73,337.73,0,0,0,63.17-26.51V785.85H849.15q-28.57,0-43.21-8.61T791.31,748q0-16.86,12.22-27.88t33.22-11h116q21.35,0,36.15,3.79a40.81,40.81,0,0,1,23.92,16.87Q1022,742.82,1022,769Z\" transform=\"translate(-186.74 -226.03)\"/></svg>\n    ,'./MenuIcons/export.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.24 898.25\" width=\"4vh\" height=\"4vh\"><defs><style>{styling}</style></defs><path className=\"cls-2\" d=\"M1020.62,789.78v249a40.18,40.18,0,0,1-40.18,40.17H219.56a40.18,40.18,0,0,1-40.18-40.17v-249a40.18,40.18,0,0,1,40.18-40.18h58.25A40.18,40.18,0,0,1,318,789.78V940.34H882V789.78a40.18,40.18,0,0,1,40.17-40.18h58.25A40.18,40.18,0,0,1,1020.62,789.78Z\" transform=\"translate(-179.38 -180.69)\"/><path className=\"cls-2\" d=\"M384.19,390.1,533.64,240.66l48.21-48.21a38.5,38.5,0,0,1,55.4,0l48.22,48.22L834.9,390.1a40.17,40.17,0,0,1,0,56.81L793.71,488.1a40.17,40.17,0,0,1-56.81,0L679,430.18V751.79A40.18,40.18,0,0,1,638.81,792H580.55a40.18,40.18,0,0,1-40.17-40.17V429.91L482.19,488.1a40.17,40.17,0,0,1-56.81,0l-41.19-41.19A40.17,40.17,0,0,1,384.19,390.1Z\" transform=\"translate(-179.38 -180.69)\"/><path className=\"cls-2\" d=\"M665.69,620.82a40.39,40.39,0,0,1-5.61,7L618.9,669a40.08,40.08,0,0,1-29.11,11.76A40,40,0,0,0,617.48,669Z\" transform=\"translate(-179.38 -180.69)\"/><path className=\"cls-2\" d=\"M589.79,680.79A40,40,0,0,1,560.67,669l-41.19-41.19a40.14,40.14,0,0,1-5.62-7L562.08,669A40,40,0,0,0,589.79,680.79Z\" transform=\"translate(-179.38 -180.69)\"/></svg>\n    ,'./MenuIcons/import.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.24 898.26\" width=\"4vh\" height=\"4vh\"><defs><style>{styling}</style></defs><path className=\"cls-2\" d=\"M1020.62,789.78v249a40.18,40.18,0,0,1-40.18,40.17H219.56a40.18,40.18,0,0,1-40.18-40.17v-249a40.18,40.18,0,0,1,40.18-40.18h58.25A40.18,40.18,0,0,1,318,789.78V940.34H882V789.78a40.18,40.18,0,0,1,40.17-40.18h58.25A40.18,40.18,0,0,1,1020.62,789.78Z\" transform=\"translate(-179.38 -180.68)\"/><path className=\"cls-2\" d=\"M834.91,582.54,685.46,732l-48.21,48.21a38.5,38.5,0,0,1-55.4,0L533.63,732,384.2,582.54a40.17,40.17,0,0,1,0-56.81l41.19-41.19a40.17,40.17,0,0,1,56.81,0l57.92,57.92V220.85a40.18,40.18,0,0,1,40.17-40.17h58.26a40.18,40.18,0,0,1,40.17,40.17V542.73l58.19-58.19a40.17,40.17,0,0,1,56.81,0l41.19,41.19A40.17,40.17,0,0,1,834.91,582.54Z\" transform=\"translate(-179.38 -180.68)\"/><path className=\"cls-2\" d=\"M665.69,620.82a40.39,40.39,0,0,1-5.61,7L618.9,669a40.08,40.08,0,0,1-29.11,11.76A40,40,0,0,0,617.48,669Z\" transform=\"translate(-179.38 -180.68)\"/><path className=\"cls-2\" d=\"M589.79,680.79A40,40,0,0,1,560.67,669l-41.19-41.19a40.14,40.14,0,0,1-5.62-7L562.08,669A40,40,0,0,0,589.79,680.79Z\" transform=\"translate(-179.38 -180.68)\"/></svg>\n  }\n  // let size = props.text==='' ? '100%' : '70%';\n  let text = props.img==='' ? \"100%\" : \"70%\";\n  // let img_vis = props.img==='' ? \"hidden\" : \"visable\";\n\n  const style = props.custom_style;\n\n  return (\n    <div style={style} className={`menu-item ${props.classString || ''}`} onClick={props.onClick} aria-label={props.label}>\n      {SVGS[props.img]}\n      {/* <img style={{visibility:img_vis}} src={props.img} alt={props.text} width={size+\"\"} height={size+\"\"}/> */}\n      <h4 className=\"menu-item-label\" style={{fontSize: text}}>{props.text}</h4>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport MenuItem from './MenuItem.js';\nimport './MenuBar.css';\n\nexport default function MenuBar(props) {\n  //have to have menu items inside Menu Bar here since some buttons (such as the mute button) are responsible\n  //for updating the state of other components, so their on click event handlers will come through props\n  const MenuItems = {\n    //menu items that float left on the menu bar\n    left: [\n      {\n        text: '',\n        img: './MenuIcons/logo.png',\n        onClick: function(){\n          window.open('https://github.com/eddiekrystowski/existential-graphs')\n        },\n        custom_style: {\n          marginLeft: '0vw'\n        }\n      },\n      {\n        text: 'Existential Graphs',\n        img: '',\n        onClick: function(){\n          return;\n        },\n        custom_style: {\n          marginLeft: '1vw'\n        }\n      },\n      {\n        text: 'Import',\n        img: './MenuIcons/import.png',\n        onClick: importEG,\n        custom_style: {\n          marginLeft: '10vw'\n        }\n      },\n      {\n        text: 'Export',\n        img: './MenuIcons/export.png',\n        onClick: exportEG,\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      },\n    ],\n\n    //menu items that float right on the menu bar\n    right: [\n      {\n        text: 'Unmute',\n        label: 'Toggle Sound',\n        classString: 'mute-active',\n        img: './MenuIcons/export.png',\n        onClick: props.handleMuteToggle,\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      },\n      {\n        text: 'Settings',\n        img: './MenuIcons/export.png',\n        onClick: () => {},\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      }\n    ]\n  }\n  \n    //Funtions for the above MenuItems\n  //TODO: MAKE IMPORT/EXPORT WORK FOR NEW MULTI-GRAPH SYSTEM\n  //    - have importEG return a new graph?\n  //      ex. Paper.graph = importEG();\n  function exportEG(graph) {\n    console.log('Exporting...');\n    let graphJSON = graph.toJSON();\n    const file = new Blob([JSON.stringify(graphJSON)], { type: 'application/json'});\n      const a = document.createElement(\"a\");\n      let url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = 'graph.json';\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function () {\n          document.body.removeChild(a);\n          window.URL.revokeObjectURL(url);\n      }, 0);\n  }\n  \n  // FIXME: graph arg is here just so linter is happy, see above TODO about fixing this\n  // for multi graph system\n  // We also have to consider... should this function make a paper? or just set graph of of existing paper...\n  // return Graph class (components/Paper/Graph/Graph.js)\n  function importEG(graph) {\n    console.log('Importing...');\n    const input = document.createElement(\"input\");\n      input.type = \"file\";\n      // choosing the file\n      input.onchange = function (ev) {\n          const file = ev.target.files[0];\n          if (file.type !== \"application/json\") {\n              alert(\"File must be of .JSON type\");\n              return;\n          }\n          // read the file\n          const reader = new FileReader();\n          reader.readAsText(file, 'UTF-8');\n          reader.onload = function (readerEvent) {\n              const content = readerEvent.target.result;\n              const erase = window.confirm(\"Erase your current workspace and import graph?\");\n              if (erase) {\n                  graph.clear();\n                  const dataObj = JSON.parse(content);\n                  graph.fromJSON(dataObj);\n                  \n              }\n          };\n      };\n      input.click();\n  }\n  \n  return (\n    <div className=\"header-bar\">\n      <div className=\"header-bar-left\">\n        {MenuItems.left.map(menu_item => <MenuItem \n                                    text={menu_item.text} \n                                    img={menu_item.img}\n                                    classString={menu_item.classString} \n                                    onClick={menu_item.onClick} \n                                    custom_style={menu_item.custom_style} \n                                    label={menu_item.label}\n                                    key={menu_item.text}\n                                  />)}\n      </div>\n      <div className=\"header-bar-right\">\n        {MenuItems.right.map(menu_item => <MenuItem \n                                    text={menu_item.text} \n                                    img={menu_item.img} \n                                    classString={menu_item.classString} \n                                    onClick={menu_item.onClick} \n                                    custom_style={menu_item.custom_style} \n                                    label={menu_item.label}\n                                    key={menu_item.text}\n                                  />)}\n      </div>\n    </div>\n  )\n}","import $ from \"jquery\";\n\nclass EventController {\n    constructor() {\n        this.mousePosition =  {x: 0, y: 0};\n        this.keys = [];\n        this.which = 0;\n        this.key = '';\n        this.isMouseDown = false;\n    }\n\n    isActive(key) {\n        return this.key.toLocaleLowerCase() === key || this.which === key || this.keys[key] === true;\n    }\n\n}\n\nlet E = new EventController();\n\n$(document).on('keydown', function(event) {\n    E.keys[event.which] = true;\n    E.which = event.which;\n    E.key = event.key;\n});\n\n$(document).on('keyup', function(event){\n    E.keys[event.which] = false;\n    E.which = event.which;\n    E.key = event.key;\n});\n\n$(document).on('mousemove', function(event) {\n    E.mousePosition = {\n        x: event.clientX,\n        y: event.clientY\n    }\n});\n\n$(document).on('mousedown', function(event) {\n    E.isMouseDown = true;\n});\n\n$(document).on('mouseup', function(event) {\n    E.isMouseDown = false;\n});\n\nexport default E;","export default __webpack_public_path__ + \"static/media/delete.775131a8.wav\";","export default __webpack_public_path__ + \"static/media/snip.6f2bc4d7.wav\";","export let color = {\n    shapes: {\n        background: {\n            odd: {\n                inactive: \"#f2f8fc\",\n                active: \"#f2f8fcE0\"\n            },\n            even: {\n                inactive: \"#ffffff\",\n                active: \"#ffffffE0\"\n            },\n            default: {\n                color: \"#ffffff00\"\n            }\n        }\n    }\n}","// class for cuts\nimport * as joint from 'jointjs'\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport Snip from '../../sounds/snip.wav'\nimport { color } from '../../util/color.js';\n\n\nconst CUT_DEFAULTS = {\n    position: {\n        x: 10,\n        y: 10\n    },\n    size: {\n        width: 40, \n        height: 40\n    },\n    attrs: {\n        rect: {\n            class: 'cut_rect',\n            width: 40,\n            height: 40,\n            fill: '#ffffff99',\n            stroke: 'black',\n            strokeWidth: 2,\n        },\n        text: {\n            class: 'cut_text',\n            fontSize: 30,\n            'ref-x': 0.5,\n            'ref-y': 0.5,\n            ref: 'rect',\n            'y-alignment': 'middle',\n            'x-alignment': 'middle',\n        }\n    },\n    graph: {}\n}\n\nexport class Cut extends joint.dia.Element {\n    defaults() {\n        return {\n            ...super.defaults,\n            type: \"dia.Element.Cut\",\n            attrs: {\n                rect: CUT_DEFAULTS.attrs.rect,\n                text: CUT_DEFAULTS.attrs.text\n            }\n        }\n    }\n\n    markup = [{\n        tagName: \"rect\",\n        selector: \"body\"\n    },{\n        tagName: \"text\",\n        selector: \"label\"\n    }]\n\n    //custom constructor for shape, should more or less always use this over the default constructor\n    create(config, sheet) {\n        const options = _.cloneDeep(CUT_DEFAULTS);\n        if (config) {\n            options.position = Object.assign(options.position, config.position);\n            options.size = Object.assign(options.size, config.size);\n            options.attrs.rect = Object.assign(options.attrs.rect, config.attrs && config.attrs.rect);\n            options.attrs.text = Object.assign(options.attrs.text, config.attrs && config.attrs.text);\n        }\n        options.sheet = sheet;\n\n        // adjust size / position if cut was created with a child\n        // in order for undo/redo to function properly\n        if (config.child) {\n            const child = config.child;\n            options.attrs.rect.width = child.attributes.attrs.rect.width + options.attrs.rect.width;\n            options.attrs.rect.height = child.attributes.attrs.rect.height + options.attrs.rect.height;\n            options.position = {\n                x: child.attributes.position.x - (options.attrs.rect.width - child.attributes.attrs.rect.width) / 2,\n                y: child.attributes.position.y - (options.attrs.rect.height - child.attributes.attrs.rect.height) / 2,\n            }\n        }\n       \n        const cut = new Cut({\n            markup: '<rect/><text/>',\n            position: {\n                ...options.position\n            },\n            size: {\n                ...options.size\n            },\n            attrs: {\n                rect: {\n                    ...options.attrs.rect\n                },\n                text: {\n                    ...options.attrs.text\n                },\n                level: 0\n            },\n            // set custom attributes here:\n            sheet: options.sheet\n        });\n\n        //have to set this out here since we actually do want a reference to this object, not a copy\n        cut.sheet = options.sheet;\n\n        cut.addTo(cut.sheet.graph);\n        //add tools (some events events also)\n        this.addTools(cut);\n        let audio = new Audio(Snip);\n        audio.play();\n        //check for children\n        if (config && config.child) {\n            let child = config.child;\n            let hasparent = false;\n            if (child.get(\"parent\")) {\n                let parent = cut.sheet.graph.getCell(child.get(\"parent\"));\n                parent.unembed(child);\n                parent.embed(cut)\n                parent.toBack()\n                hasparent = true;\n            }\n            cut.embed(child)\n            if (hasparent) {\n                cut.sheet.treeResize(cut, cut.attributes.attrs.rect.width / 2);\n            }\n        }\n        console.log(cut);\n        return cut;\n    }\n\n    destroy() {\n        //check if cut has parents or children, if so children become new children of parent;\n        let parent = this.getParentCell();\n        let children = this.getEmbeddedCells()\n        for (const child of children) {\n            this.unembed(child)\n        }\n        this.remove();\n        if (parent) {\n            this.sheet.handleCollisions(parent);\n        }\n\n        this.sheet.paper.handleDeleteCell();\n    }\n\n    active() {\n        //cut is being interacted with (ie grabbing, dragging or moving etc)\n        this.sheet.colorByLevel(this, {even:color.shapes.background.even.active, odd:color.shapes.background.odd.active, premise: color.shapes.background.default.color});\n    }\n\n    inactive() {\n        //cut is not being interacted with (ie grabbing, dragging or moving etc)\n        this.sheet.colorByLevel(this, {even:color.shapes.background.even.inactive, odd:color.shapes.background.odd.inactive, premise: color.shapes.background.default.color});\n    }\n\n    getBoundingBox() {\n        return  {\n                    width: this.attributes.attrs.rect.width,\n                    height: this.attributes.attrs.rect.height,\n                    x: this.attributes.position.x,\n                    y: this.attributes.position.y\n                }\n    }\n\n    getArea() {\n        return this.attributes.attrs.rect.width * this.attributes.attrs.rect.height;\n    }\n\n    // move(position, timestep = 1000, frames = 500) {\n    //     let difference = {\n    //       x: position.x - this.attributes.position.x,\n    //       y: position.y - this.attributes.position.y\n    //     }\n    //     let step = {\n    //       x: difference.x / frames,\n    //       y: difference.y / frames\n    //     }\n    //     for (let i = 0; i < frames; i++) {\n    //       this.position(this.attributes.position.x + step.x, this.attributes.position.y + step.y);\n    //       this.sleep(timestep);\n    //     }\n    //     console.log(\"move over!\");\n    //   }\n  \n    //   sleep(ms) {\n    //     return new Promise(resolve => setTimeout(resolve, ms));\n    //   }\n\n    //TODO: refactor function to not take in element. Instead, can we either store model/element in Cut class or access it directly?\n    ///     ( i think we can? )\n    addTools(element) {\n        //element view is in charge of rendering the elements on the paper\n        let elementView = element.findView(element.sheet.paper.jpaper);\n        //clear any old tools\n        elementView.removeTools();\n        // boundary tool shows boundaries of element\n        let boundaryTool = new joint.elementTools.Boundary();\n    \n        let NWresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"0%\",\n            y:\"0%\",\n            cursor: \"nw-resize\"\n        }));\n        let NEresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"100%\",\n            y:\"0%\",\n            cursor: \"ne-resize\"\n        }));\n        let SWresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"0%\",\n            y:\"100%\",\n            cursor: \"sw-resize\"\n        }));\n        let SEresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"100%\",\n            y:\"100%\",\n            cursor: \"se-resize\"\n        }));\n    \n        //add event handlers to tools for resizing\n        $(NWresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(NEresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(SWresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(SEresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n    \n        let rect_tools = [boundaryTool, NWresizeTool, NEresizeTool, SEresizeTool, SWresizeTool];\n    \n        let toolsView = new joint.dia.ToolsView({\n            tools: rect_tools\n        });\n    \n        elementView.addTools(toolsView);\n        //start with tools hidden\n        elementView.hideTools();\n        // element.on(\"change:position\", function (eventView) {\n        //     element.toFront();\n        // });\n        // --- end of paper events -----\n    }\n}\n\nObject.assign(joint, {\n    \"dia.Element\": {\n        Cut\n    }\n})\n\n\n\n\n//global objects for cut resizing\nlet prev_pos = {\n    x: 0,\n    y: 0\n}\n\nlet current_pos = {\n    x: 0,\n    y: 0\n}\n\n//TODO: THIS NEEDS TO CHANGE BASED ON HOW MANY THINGS ARE IN THE\n//CUT AND WHERE THEY ARE\nconst MIN_SIZE = {\n    width: 40,\n    height: 40\n}\n\n/**\n * Event handler that sets up resizing when the user first puts their mouse down\n * on a resize tool.\n * @param {MouseEvent} event\n */\nfunction resize_mousedown(event) {\n    const target = this.sheet.graph.getCell($(event.target).parent().attr('model-id'));\n    prev_pos = {\n        x: event.clientX,\n        y: event.clientY\n    }\n    \n    $(document).on('mouseup', { target }, resize_mouseup);\n    $(document).on('mousemove', { target, direction: event.target.getAttribute('data-direction') },  resize_mousemove);\n    event.stopPropagation();\n\n    if (target.get('parent')) {\n        this.sheet.graph.getCell(target.get('parent')).unembed(target);\n    }\n}\n\n/**\n * Performs different resizing algorithms based on the direction of resizing\n * @param {MouseEvent} event `event.data` has the following data:\n *          * target: Cut object representing what Cut the tool belongs to\n */\nfunction resize_mousemove(event) {\n    //update current pos to mouse position\n    current_pos = {\n        x: event.clientX,\n        y: event.clientY\n    }\n\n    //extract copy of size from target Cut \n    const size = {\n        width: event.data.target.attributes.attrs.rect.width,\n        height: event.data.target.attributes.attrs.rect.height\n    };\n\n    //extract copy of position from target Cut\n    const position = {\n        x: event.data.target.attributes.position.x,\n        y: event.data.target.attributes.position.y\n    }\n\n    //calclulate change in mouse position\n    const delta = {\n        x: current_pos.x - prev_pos.x,\n        y: current_pos.y - prev_pos.y\n    }\n\n    //define modifiers to determine how\n    //size/position should respond to the deltas\n    const modifiers = {\n        size_x: 1,\n        size_y: 1,\n        pos_x: 0,\n        pos_y: 0\n    }\n\n    //set the modifiers based on the direction we are resizing\n    switch (event.data.direction) {\n        case 'nw':\n            modifiers.size_x = -1;\n            modifiers.size_y = -1;\n            modifiers.pos_x = 1;\n            modifiers.pos_y = 1;\n            break;\n        case 'ne':\n            modifiers.size_x = 1;\n            modifiers.size_y = -1;\n            modifiers.pos_x = 0;\n            modifiers.pos_y = 1;\n            break;\n        case 'sw':\n            modifiers.size_x = -1;\n            modifiers.size_y = 1;\n            modifiers.pos_x = 1;\n            modifiers.pos_y = 0;\n            break;\n        case 'se':\n            modifiers.size_x = 1;\n            modifiers.size_y = 1;\n            modifiers.pos_x = 0;\n            modifiers.pos_y = 0;\n            break;\n        default:\n            throw new RangeError('Invalid direction value. Expected nw, ne, sw, se. Got ' + event.data.direction);\n    }\n    \n    //if the resize will put us at under MIN_SIZE, then set respective delta to 0 to cancel resize\n    if (size.width + modifiers.size_x * delta.x < MIN_SIZE.width) delta.x = 0;\n    if (size.height + modifiers.size_y * delta.y < MIN_SIZE.height) delta.y = 0;\n\n    //set size based on modifiers and deltas\n    event.data.target.attr('rect/width',  size.width + modifiers.size_x * delta.x);\n    event.data.target.attr('rect/height', size.height + modifiers.size_y * delta.y);\n\n    //adjust position to offset size changes in certain directions\n    event.data.target.set('position',  { x: position.x + modifiers.pos_x * delta.x, y: position.y + modifiers.pos_y * delta.y});\n    \n    //copy current_pos to prev_pos\n    prev_pos = Object.assign({}, current_pos);\n}\n\n/**\n * Cleans up resize event\n * @param {MouseEvent} event `event.data` has the following data:\n *          * target: Cut object representing what Cut the tool belongs to\n */\nfunction resize_mouseup (event) {\n    $(document).off('mouseup', resize_mouseup);\n    $(document).off('mousemove', resize_mousemove);\n    event.data.target.sheet.handleCollisions(event.data.target);\n    event.data.target.sheet.paper.onGraphUpdate();\n}\n\nfunction createResizeTool(config) {\n    let r = (config && config.r) || 7;\n    let fill = (config && config.fill) || \"transparent\";\n    let x = (config && config.x) || \"0%\";\n    let y = (config && config.y) || \"0%\";\n    let offset = (config && config.offset) || {x: 0, y:0};\n    let cursor = (config && config.cursor) || \"nw-resize\";\n\n    let ResizeTool = {\n        markup: [{\n            tagName: 'circle',\n            selector: 'button',\n            attributes: {\n                'r': r,\n                'fill': fill,\n                'cursor': cursor,\n                'data-direction': cursor.substring(0,2)\n            }\n        }],\n        x: x,\n        y: y,\n        offset: offset,\n        rotate: true,\n    };\n    return ResizeTool\n}\n\n","import * as joint from 'jointjs'\nimport _ from 'lodash'\nimport './Premise.css'\n// class for premises (letters)\n\nconst PREMISE_DEFAULTS = {\n  position: {\n    x: 10,\n    y: 10\n  },\n  size: {\n    width: 40,\n    height: 40\n  },\n  attrs: {\n    rect: {\n      class: 'premise_rect',\n      width: 40, \n      height: 40, \n      fill: '#ffffff00', \n      stroke: 'black', \n      strokeWidth: 0\n    },\n    text: {\n      class: 'premise_text',\n      text: 'P',\n      fontSize: 50,\n      'ref-x': 0.5,\n      'ref-y': 0.5,\n      ref: 'rect',\n      'x-alignment': 'middle',\n      'y-alignment': 'middle'\n    }\n  },\n  graph: {}\n}\n\nexport class Premise extends joint.dia.Element {\n    defaults() {\n        return {\n            ...super.defaults,\n            type: \"dia.Element.Premise\",\n            attrs: {\n                rect: PREMISE_DEFAULTS.attrs.rect,\n                text: PREMISE_DEFAULTS.attrs.text\n            }\n        }\n    }\n\n    markup = [{\n        tagName: \"rect\",\n        selector: \"body\"\n    },{\n        tagName: \"text\",\n        selector: \"label\"\n    }]\n\n    //custom constructor for shape, should more or less always use this over the default constructor\n    create(config, sheet, fast) {\n        const options = _.cloneDeep(PREMISE_DEFAULTS);\n\n        if (config) {\n          options.position = Object.assign(options.position, config.position);\n          options.size = Object.assign(options.size, config.size);\n          options.attrs.rect = Object.assign(options.attrs.rect, config.attrs && config.attrs.rect);\n          options.attrs.text = Object.assign(options.attrs.text, config.attrs && config.attrs.text);\n        }\n        options.sheet = sheet;\n\n        const premise = new Premise({\n          markup: '<g class=\"rotatable\"><rect/><text/></g>',\n          position: {\n              ...options.position\n          },\n          size: {\n              ...options.size\n          },\n          attrs: {\n              rect: {\n                  ...options.attrs.rect\n              },\n              text: {\n                  ...options.attrs.text\n              },\n              level: 0\n          },\n          // set custom attributes here:\n        });\n\n        //have to set this out here since we actually do want a reference to this object, not a copy\n        premise.sheet = options.sheet;\n\n        premise.addTo(premise.sheet.graph)\n      \n        //add tools (some events events also)\n        if(!fast) this.addTools(premise);\n\n        return premise;\n    }\n\n    destroy() {\n      this.remove();\n      this.sheet.paper.handleDeleteCell();\n    }\n  \n    active() {\n      return;\n    }\n\n    inactive(){\n      return;\n    }\n\n    getBoundingBox() {\n      return  {\n                width: this.attributes.attrs.rect.width,\n                height: this.attributes.attrs.rect.height,\n                x: this.attributes.position.x,\n                y: this.attributes.position.y\n              }\n    }\n\n    getArea() {\n      return this.attributes.attrs.rect.width * this.attributes.attrs.rect.height;\n    }\n        \n    // move(position, timestep = 1000, frames = 500) {\n    //   let difference = {\n    //     x: position.x - this.attributes.position.x,\n    //     y: position.y - this.attributes.position.y\n    //   }\n    //   let step = {\n    //     x: difference.x / frames,\n    //     y: difference.y / frames\n    //   }\n    //   for (let i = 0; i < frames; i++) {\n    //     this.position(this.attributes.position.x + step.x, this.attributes.position.y + step.y);\n    //     this.sleep(timestep);\n    //   }\n    //   console.log(\"move over!\");\n    // }\n\n    // sleep(ms) {\n    //   return new Promise(resolve => setTimeout(resolve, ms));\n    // }\n    \n\n    //TODO: see Cut.addTools()\n    addTools(element) {\n      //element view is in charge of rendering the elements on the paper\n      let elementView = element.findView(element.sheet.paper.jpaper);\n      //clear any old tools\n      elementView.removeTools();\n      // boundary tool shows boundaries of element\n      let boundaryTool = new joint.elementTools.Boundary();\n  \n      let rect_tools = [boundaryTool];\n  \n      let toolsView = new joint.dia.ToolsView({\n          tools: rect_tools\n      });\n  \n      elementView.addTools(toolsView);\n      //start with tools hidden\n      elementView.hideTools();\n      // element.on(\"change:position\", function (eventView) {\n      //     element.toFront();\n      // });\n      // --- end of paper events -----\n  }\n\n}\n\nObject.assign(joint.shapes, {\n    \"dia.Element\": {\n        Premise\n    }\n})\n\n","export function findSmallestCell(cells) {\n    // returns the smallest cell (by area) of an array of joint.dia.Cell objects\n    if (cells.length === 0) { return undefined }\n    let smallest_area = cells[0].attributes.attrs.rect.width * cells[0].attributes.attrs.rect.height;\n    let smallest_cell = cells[0];\n    for (const cell of cells) {\n        let width = cell.attributes.attrs.rect.width;\n        let height = cell.attributes.attrs.rect.height;\n        let area = width * height;\n        if (area < smallest_area) {\n            smallest_area = area;\n            smallest_cell = cell;\n        }\n    }\n    return smallest_cell\n}\n\nexport function contains(bbox, otherbbox) {\n    // returns true of otherbbox fits completely inside of bbox\n    let bbox_info = {\n        left_x: bbox.x,\n        right_x: bbox.x + bbox.width,\n        top_y: bbox.y,\n        bottom_y: bbox.y + bbox.height\n    }\n    let otherbbox_info = {\n        left_x: otherbbox.x,\n        right_x: otherbbox.x + otherbbox.width,\n        top_y: otherbbox.y,\n        bottom_y: otherbbox.y + otherbbox.height\n    }\n    if (bbox_info.left_x < otherbbox_info.left_x && bbox_info.right_x > otherbbox_info.right_x && bbox_info.top_y < otherbbox_info.top_y && bbox_info.bottom_y > otherbbox_info.bottom_y) {\n        //console.log(\"bbox contains otherbbox\", bbox, otherbbox);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function overlapsCells(target, cells) {\n    let cell_collisions = []\n    for (const cell of cells) {\n        if (target.id === cell.id) continue;\n        if (intersects(target.getBoundingBox(), cell.getBoundingBox())) {\n            cell_collisions.push(cell);\n        }\n    }\n    return cell_collisions;\n}\n\nexport function intersects(mainbbox, otherbbox) {\n    if (contains(mainbbox, otherbbox) || contains(otherbbox, mainbbox)) {\n        return true;\n    }\n\n    // check if bounding boxes overlap one another\n    \n    //check if either bbox is completely above the other\n    //      bbox.y          is the top edge\n    //      bbox.y + height is the bottom edge\n    //check if some bottom edge is < some top edge\n    if (mainbbox.y + mainbbox.height < otherbbox.y || otherbbox.y + otherbbox.height < mainbbox.y) {\n        //one of the bbox is completely above the other\n        return false;\n    }\n    //check if either bbox is completely to the left of the other\n    //      bbox.x          is the left edge \n    //      bbox.x + width  is the right edge\n    // check if some right edge < other left edge\n    if (mainbbox.x + mainbbox.width < otherbbox.x || otherbbox.x + otherbbox.width < mainbbox.x) {\n        //one of the bbox is completely to the left of the other\n        return false;\n    }\n\n    return true;\n}\n\n/*\n    move_vector: {\n        start: {\n            x: int,\n            y: int\n        },\n        target: {\n            x: int,\n            y: int\n        }\n    }\n*/\n\n//Not used right now.... but it may need to be at some point.... DO NOT REMOVE!\n//checks to make sure that you dont create parent/child relationships by moving cells\nexport function safeMove(main, move_target) {\n    let move_vector = {\n        start: { \n            x: main.attributes.position.x,\n            y: main.attributes.position.y\n        },\n        target: {\n            x: move_target.x,\n            y: move_target.y\n        }\n    }\n    let mainbbox = main.getBoundingBox();\n    let new_bbox = {\n        x: move_vector.target.x,\n        y: move_vector.target.y,\n        width: mainbbox.width,\n        height: mainbbox.height\n    }\n    //check if moving a cell somewhere would either contain a new cell or be contained by another cell\n    let cells = main.sheet.getCellsByLevel(0);\n    for (const invader of cells) {\n        if (invader.id === main.id) continue;\n        if (contains(new_bbox, invader.getBoundingBox()) || contains(invader.getBoundingBox(), new_bbox)) {\n            //moving cell would contain invader or invader would contain cell\n            //move the invader out\n            let diff_y = move_vector.target.y - move_vector.start.y;\n            let diff_x = move_vector.target.x - move_vector.start.x\n            if (diff_x === 0) {\n                if (diff_y < 0) {\n                    //if main is being pushed up, push invader up also\n                    pushTop(main, invader);\n                } else if (diff_y > 0) {\n                    //if the main cell is being moved down, move the invader down too\n                    pushBottom(main, invader);\n                } else {\n                    alert(\"Error in safeMove, diff_y === 0 for vertical movement\");\n                }\n            } else if (diff_y === 0) {\n                if (diff_x < 0) {\n                    pushLeft(main, invader);\n                } else if (diff_x > 0) {\n                    pushRight(main, invader);\n                } else {\n                    alert(\"Error in safeMove, diff_x === 0 for horizontal movement\");\n                }\n            }\n        }\n    }\n    main.position(move_vector.target.x, move_vector.target.y)\n}\n\nfunction pushTop(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x,\n        y: invader.attributes.position.y - Math.abs(main.sheet.spacing + (invader.attributes.position.y + invader.attributes.attrs.rect.height) - (main.attributes.position.y))\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushBottom(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x,\n        y: invader.attributes.position.y + Math.abs(main.sheet.spacing + (invader.attributes.position.y + invader.attributes.attrs.rect.height) - (main.attributes.position.y))\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushLeft(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x - Math.abs(main.sheet.spacing + (invader.attributes.position.x + invader.attributes.attrs.rect.width) - (main.attributes.position.x)),\n        y: invader.attributes.position.y\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushRight(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x + Math.abs(main.sheet.spacing + (invader.attributes.position.x + invader.attributes.attrs.rect.width) - (main.attributes.position.x)),\n        y: invader.attributes.position.y\n    }\n    safeMove(invader, move_target);\n}\n\nexport function getCellsBoundingBox(cells) {\n    let min_x = cells[0].attributes.position.x\n    let max_x = cells[0].attributes.attrs.rect.width + min_x\n    let min_y = cells[0].attributes.position.y\n    let max_y = cells[0].attributes.attrs.rect.height + min_y\n    for (let i = 1; i < cells.length; i++) {\n        let cell = cells[i];\n        let cellbbox = cell.getBoundingBox();\n        if (cellbbox.x < min_x) min_x = cellbbox.x;\n        if (cellbbox.y < min_y) min_y = cellbbox.y;\n        if (cellbbox.x + cellbbox.width > max_x) max_x = cellbbox.x + cellbbox.width;\n        if (cellbbox.y + cellbbox.height > max_y) max_y = cellbbox.y + cellbbox.height; \n    }\n    return {\n        x: min_x,\n        y: min_y,\n        width: max_x - min_x,\n        height: max_y - min_y\n    }\n}","export default __webpack_public_path__ + \"static/media/pop.cddf7df9.wav\";","export function cellInArray(cell, arr) {\n    for (const e of arr) {\n        if (cell.id === e.id) {\n            return true;\n        }\n    }\n    return false;\n} ","import * as joint from 'jointjs';\n\nimport { Cut } from '../../../shapes/Cut/Cut';\nimport { Premise } from '../../../shapes/Premise/Premise';\nimport { color } from '../../../util/color';\nimport { findSmallestCell, overlapsCells, contains, getCellsBoundingBox, intersects } from '../../../util/collisions';\nimport Pop from '../../../sounds/pop.wav';\nimport Snip from '../../../sounds/snip.wav';\nimport $ from 'jquery'\nimport { cellInArray } from '../../../util/otherUtil';\n\nconst NSPremise = joint.dia.Element.define('nameSpace.Premise',Premise);\nconst NSCut = joint.dia.Element.define('nameSpace.Cut',Cut);\n\nconst DEFAULT_BACKGROUND_COLORS = {\n    even: color.shapes.background.even.inactive,\n    odd: color.shapes.background.odd.inactive,\n    premise: color.shapes.background.default.color\n}\n\nexport default class Sheet {\n    constructor(paper) {\n        this.paper = paper;\n        this.handlePlayAudio = paper.props.handlePlayAudio\n        this.graph = new joint.dia.Graph({}, {\n            cellNamespace: {\n                nameSpace: { \n                    Premise: NSPremise,\n                    Cut: NSCut\n                }\n            }\n        });\n        this.spacing = 10;\n    }\n\n    addPremise(config, mute, fast=false) {\n        const premise = (new Premise()).create(config, this, fast);\n        this.handleCollisions(premise);\n\n        // Play snip sound\n        let pop = new Audio(Pop); \n        this.handlePlayAudio(pop);\n        this.paper.onGraphUpdate();\n        return premise;\n    }\n\n    addCut(config, collisions=true) {\n        const cut = (new Cut()).create(config, this, collisions);\n        if (collisions) this.handleCollisions(cut);\n\n        // Play snip sound\n        let snip = new Audio(Snip); \n        this.handlePlayAudio(snip);\n        this.paper.onGraphUpdate();\n        return cut;\n    }\n\n    importCells(cells) {\n        this.graph.clear();\n        if (cells === \"[]\") return;\n        const clones =  cells.map(cell => {\n            cell = cell.clone();\n            cell.sheet = this;\n            return cell;\n        })\n        this.graph.resetCells(clones);\n\n        for(let cell of clones) {\n            this.handleCollisions(cell, false)\n        }\n    }\n\n    exportAsJSON() {\n        const cells = this.graph.getCells();\n        const exported = cells.map(cell => Object.assign(cell.attributes, { sheet: null }));\n        const json = JSON.stringify(exported, null, 2);\n        return json;\n    }\n\n    //VERY SLOW, USE sheet.importCells(cells) instead if possible, which takes an array of cells\n    importFromJSON(json) {\n        const parsed = JSON.parse(json);\n        for (let cell of parsed) {\n            let new_element;\n            if (cell.type === 'dia.Element.Premise') {\n                new_element = this.addPremise(cell, true, true);\n            }\n            else if (cell.type === 'dia.Element.Cut') {\n                new_element = this.addCut(cell, true, true);\n            }\n            else {\n                throw new RangeError(`Cell type must be either dia.Element.Premise or dia.Element.Cut, got ${cell.type}`);\n            }\n\n            //fix for small outline box first time mousing over after importing\n            const dom_element = $(`svg [model-id=\"${new_element.attributes.id}\"]`);\n            dom_element.trigger('mouseenter');\n            dom_element.trigger('mouseleave');\n        }\n    }\n\n    //TODO: some of these functions kind of fit here and also kind of don't. I'm moving them here for now\n    // because in the future it would be beneficial to at least have a \"entire graph update\" be possible, which would be very simple to \n    // do if they are all bundled up.\n    handleCollisions(cell, clean=true) {\n        console.log(\"=================== HANDLE COLLISIONS =========================\")\n        //This function takes a Cell as input and, using its position\n        // makes any necessary changes to the internal representation of\n        // the diagram (parent / child structure (embedding)) to reflect what the user\n        // sees on the paper\n        let cellbbox = cell.getBoundingBox();\n    \n        let potential_parents = this.findPotentialParents(cellbbox);\n        let parent = findSmallestCell(potential_parents);\n    \n        if (parent) {\n            let children = this.filterChildren(parent, cellbbox)\n            //embed cell into parent\n            parent.embed(cell);\n    \n            //reroot children\n            for (const child of children) {\n                if (child.get(\"parent\")) {\n                    parent.unembed(child);\n                }\n                cell.embed(child)\n            }\n            this.treeToFront(parent)\n        } else {\n            let elements_inside = this.findElementsInside(cellbbox)\n            for (const element of elements_inside) {\n                if (element.get(\"parent\") || element.id === cell.id) {\n                    continue;\n                }\n                cell.embed(element)\n            }\n            this.treeToFront(cell)\n        }\n        //recolor trees to reflect new level structure\n        this.colorByLevel(cell);\n        if (clean) {\n            this.pack(cell);\n            this.cleanOverlaps();\n        }\n    }\n\n    pack(cell) {\n        let root = this.findRoot(cell);\n        console.log(\"ROOT EMBEDS\", root.getEmbeddedCells())\n        this.pack_rec(root);\n    }\n\n    pack_rec(cell) {\n        //let level = cell.attributes.attrs.level;\n        let siblings = cell.getEmbeddedCells()\n        console.log(\"siblings\", siblings)\n        if (siblings.length === 0) {\n            return;\n        }\n        for (const child of siblings) {\n            this.pack_rec(child);\n        }\n        //cell is inside a cut\n        //get siblings\n        this.cleanOverlaps(siblings);\n        let siblingsbbox = getCellsBoundingBox(siblings)\n        let cellbbox = cell.getBoundingBox()\n        if (!contains(cellbbox, siblingsbbox)) {\n            if (!intersects(cellbbox, siblingsbbox)) return;\n            if (siblingsbbox.x < cellbbox.x || siblingsbbox.x + siblingsbbox.width > cellbbox.x + cellbbox.width) {\n                cell.position(siblingsbbox.x - this.spacing, cell.attributes.position.y)\n                cell.attr(\"rect/width\", siblingsbbox.width + 2 * this.spacing)\n            }\n            if (siblingsbbox.y < cellbbox.y || siblingsbbox.y + siblingsbbox.height > cellbbox.y + cellbbox.height) {\n                cell.position(cell.attributes.position.x, siblingsbbox.y - this.spacing)\n                cell.attr(\"rect/height\", siblingsbbox.height + 2 * this.spacing)\n            }\n        }\n    }\n\n    cleanOverlaps(roots = this.getCellsByLevel(0)) {\n        // sort the roots from largest to smallest. this will cause a ripple effect,\n        // starting checks for overlaps at the largest cells and moving outward\n        roots.sort(function(a, b) {\n            return b.getArea() - a.getArea()\n        }) \n        let current = roots;\n        while (current.length > 0) {\n            let next = [];\n            //let total_overlaps = 0;\n            for (const cell of current) {\n                let overlaps = overlapsCells(cell, roots);\n\n                for (const invader of overlaps) {\n                    this.separate(cell, invader);\n                    let dupe = cellInArray(invader, next);\n                    if (!dupe) next.push(invader);\n                }\n            }\n            current = next;\n        }\n    }\n\n    separate(main, invader) {\n        //assumes main and invader partially overlap\n\n        let mainbbox = main.getBoundingBox();\n        let invaderbbox = invader.getBoundingBox();\n\n        //find the amount of each directional axis that the two cells occupy together\n        //whichever is lower will be chosen to reduce the movement of the invader the smallest possible distance\n\n        let shared_x = (mainbbox.x < invaderbbox.x) ? mainbbox.x + mainbbox.width - invaderbbox.x : mainbbox.x - invaderbbox.x - invaderbbox.width; \n        let shared_y = (mainbbox.y < invaderbbox.y) ? mainbbox.y + mainbbox.height - invaderbbox.y : mainbbox.y - invaderbbox.y - invaderbbox.height;\n\n        if (Math.abs(shared_x) > Math.abs(shared_y)) {\n            //make adjustment vertically (shorter change)\n            //if shared value is positive, then main is somewhat above the invader\n            let dir = Math.sign(shared_y);\n            if (dir === 0) dir = 1;\n            this.treeMove(invader, {x: invaderbbox.x, y: invaderbbox.y + shared_y + (this.spacing * dir)});\n        } else {\n            //make adjustment horizontally (shorter change)\n            //if shared value is positive, then main is somewhat to the left of the invader\n            let dir = Math.sign(shared_x);\n            if (dir === 0) dir = 1;\n            this.treeMove(invader, {x: invaderbbox.x + shared_x + (this.spacing * dir), y: invaderbbox.y});\n        }\n\n    }\n\n    getCellsByLevel(level) {\n        //returns an array of all cells with the matching level\n        let cells = this.graph.getCells();\n        let result = []\n        for (const cell of cells) {\n            if (cell.attributes.attrs.level === level) result.push(cell);\n        }\n        return result;\n    }\n\n    findElementsInside(bbox, cells=this.graph.getCells()) {\n        //takes two bbox objects as input\n        //bbox objects should have the structure:\n        // {\n        //      width: int,\n        //      height: int,\n        //      x: int,\n        //      y: int\n        // }\n        let elements = []\n        for (const cell of cells) {\n            let otherbbox = cell.getBoundingBox();\n            if (contains(bbox, otherbbox)) {\n                elements.push(cell)\n            }\n        }\n        return elements\n    }\n\n\n    findPotentialParents(targetbbox) {\n        // POTENTIAL PARENTS -- potential parents are only the cells that \n        //                      contain (completely) the CELL.\n        let cells = this.graph.getCells()\n        let potential_parents = []\n        for (const cell of cells) {\n            let otherbbox = cell.getBoundingBox();\n            //find cells who contain target cell\n            if (contains(otherbbox, targetbbox)) {\n                //console.log(\"potential parent found\")\n                potential_parents.push(cell)\n            }\n        }\n    \n        return potential_parents\n    }\n\n\n    filterChildren(parent, new_child_bbox) {\n        //function returns array of children who fit inside new child\n        let cells = this.graph.getCells();\n        let potential_children = [];\n        for (const cell of cells) {\n            if (cell.get(\"parent\") === parent.id){\n                potential_children.push(cell)\n            }\n        }\n        let children = this.findElementsInside(new_child_bbox, potential_children)\n        return children;\n    }\n\n    treeToFront(root) {\n        //loops through a tree from its root to the leaves\n        //to ensure correct z order\n        let current = [root]\n        let next = []\n        while (current.length > 0) {\n            for (const node of current) {\n                //console.log(node);\n                node.toFront();\n                let children = node.getEmbeddedCells();\n                next.push(...children);\n            }\n            current = next\n            next = []\n        }\n    }\n\n\n    //i think these are graph related functions??? since they call handle collisions, tree stuff, etc which\n    //could be specific to a graph\n    addSubgraph(subgraph, position, selected = null) {\n        let root = subgraph[Object.keys(subgraph)[0]];\n        let root_clone = root.clone();\n        let new_root = this.subgraphToGraph(root, root_clone, subgraph)\n        this.treeMove(new_root, position);\n        if (selected && selected.attributes.type === \"dia.Element.Cut\") {\n            selected.embed(new_root);\n        }\n        this.handleCollisions(new_root)\n        return root_clone.id;\n    }\n\n    subgraphToGraph(node, clone, subgraph, parent=null) {\n        clone.sheet = this;\n        clone.addTo(this.graph);\n        if (parent != null) {\n            parent.embed(clone);\n        }\n        let embeds = node.get('embeds');\n        if (embeds){\n            for (const embed of embeds) {\n                let child = this.findCellInSubgraph(embed, subgraph);\n                this.subgraphToGraph(child, child.clone(), subgraph, clone);\n            }\n        }\n        return clone;\n    }\n\n    findCellInSubgraph(id, subgraph) {\n        let keys = Object.keys(subgraph);\n        for (const key of keys) {\n            let cell = subgraph[key];\n            if (cell.id === id) {\n                return cell;\n            }\n        }\n        alert(\"find subgraph failed!\");\n        return null;\n    }\n\n    //FIXME: these functions don't seem to be related to a specific graph, yet i'm not sure where to put them.\n    // I don't think just having them sit out in the open is a great idea either.\n    // Possibly we can just have these functions sit at the bottom of this file (outside of the class)\n    // We can't really make a class with these functions since the graph itself is the tree and we are just defining operations on it\n    //      - or maybe we can if we get creative, have to think more about it\n    treeResize(root, resize_value = 20, center_nodes = true) {\n        //resizes all the children of a root, not including the root\n        let current = root.getParentCell();\n        while (current) {\n            current.attr(\"rect/width\", current.attributes.attrs.rect.width + resize_value);\n            current.attr(\"rect/height\", current.attributes.attrs.rect.height + resize_value);\n            if (center_nodes) {\n                current.set(\"position\", {x: current.attributes.position.x - resize_value/2,\n                                         y: current.attributes.position.y - resize_value/2});\n            }\n            current = current.getParentCell();\n        }\n    }\n    \n    findRoot(node) {\n        while (true) {\n            if (node.get(\"parent\")) {\n                node = node.getParentCell();\n            } else {\n                break;\n            }\n        }\n        return node;\n    }\n    \n    findLevel(node) {\n        let level = 0;\n        let parent = node.getParentCell();\n        while (parent) {\n            level++;\n            parent = parent.getParentCell();\n        }\n        return level;\n    }\n    \n    colorByLevel(node, color_config = DEFAULT_BACKGROUND_COLORS) {\n        //find root of node's tree\n        let root = this.findRoot(node);\n        root.attr(\"level\", 0)\n    \n        if (root.attributes.type === \"dia.Element.Premise\") {\n            root.attr('rect/fill', color_config.premise);\n            return;\n        }\n        //otherwise its a cut root\n        root.attr(\"rect/fill\", color_config.odd)\n        let level = 0;\n        let children = root.getEmbeddedCells();\n        while(children.length > 0) {\n            level++\n            //the color applies to the level contained within the cut, not the level the cut is on\n            let parity = (level+1) % 2;\n            let next_children = []\n            for (const child of children) {\n                child.attr(\"level\", level);\n                if (child.attributes.type === \"dia.Element.Premise\") {\n                    child.attr(\"rect/fill\", color_config.premise)\n                    continue;\n                }\n                //coloring cut\n                child.attributes.attrs.level = level;\n                if (parity === 0) {\n                    child.attr(\"rect/fill\", color_config.even) \n                } else {\n                    child.attr(\"rect/fill\", color_config.odd);   \n                }                                 \n                next_children.push(...child.getEmbeddedCells());\n            }\n            children = next_children;\n        }\n    \n    }\n    \n    treeMove(root, position) {\n        let offset = {\n            x: position.x - root.attributes.position.x,\n            y: position.y - root.attributes.position.y\n        }\n        let current = [];\n        let next = [root];\n        while (next.length > 0) {\n            current = next;\n            next = [];\n            for (const node of current) {\n                next.push(...node.getEmbeddedCells());\n                //node.move({x: node.attributes.position.x + offset.x, y: node.attributes.position.y + offset.y})\n                //safeMove(node, {x: node.attributes.position.x + offset.x, y: node.attributes.position.y + offset.y})\n                node.position(node.attributes.position.x + offset.x, node.attributes.position.y + offset.y);\n            }\n        }\n    }\n\n\n}","import React from 'react';\nimport $ from 'jquery';\nimport * as joint from 'jointjs';\n\nimport Sheet from '../Sheet/Sheet';\n\n/**\n * This class renders an individual JointJS paper inside a History component. \n * The actual data that makes up the paper is entirely derived from the History it is part of.\n */\nexport default class HistoryItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // keeps track of joint paper object \n        this.jpaper = null;\n\n        // Sheet component for managing graph\n        this.sheet = new Sheet(this);\n    }\n\n    // if any of the properties of this component change, make sure cells are correct\n    // (only need to do this if it is the last item in the history since we could be making a new branch)\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.num === this.props.total -1 ){\n            this.sheet.importCells(this.props.cells);\n            this.jpaper.scaleContentToFit();\n        }\n    }\n\n    // initialize component\n    componentDidMount() {\n        this.jpaper = new joint.dia.Paper({\n            el: document.getElementById(this.props.id),\n            model: this.sheet.graph,\n            width: 200,\n            height: 200,\n            preventContextMenu: false,\n            clickThreshold: 1\n        });\n\n        this.sheet.importCells(this.props.cells);\n        this.jpaper.scaleContentToFit();\n        this.jpaper.updateViews();\n\n        this.jpaper.setInteractivity(false);\n        \n\n        //add and remove highlight on hover\n        $(`#${this.props.id}`).on('mouseover', function() {\n            $(this).closest('.history-item').addClass('history-selected');\n            \n        });\n        $(`#${this.props.id}`).on('mouseout', function() {\n            $(this).closest('.history-item').removeClass('history-selected');\n        });\n    }\n\n    //TODO: This was just sitting here empty, not sure if it is necessary to have or not\n    refresh() {}\n\n    render() {\n        const style = {\n            backgroundColor: this.props.active ? '#ed6b4d' : ''\n        }\n        return(\n            <div className=\"history-item\"style={style}>\n                    <div \n                        id={this.props.id}\n                        className=\"joint-paper history-item-paper\"\n                        onClick={this.props.onClick}\n                    ></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nimport './History.css';\nimport HistoryItem from \"./HistoryItem\";\n\n/**\n * This class manages and renders the timeline for the main workspace.\n * See components/Paper/History/HistoryItems.jsx for the individual timeline components\n */\nexport default class History extends React.Component {\n    constructor(props) {\n        super(props);\n\n        //if MAX_SIZE is exceeded, will start removing from bottom of stack\n        this.MAX_SIZE = 1024;\n\n        // The idea of batch mode is to allow multiple premises/cuts to be added at once,\n        // but only count it as one HistoryItem on the timeline\n        //\n        // this.batch_mode simply toggles this behavior on and off, but should NOT be set directly.\n        // Instead, use this.startBatch() and this.endBatch().\n        this.batch_mode = false;\n        // this.batch_state reflects the cells that were most recently pushed while batch_mode is true.\n        // Callling this.endBatch() will create a HistoryItem using this.batch_state cells.\n        // Never set this manually, use this.push(item)\n        this.batch_state = false;\n\n        // if this.locked is true, no items will be able to be added to this.state.data,\n        // so no new HistoryItems can be created\n        this.locked = false;\n\n\n        this.state = {\n            //simple stack, each item is a collection of cells to be rendered by the paper \n            //of the respective HistoryItem component\n            data: [],\n\n            //index represents the index of the current HistoryItem being viewed in the data array.\n            //For example, index = this.data.length - 1 is always the last thing you have done (present)\n            //             index = 0 is always the first thing you have done (except for MAX_SIZE overflow)   \n            index: 0\n        }\n    }\n\n    /**\n     * Call handler function on paper (passed through props) when multiple HistoryItems are \n     * skipped at a time (through clicking).\n     * @param {int} num index to jump to\n     */\n    handleJump = (num) => {\n        this.setState({\n            index: num\n        });\n        this.props.handleHistoryJump(this.getItem(num));\n    }\n\n    /**\n     * Clears the History timeline.\n     * @param {function} callback function to be executed after data has been emptied\n     */\n    clear(callback) {\n        this.setState({\n            data: [],\n            index: 0\n        }, callback && callback);\n    }\n\n\n    /**\n     * Adds collection of cells to data stack at the current index of the History timeline.\n     * \n     * Any entries after the current index will be erased since we only maintain one branch of history.\n     * \n     * If the size of the stack exceeds MAX_SIZE, the oldest entry will be deleted to make space.\n     * __RETURNS EARLY__ if this.locked is true.\n     * @param {*} item \n     * @returns \n     */\n    push(item) {\n        if(this.locked) return;\n\n        if(this.batch_mode) {\n            this.batch_state = item\n            return;\n        }\n\n        //create a copy of state data (necessary since react state must be immutable, cant change it directly)\n        const data = [...this.state.data];\n\n        // if we aren't on the last HistoryItem (the present/most recent)\n        if (this.state.index !== this.state.data.length - 1) {\n            //remove all states after current index\n            data.splice(this.state.index + 1);\n        }\n\n        data.push(item);\n\n        //remove from bottom of stack if we have more items than the max size allows\n        if (data.length >= this.MAX_SIZE) {\n            data.shift();\n        }\n\n        this.setState({\n            data: data,\n            index: data.length - 1\n        });\n    }\n\n\n    /**\n     * Moves index of current HistoryItem to previous HistoryItem if there is one\n     * @returns HistoryItem at the previous index if undoing is allowed, false otherwise\n     */\n    undo() {\n        let index = this.state.index;\n        if (this.state.index > 0) {\n            this.setState({\n                index: this.state.index - 1\n            });\n            index -= 1;\n            return this.getItem(index);\n        }\n        return false;\n    }\n\n    /**\n     * Moves index of current HistoryItem to subsequent HistoryItem if there is one\n     * @returns HistoryItem at the subsequent index if redoing is allowed, false otherwise\n     */\n    redo() {\n        let index = this.state.index;\n        if (this.state.index < this.state.data.length - 1) {\n            this.setState({\n                index: this.state.index + 1\n            });\n            index += 1;\n            return this.getItem(index);\n        }\n        return false;\n    }\n\n    /**\n     * Gets a HistoryItem at a given index\n     * @param {int} index \n     * @returns HistoryItem at a given index if the index is valid, null otherwise\n     */\n    getItem(index) {\n        if (index < 0 || index >= this.state.data.length) {\n            console.error(`ERROR: Tried to get HistoryItem this.state.data[${index}], index must be ${0} < ${index} <= ${this.state.data.length}`);\n            return null;\n        }\n        return this.state.data[index];\n    }\n\n    /**\n     * Locks the History so new HistoryItems cannot be added\n     */\n    lock() {\n        this.locked = true;\n    }\n\n    /**\n     * Unlocks the History so new HistoryItems can be added\n     */\n    unlock() {\n        this.locked = false;\n    }\n\n    /**\n     * Initializes a batch HistoryItem.\n     * \n     * Will make the History keep track of the most recent state sent to it through `this.push(item)`\n     * but will not actually update the History with that new item. \n     * \n     * `(see this.endBatch() for more info)`\n     */\n    startBatch() {\n        this.batch_mode = true;\n        this.batch_state = null;\n    }\n\n    /**\n     * Adds a batch HistoryItem to the History.\n     * \n     * Will take changes since `this.startBatch()` was called and add them to the History in one HistoryItem\n     */\n    endBatch() {\n        this.batch_mode = false;\n        if (this.batch_state !== null) {\n            this.push(this.batch_state);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"history\">\n                {\n                    this.state.data.map((history_item, num) => (\n                        (num === 0) ?  null :\n                        <HistoryItem \n                            num={num}\n                            total={this.state.data.length}\n                            id={this.props.id_prefix + num}\n                            cells={history_item}\n                            active={this.state.index === num}\n                            onClick={this.handleJump.bind(this, num)}\n                            key={num}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nimport './UtilBar.css';\n\nexport default class UtilBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: -1\n        }\n    }\n\n    handleChangeActive = (num) => {\n        this.setState({\n            active: num === this.state.active ? -1 : num\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"util-bar-root\">\n                { \n                    //loop through children and pass active prop to child whose index corresponds to\n                    //this.state.active\n                    // Ex. if History is the first child (index 0), then when this.state.active === 0 \n                    //then History will be passed active=true  as a prop\n                    React.Children.map(this.props.children, (child, num) => {\n                        if (React.isValidElement(child)) {\n                            return React.cloneElement(child, {\n                                active: this.state.active === num,\n                                handleChangeActive: this.handleChangeActive.bind(this, num)\n                            });\n                        }\n                        return child;\n                    })\n                }\n            </div>\n        );\n    }\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nconst UtilBarItem = (props) => {\n    return (\n        <div className=\"util-bar-item-root\">\n            <FontAwesomeIcon icon={props.icon} className=\"util-bar-item-icon\" onClick={props.handleChangeActive} />\n            <div className={`util-bar-active-menu ${props.active === false ? 'visually-hidden' : ''}`}>\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default UtilBarItem;","import React from 'react';\nimport * as joint from 'jointjs'\nimport E from '../../EventController.js';\nimport _ from 'lodash';\nimport $ from 'jquery'\n\nimport Delete from '../../sounds/delete.wav';\nimport Sheet from './Sheet/Sheet.js';\nimport History from './History/History.jsx'\n\nimport './Paper.css';   \nimport UtilBar from './UtilBar/UtilBar.jsx';\nimport UtilBarItem from './UtilBar/UtilBarItem.jsx';\nimport './UtilBar/UtilBar.css';\nimport { faHistory } from '@fortawesome/free-solid-svg-icons';\n\nconst PAPER_SIZE = { width: 4000, height: 4000 };\n\nexport default class Paper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sheet = new Sheet(this);\n        this.jpaper = null;\n        this.paper_element = null;\n        this.paperRoot = React.createRef();\n    \n        this.selected_premise = null;\n        this.saved_template = null;\n        this.temp_cut = null;\n        this.initial_cut_pos = {x: 0, y: 0};\n        this.canInsertPremise = true;\n        this.previousPremiseCode = 0;\n\n        this.state = {\n            show: true\n        }\n\n        this.UtilBar = React.createRef();\n        this.history = React.createRef();\n    }\n\n    componentDidMount() {\n        this.jpaper = new joint.dia.Paper({\n            el: document.getElementById(this.props.id),\n            model: this.sheet.graph,\n            width: PAPER_SIZE.width,\n            height: PAPER_SIZE.height,\n            preventContextMenu: false,\n            clickThreshold: 1\n        });\n\n        this.paper_element = document.getElementById(this.props.id);\n        \n        this.setPaperEvents();\n        this.history.current.push(this.sheet.exportAsJSON());\n    }\n\n    handleHistoryJump = (cells) => {\n        this.history.current.lock();\n        this.sheet.importCells(cells);\n        this.history.current.unlock();\n    }\n\n    onGraphUpdate() {\n        //const new_graph = this.sheet.exportAsJSON();\n        //const cells = Object.values(this.sheet.graph.cloneCells(this.sheet.graph.getCells()));\n        const cells = this.sheet.graph.getCells()\n        this.history.current.push(cells);\n    }\n\n    show() {\n        $(this.paperRoot.current).css('display', 'flex');\n    }\n\n    hide() {\n        $(this.paperRoot.current).css('display', 'none');\n    }\n\n    //assume that if there is no workspace associated then we are in create mode\n    getMode() {\n        return this.props.mode || 'create';\n    }\n\n    setupModalPaper() {\n        this.sheet.graph.clear();\n    }\n\n    copyFrom(sourcePaper) {\n        const modal_cells = sourcePaper.sheet.graph.getCells();\n        for (let i = 0; i < modal_cells.length; i++) {\n            modal_cells[i] = modal_cells[i].clone();\n            modal_cells[i].graph = this.sheet.graph;\n        }\n        this.sheet.graph.addCells(modal_cells);\n    }\n\n    setPaperEvents(){\n        // paper events\n        //arrow functions are required to keep proper this context binding\n        this.jpaper.on(\"element:mouseenter\", ( cellView, evt) =>{\n            let model = cellView.model\n            let modelView = model.findView(this.jpaper);\n            modelView.showTools()\n            model.attr(\"rect/stroke\", \"red\")\n            model.attr(\"text/fill\", \"red\")\n            this.selected_premise = model\n        });\n\n        this.jpaper.on(\"element:mouseleave\", ( cellView, evt) =>{\n            let model = cellView.model\n            let modelView = model.findView(this.jpaper);\n            if(!modelView) return;\n            modelView.hideTools()\n            model.attr(\"rect/stroke\", \"black\")\n            model.attr(\"text/fill\", \"black\")\n            this.selected_premise = undefined;\n        })\n\n        // First, unembed the cell that has just been grabbed by the user.\n        this.jpaper.on('cell:pointerdown', (cellView, evt, x, y) => {\n            \n            console.log(cellView)\n            let cell = cellView.model;\n            console.log(\"cell\", cell)\n\n            if (!cell.get('embeds') || cell.get('embeds').length === 0) {\n                // Show the dragged element above all the other cells (except when the\n                // element is a parent).\n                cell.toFront();\n            }\n            \n            if (cell.get('parent')) {\n                this.sheet.graph.getCell(cell.get('parent')).unembed(cell);\n            }\n            cell.active();\n            this.sheet.treeToFront(this.sheet.findRoot(cell));\n        });\n\n        // When the dragged cell is dropped over another cell, let it become a child of the\n        // element below.\n        this.jpaper.on('cell:pointerup', (cellView, evt, x, y) => {\n\n            let cell = cellView.model;\n            \n            this.sheet.handleCollisions(cell)\n            cell.inactive();\n\n            if(!this.props.action) this.onGraphUpdate();\n            let nextAction;\n            if (this.props.action) {\n                nextAction = this.props.action(this.sheet, cell, this.getRelativeMousePos());\n            }\n            if (this.props.handleClearAction && !nextAction) this.props.handleClearAction();\n            if(nextAction) this.props.handleActionChange(nextAction);\n            this.selected_premise = null;\n        });\n\n        // this.sheet.graph.on('add', () => {\n        //     this.onGraphUpdate();\n        // });\n\n        //PAPER UNDO AND REDO EVENTS\n        $(this.paperRoot.current).on('keydown', (event) => {\n            if (event.keyCode === 90 && (event.ctrlKey || event.metaKey) && !event.shiftKey) {\n                const new_state = this.history.current.undo();\n                this.selected_premise = null;\n                //only update graph if new state exists\n                //undo will return false if can't undo anymore\n                if (new_state) {\n                    this.history.current.lock();\n                    this.sheet.importCells(new_state);\n                    this.history.current.unlock();\n                }\n            }\n            if (event.keyCode === 90 && (event.ctrlKey || event.metaKey) && event.shiftKey) {\n                const new_state = this.history.current.redo();\n                //only update graph if new state exists\n                //redo will return false if can't redo anymore\n                if (new_state) {\n                    this.history.current.lock();\n                    this.sheet.importCells(new_state);\n                    this.history.current.unlock();\n                }\n            }\n        });\n    }\n\n    handleDeleteCell = () => {\n        this.onGraphUpdate();\n    }\n\n    onClick = () => {\n        console.log('clicked', this);\n    }\n\n    onKeyUp = (event) => {\n        if(event.keyCode === this.previousPremiseCode) this.canInsertPremise = true;\n    }\n\n    onKeyDown = (event) => {\n        if(this.getMode() === 'proof'){\n            return;\n        }\n\n        if(this.getMode() === 'create'){\n            if (E.keys[16]) {\n                this.jpaper.setInteractivity(false);\n            }\n        }\n\n        //backspace (delete premise or cut)\n        if (event.keyCode === 8) {\n            if (this.selected_premise) {\n                let delete_noise = new Audio(Delete); \n                if (this.selected_premise.attributes.type === \"dia.Element.Premise\") {\n                    this.selected_premise.destroy()\n                    this.props.handlePlayAudio(delete_noise);\n                } else if (this.selected_premise.attributes.type === \"dia.Element.Cut\") {\n                    this.selected_premise.destroy();        // Play pop sound\n                    this.props.handlePlayAudio(delete_noise);\n                } else {\n                    console.error(\"attempted to delete shape of unknown type: \" + this.selected_premise.attributes.type)\n                }\n            }\n            this.selected_premise = null;\n        }\n\n        //a-z for creating premise\n        const key = event.key.toLocaleUpperCase();\n        const code = key.charCodeAt(0);\n        if (this.canInsertPremise && key.length === 1 && !(event.ctrlKey || event.metaKey) && code >= 65 && code <= 90) {\n            let config = {\n                //use capital letters by default, can press shift to make lowercase\n                attrs:{\n                    text: {\n                        text: key\n                    }\n                },\n                position: this.getRelativeMousePos()\n            }\n            //eslint-disable-next-line\n            //let new_rect = new Premise().create(config)\n            this.sheet.addPremise(config);\n            this.canInsertPremise = false;\n            this.previousPremiseCode = code;\n        }\n        //ENTER\n        // new cut\n        if (event.keyCode === 13) {\n            let config = {\n                position: this.getRelativeMousePos()\n            }\n            if (this.selected_premise) {\n                config[\"child\"] = this.selected_premise;\n                this.sheet.addCut(config);\n            } else {\n                //console.log(\"creating empty cut\")\n                this.sheet.addCut(config);\n                //console.log(\"cut\", new_cut)\n            }\n        }\n    \n        if (event.keyCode === 49) {\n            //save template\n            if (this.selected_premise) {\n                this.saved_template = this.sheet.graph.cloneSubgraph([this.selected_premise], {deep: true});\n            }\n        }\n    \n        if (event.keyCode === 50) {\n            const mouse_adjusted = this.getRelativeMousePos();\n            //console.log(\"position\", mouse_adjusted)\n            if (this.saved_template) {\n                this.sheet.addSubgraph(this.saved_template, mouse_adjusted, this.selected_premise);\n            }\n        }\n    }\n\n    onMouseDown = (event) => {\n        //console.log('mousedown', this);\n        if (E.keys[16] && this.getMode() === 'create') {\n            this.initial_cut_pos = Object.assign({}, E.mousePosition);\n            this.initial_cut_pos.x -= this.paper_element.getBoundingClientRect().left;\n            this.initial_cut_pos.y -= this.paper_element.getBoundingClientRect().top;\n            let config  = {\n                position: Object.assign({}, this.initial_cut_pos),\n                size: {width: 0, height: 0}\n            }\n            //this.temp_cut = new Cut().create(config);\n            this.history.current.lock();\n            this.temp_cut = this.sheet.addCut(config);\n            this.temp_cut.active();\n            event.preventDefault();\n            //console.log(\"CREATED TEMP CUT\", this.temp_cut);\n        }\n    }\n\n    onMouseUp = () => {\n        //console.log('mouseup', this);\n        if (this.getMode() === 'proof') {\n            this.history.current.startBatch();\n            if (!this.selected_premise && this.props.action && this.props.action.name === 'insertDoubleCut') {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.props.action(this.sheet, null, mouse_adjusted);\n                this.props.handleClearAction();\n            }\n            if (!this.selected_premise && this.props.action && this.props.action.name === 'bound iterationend') {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.props.action(this.sheet, null, mouse_adjusted);\n                this.props.handleClearAction();\n            }\n            this.history.current.endBatch();\n        }\n        if (this.temp_cut && this.getMode() === 'create') {\n            const position = _.clone(this.temp_cut.get('position'));\n            const size = _.clone({width: this.temp_cut.attr('rect/width'), height: this.temp_cut.attr('rect/height')});\n            const config = {\n                position: position,\n                attrs:{\n                    rect: {\n                        ...size\n                    }\n                }\n            }\n            //eslint-disable-next-line\n            //let new_rect = new Cut().create(config);\n            //console.log('mouse released, deleting temp cut...');\n            this.temp_cut.remove();\n            this.history.current.unlock();\n            //NOTE: Temp cut must be deleted first or there will be uwnanted conflicts with  collisions\n            this.sheet.addCut(config);\n        }\n    \n        this.jpaper.setInteractivity(true);\n        this.temp_cut = null;\n    }\n\n    onMouseMove = () => {\n        //console.log('mousemove', this);\n        if(this.getMode() === 'create'){\n            //console.log(E.isMouseDown);\n            if (E.isMouseDown && E.keys[16] && this.temp_cut) {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.temp_cut.set('position', {\n                    x: Math.min(mouse_adjusted.x, this.initial_cut_pos.x),\n                    y: Math.min(mouse_adjusted.y, this.initial_cut_pos.y)\n                });\n                this.temp_cut.attr('rect/width', Math.abs(mouse_adjusted.x - this.initial_cut_pos.x));\n                this.temp_cut.attr('rect/height', Math.abs(mouse_adjusted.y - this.initial_cut_pos.y));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        this.paper_element.focus();\n    }\n\n    getRelativeMousePos() {\n        return {\n            x: E.mousePosition.x - this.paper_element.getBoundingClientRect().left,\n            y: E.mousePosition.y - this.paper_element.getBoundingClientRect().top\n        };\n    }\n\n    render() {\n        if (!this.state.show) return null;\n        const styles = {\n            width: this.props.wrapperWidth || '100%',\n            height: this.props.wrapperHeight || '100%'\n        }\n\n        return(\n            <div className=\"paper-root\" ref={this.paperRoot}>\n                <div className=\"paper-wrapper\" style={styles}>\n                    <div \n                        id={this.props.id}\n                        className=\"joint-paper\"\n                        onClick={this.onClick}\n                        onKeyDown={(event) => this.onKeyDown(event)}\n                        onKeyUp={(event) => this.onKeyUp(event)}\n                        onMouseDown={(event) => this.onMouseDown(event)}\n                        onMouseUp={this.onMouseUp}\n                        onMouseMove={this.onMouseMove}\n                        onMouseEnter={this.onMouseEnter}\n                        tabIndex=\"0\"\n                    ></div>\n                </div>\n                <UtilBar ref={this.UtilBar}>\n                    <UtilBarItem icon={faHistory}>\n                        <History \n                            ref={this.history} \n                            id_prefix={`${this.props.id}-`}\n                            handleHistoryJump={this.handleHistoryJump}\n                            handleInitializeHistory={this.handleInitializeHistory}\n                        />\n                    </UtilBarItem>\n                </UtilBar>\n            </div>\n        );\n    }\n}\n\nexport function initializeContainerDrag(container_id){\n    const ele = document.getElementById(container_id);\n    ele.style.cursor = 'default';\n  \n      let pos = { top: 0, left: 0, x: 0, y: 0 };\n  \n      const mouseDownHandler = function(e) {\n          if (!E.keys[16]) return;\n          ele.style.cursor = 'grabbing';\n          ele.style.userSelect = 'none';\n  \n          pos = {\n              left: ele.scrollLeft,\n              top: ele.scrollTop,\n              // Get the current mouse position\n              x: e.clientX,\n              y: e.clientY,\n          };\n  \n          ele.addEventListener('mousemove', mouseMoveHandler);\n          ele.addEventListener('mouseup', mouseUpHandler);\n      };\n  \n      const mouseMoveHandler = function(e) {\n          // How far the mouse has been moved\n          const dx = e.clientX - pos.x;\n          const dy = e.clientY - pos.y;\n  \n          // Scroll the element\n          ele.scrollTop = pos.top - dy;\n          ele.scrollLeft = pos.left - dx;\n      };\n    \n      const mouseUpHandler = function() {\n          ele.style.cursor = 'default';\n          ele.style.removeProperty('user-select');\n  \n          ele.removeEventListener('mousemove', mouseMoveHandler);\n          ele.removeEventListener('mouseup', mouseUpHandler);\n      };\n  \n      // Attach the handler\n      ele.addEventListener('mousedown', mouseDownHandler);\n  }","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nimport './Button.css';\n\nexport default class Button extends React.Component {\n\n    \n    render() {\n        return (\n            <button className={'button ' + (this.props.active ? 'button-active' : '')} onClick={this.props.onClick}>\n                <div className='tooltip-text'>{this.props.tooltip_text}</div>\n                <FontAwesomeIcon icon={this.props.icon} className='button-icon'/>\n                <p>{this.props.text}</p>\n            </button>\n        );\n    }\n}\n\nButton.propTypes = {\n    /** Text to be displayed for a button */\n    text : PropTypes.string,\n    /** Function to be exicuted when the button is pressed */\n    onClick : PropTypes.func,\n    /** Icon title on FontAwesome */\n    icon : PropTypes.string,\n    /** Tooltip text */\n    tooltip_text : PropTypes.string,\n}\n\nButton.defaultProps = {\n    text: 'Button',\n    onClick: console.log('Button Clicked! Please define a on click function.'),\n    icon : faCoffee,\n    tooltip_text : 'Tooltip!',\n}","import React from 'react';\n\nimport Button from '../Button/Button';\n\nimport './ButtonGroup.css';\n\nexport default class ButtonGroup extends React.Component {\n    render() {\n        return (\n            <div className=\"button-group\">\n                {this.props.buttons.map(button => <Button key={button.text} active={this.props.action === button.action} text={button.text} onClick={button.onClick} icon={button.icon} tooltip_text={button.tooltip_text}/>)}\n            </div>\n        );\n    }\n}","\n\n\nexport const inferenceInsertion = function(sheet, model, mousePosition) {\n  console.log('ARGS', arguments);\n  if(model.__proto__.constructor.name === \"Cut\" && (model.attributes.level) % 2 === 0) return;\n  console.log('opening modal...')\n  const paper = sheet.paper;\n  paper.props.handleOpenModal(mousePosition);\n}\n\nexport const inferenceErasure = function(sheet, model) {\n  console.log(model.attributes.attrs.level)\n  if(model.attributes.attrs.level % 2 === 0) {\n    const children = model.getEmbeddedCells({deep: true});\n    const parent = sheet.graph.getCell(model.attributes.parent);\n\n    model.destroy();\n    for (let i = 0; i < children.length; i++){\n      children[i].destroy();\n    }\n\n    if(parent) {\n      sheet.handleCollisions(parent);\n    }\n  }\n}\n\nexport const insertDoubleCut = function(sheet, model, mousePosition={}) {\n    let position = {};\n    let size = {}\n    if (!model && mousePosition) {\n        position = mousePosition;\n        size = { width: 80, height: 80 }\n    }\n    else if (model){\n        position = model.get('position');\n        size = { width: model.attr('rect/width'), height: model.attr('rect/height') }\n    }\n    else {\n        throw new Error('Bad arguments');\n    }\n    const multipliers = [0.8, 0.25];\n    let new_cuts = []\n    for(let i = 0; i < multipliers.length; i++) { \n        new_cuts.push(sheet.addCut({\n            position:  {\n              x: position.x - (size.width * multipliers[i]/2),\n              y: position.y - (size.height * multipliers[i]/2)\n            },\n            attrs: {\n                rect: {\n                    width: size.width * (1 + multipliers[i]),\n                    height: size.height * (1 + multipliers[i])\n                }\n            }\n        }, false));\n    } \n    new_cuts[0].embed(new_cuts[1])\n    sheet.colorByLevel(new_cuts[0])\n    let selected_premise = sheet.paper.selected_premise;\n    if (selected_premise && selected_premise.attributes.type === \"dia.Element.Cut\") {\n      selected_premise.embed(new_cuts[0]);\n      sheet.colorByLevel(selected_premise)\n      sheet.pack(selected_premise)\n    }\n    sheet.handleCollisions(new_cuts[0]) \n}\n\nexport const deleteDoubleCut = function(sheet, model) {\n    console.log(\"MODEL: \", model);\n    const graph = sheet.graph;\n    if(model.__proto__.constructor.name === \"Cut\" && model.attributes.embeds?.length === 1 && \n        graph.getCell(model.attributes.embeds[0]).__proto__.constructor.name === \"Cut\") {\n        const children = graph.getCell(model.attributes.embeds[0]).attributes.embeds;\n        graph.getCell(model.attributes.embeds[0]).destroy();\n        model.destroy();\n        if(model.attributes.parent) {\n          sheet.handleCollisions(graph.getCell(model.attributes.parent));\n        }\n        else {\n          children?.forEach(element => {\n              if(graph.getCell(element).__proto__.constructor.name === \"Cut\") {\n                sheet.handleCollisions(graph.getCell(element))\n              }\n          });\n        }\n    }\n}\n\nexport const iteration = function(sheet, model) {\n  return iterationend.bind(null, model);\n}\n\nconst iterationend = function(model, sheet, model_clone, mousePosition={}) {\n  let subgraph = sheet.graph.cloneSubgraph([model], {deep: true});\n  let sub_id = sheet.addSubgraph(subgraph, mousePosition, model_clone);\n  \n  subgraph = sheet.graph.getCell(sub_id);\n  if(!legalIteration(sheet,model,subgraph)) {\n    obliterate(sheet, subgraph);\n  }\n}\n\nexport const deiteration = function(sheet, model) {\n  const model_id = model.id;\n\n  let ancestor = model;\n  while(ancestor.attributes.parent) {\n    //  Iterate up to parent\n    ancestor = sheet.graph.getCell(ancestor.attributes.parent);\n\n    //  Parent must be of type cut, however we check for redundancy\n    if(ancestor.__proto__.constructor.name !== \"Cut\") {\n      console.error(\"Parent is of type \" + ancestor.__proto__.constructor.name + \". Expected Cut. Contact administrator.\" );\n      return;\n    }\n\n    //  Now, recursivly check all premises in the cut and look for a matching subgraph\n    let children = ancestor.attributes.embeds\n\n    children?.forEach(element => {\n      let child = sheet.graph.getCell(element);\n        //Check if premise text is the same and if premise id is dissimilar\n        if(child.id !== model_id &&\n        matchingModel(sheet, model, child)) {\n          //  Remove desired element and return\n          obliterate(sheet, model);\n          return;\n        }\n    });\n  }\n\n  //  Finally, check sheet of assertion becuase of Joey's \"Multi-tree\" theory...\n\n  let all_models = sheet.graph.attributes.cells.models;\n\n  all_models?.forEach(element => {\n    let child = sheet.graph.getCell(element);\n    if(child?.attributes.attrs.level === 0 && \n    child?.id !== model_id &&\n    matchingModel(sheet, model,child)) {\n      //  Remove desired element and return\n      obliterate(sheet, model);\n      return;\n      }\n  });\n} \n\n\n/**\n * Returns if two subgraphs match.\n * @param {Sheet} sheet - The sheet the two subgraphs are contained by.\n * @param {Cell} model_one - The root cell of the first subgraph.\n * @param {Cell} model_two - The root cell of the second subgraph.\n * @returns {Boolean} - If the two subgraphs match.\n */\nfunction matchingModel(sheet, model_one, model_two) {\n    \n  //  If comparing premise to a cut, return false\n  if(model_one.__proto__.constructor.name !== model_two.__proto__.constructor.name) return false;\n\n  //  If comparing a premise to a premise, return based on text\n  if (model_one.__proto__.constructor.name === \"Premise\") {\n    return model_one.attributes.attrs.text.text === model_two.attributes.attrs.text.text;\n  }\n\n  //  If comparing a cut, return based on a match to all children\n  if(model_one.__proto__.constructor.name === \"Cut\") {\n    \n    // Get the children of each cut\n    let model_one_children = [...(model_one.attributes.embeds || [])];\n    let model_two_children = [...(model_two.attributes.embeds || [])];\n\n    //  If both embeds dont exist\n    if(!model_one_children && !model_two_children) return true;\n    \n    //  If dissimilar sizes, return false\n    if(model_one_children.length !== model_two_children.length) return false;\n\n    //  Match children until children array are of size zero, or all options are exaughsted\n    //  Runtime : O(n^2) where n = number of children per model.\n    //  To attempt optimization, search for \"Graph Isomorphism Problem\"\n    outer:\n    while(model_one_children.length > 0) {\n      let child = sheet.graph.getCell(model_one_children[0]);\n\n      //  Iterate through all children of model_two and compare to child\n      for (let i = 0; i < model_two_children.length; i++) {\n        if(matchingModel(sheet, child, sheet.graph.getCell(model_two_children[i]))) {\n          //  Remove the elements from the arrays\n          model_one_children.shift() // Removes the first index\n          model_two_children.splice(i, 1) //  Removes index i\n          continue outer;\n         }\n      }\n      //  If you get here, it didn't match :(\n      return false;\n    }\n    //  If you get here, it matched! Congrats! :)\n    return true;\n  }\n  //  If comparing something other than a premise or cut, contact an administatior\n  console.error(\"Can not compare models of type \" + model_one.__proto__.constructor.name + \". Contact administrator\");\n  return false;\n}\n\n/**\n * Destroys the root and all decendants.\n * @param {Sheet} sheet - The sheet the subgraph is contained by.\n * @param {Cell} model - Root of subgraph to be destroyed.\n */\nfunction obliterate(sheet, model) {\n  //  If premise or empty cell\n  if(model.__proto__.constructor.name === \"Premise\" || model.attributes.embeds?.length === 0) {\n    model.destroy();\n    console.log('ballse');\n    return;\n  }\n\n  //  If non-empty cell, destroy all children\n  let children = model.attributes.embeds;\n  children.forEach(child => {obliterate(sheet, sheet.graph.getCell(child))});\n  //  Then destroy self\n  model.destroy();\n\n\n\n}\n\n/**\n * Returns if a iteration is legal\n * @param {Sheet} sheet - The sheet the subgraphs are contained by.\n * @param {Cell} model - The origin subgraph.\n * @param {Cell} model_clone - The clone of the origin subgraph\n * @returns {Boolean} - If the iteration is legal.\n */\nfunction legalIteration(sheet, model, model_clone) {\n  //  First, confirm the two models are the same.\n  if(!matchingModel(sheet, model,model_clone)) {\n    console.error(\"Model discrepency when detecting legality of iteration.\");\n    return false;\n  }\n  //  If the first model is on the sheet of assertion return true\n  if(model.attributes.attrs.level === 0) { return true; }\n\n  //  If the clone is on a lower level than the origin, return false\n  if(model.attributes.attrs.level > model_clone.attributes.attrs.level) { return false; }\n\n  //  Add all sibling cuts to a list (all children of parent, remove self)\n  let search = [...sheet.graph.getCell(model.attributes.parent).attributes.embeds];\n  search.splice(search.indexOf(model.id, 1));\n\n  //Iterativly search\n\n  while(search.length > 0) {\n    let current = search.shift();\n    //  Check if it is clone\n    if( current === model_clone.id) {\n      return true;\n    }\n    //  If it is a cut, add all children\n    if(sheet.graph.getCell(current).__proto__.constructor.name === \"Cut\") {\n      sheet.graph.getCell(current).attributes.embeds?.forEach( element => {\n        search.push(element);\n      });\n    }\n  }\n\n  //  If you get here, it's illegal! >:o\n  return false;\n}","import React from 'react';\n\nimport ButtonGroup from '../ButtonGroup/ButtonGroup';\nimport Button from '../Button/Button';\n\nimport './SideBar.css';\nimport { deiteration, deleteDoubleCut, inferenceErasure, inferenceInsertion, insertDoubleCut, iteration } from '../../util/proof-util';\n\n//  Import all of the FontAwesome icons\nimport { faExchangeAlt, faPlus, faMinus, faVectorSquare, faClone, faMinusSquare, faPlusSquare, faEraser} from '@fortawesome/free-solid-svg-icons'\n\nexport default class SideBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttons: {\n                create: [\n                    {\n                        text: 'Add Premise',\n                        action: deiteration,\n                        onClick: () => {\n                            console.log('Adding premise...')\n                        },\n                        icon : faPlus,\n                        tooltip_text : 'Add a premise by hovering over the sheet and pressing a letter on your keyboard.'\n                    },\n                    {\n                        text: 'Cut',\n                        action: deiteration,\n                        onClick: () => {\n                            console.log('Cutting...');\n                        },\n                        icon : faVectorSquare,\n                        tooltip_text : 'Add a cut by clicking and dragging on the sheet of assertion.'\n                    }\n                ],\n                proof: [\n                    {\n                        text: 'Insertion',\n                        action: inferenceInsertion,\n                        onClick: () => {\n                            this.props.handleActionChange(inferenceInsertion);\n                            console.log('Loading insertion into action...');\n                        },\n                        icon : faPlus,\n                        tooltip_text : 'Insert a graph by clicking on any odd level.'\n                    },\n                    {\n                        text: 'Erasure',\n                        action: inferenceErasure,\n                        onClick: () => {\n                            this.props.handleActionChange(inferenceErasure);\n                            console.log('Performing erasure...');\n                        },\n                        icon : faMinus,\n                        tooltip_text : 'Remove a graph by clicking on anything on an even level.'\n                    },\n                    {\n                        text: 'Insert Double Cut',\n                        action: insertDoubleCut,\n                        onClick: () => {\n                            this.props.handleActionChange(insertDoubleCut);\n                            console.log('Inserting double cut...');\n                        },\n                        icon : faPlusSquare,\n                        tooltip_text : 'Add a double cut by clicking on the subgraph you want to encapsulate.'\n                    },\n                    {\n                        text: 'Delete Double Cut',\n                        action: deleteDoubleCut,\n                        onClick: () => {\n                            this.props.handleActionChange(deleteDoubleCut);\n                            console.log('Deleting double cut...');\n                        },\n                        icon : faMinusSquare,\n                        tooltip_text : 'Remove a double cut by clicking on the outer-most cut of the double cut.'\n                    },\n                    {\n                        text: 'Iteration',\n                        action: iteration,\n                        onClick: () => {\n                            this.props.handleActionChange(iteration);\n                            console.log('Performing iteration...');\n                        },\n                        icon : faClone,\n                        tooltip_text : 'Clone any premise an even number of layers layers deeper by first clicking on the premise and then the desired location.'\n                    },\n                    {\n                        text: 'Deiteration',\n                        action: deiteration,\n                        onClick: () => {\n                            this.props.handleActionChange(deiteration);\n                            console.log('Performing deiteration...');\n                        },\n                        icon : faEraser,\n                        tooltip_text : 'Remove any premise an even number of layers deeper by clicking on the premise you wish to remove.'\n                    }\n                ]\n            },\n            color : {\n                text : {\n                    create : \"#E0FBFC\",\n                    proof : \"#293241\"\n                },\n                background : {\n                    create : \"#3D5A80\",\n                    proof : \"#98C1D9\"\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <div className=\"menu-bar\" style={{backgroundColor: this.state.color.background[this.props.mode] , color: this.state.color.text[this.props.mode]}}>\n                <div id=\"side-wrapper\" >\n                    <div id=\"mode-header\">\n                        <h2>{this.props.mode.charAt(0).toUpperCase() + this.props.mode.slice(1)} Mode</h2>\n                        <Button text=\"Switch Mode\" onClick={this.props.onStateSwitch} icon={faExchangeAlt} tooltip_text={'Toggles to ' + (this.props.mode === 'proof' ? 'create' : 'proof') + ' mode'} ></Button>\n                    </div>\n\n                    <ButtonGroup buttons={this.state.buttons[this.props.mode]} mode={this.props.mode} action={this.props.action}/>\n                </div>\n            </div>\n        ); \n    }\n}\n\n","import React from 'react';\n\nimport './Modal.css'\n\nexport default class Modal extends React.Component {\n    render() {\n        if (!this.props.show) {\n            console.log('early');\n            return null;\n        }\n        console.log('rendering...');\n        return (\n            <div class='modal-bg'>\n                <div class='modal-body'>\n                    <div class=\"modal-top-bar\">\n                        { this.props.buttons.map(b => \n                            <button key={b.name} class={`modal-item modal-item-${b.name}`} onClick={b.onClick}>{b.text}</button>\n                        )}\n                        {/* <button class=\"modal-item modal-item-cancel\" onClick={this.props.onClose}>X</button>\n                        <button class=\"modal-item modal-item-cancel\" onClick={this.props.onClose}>X</button> */}\n                    </div>\n                    <div class=\"modal-content\">\n                        { this.props.children }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}   ","import React from 'react';\nimport Paper from '../Paper/Paper';\nimport SideBar from '../SideBar/SideBar';\nimport Modal from '../Modal/Modal.jsx';\n\nimport './Workspace.css'\n\nnew Event('load-modal');\n\nexport default class Workspace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'create',\n            action: null,\n            showModal: false\n        }\n        this.insertPosition = { x: 0, y: 0 };\n        this.modalPaper = React.createRef();\n        this.mainPaper = React.createRef();\n        this.proofPaper = React.createRef();\n        this.history = [];\n    }\n\n    componentDidMount() {\n        this.proofPaper.current.hide();\n        this.proofPaper.current.history.current.clear();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        // //if state.mode changed\n         if (prevState.mode !== this.state.mode) {\n            //switch to proof mode\n            if (this.state.mode === 'proof') {\n                this.mainPaper.current.hide();\n                this.proofPaper.current.sheet.graph.clear();\n                const copy = this.mainPaper.current.sheet.exportAsJSON();\n                this.proofPaper.current.sheet.importFromJSON(copy);\n                this.proofPaper.current.show();\n            }\n            //switch to create mode\n            else {\n                this.mainPaper.current.show();\n                this.proofPaper.current.hide();\n                this.proofPaper.current.history.current.clear();\n            }\n        }\n    }\n\n    handleStateSwitch() {\n        this.setState({\n            mode: this.state.mode === 'create' ? 'proof' : 'create'\n        });\n    }\n\n    handleActionChange = (action) => {\n        this.setState({\n            action: action\n        });\n    }\n\n    handleClearAction(){\n        this.handleActionChange(null);\n    }\n\n    //TODO: MOVE MODAL TO WORKSPACE\n    handleModalExit = () => {\n        this.setState({\n            showModal: false\n        });\n    }\n\n    handleOpenModal = (mousePosition) => {\n        this.setState({\n            showModal: true\n        })\n        this.insertPosition = Object.assign({}, mousePosition);\n    }\n\n    handleModalInsert = (position) => {\n        console.log('inserting...', position);\n        this.proofPaper.current.sheet.importFromJSON(this.modalPaper.current.sheet.exportAsJSON());\n        this.handleModalExit();\n    }\n\n    render() {\n\n        const buttons = [\n            {\n                name: 'insert',\n                text: 'Insert',\n                onClick: this.handleModalInsert\n            },\n            {\n                name: 'cancel',\n                text: 'X',\n                onClick: this.handleModalExit\n            },\n        ]\n\n        return (\n            <div className=\"workspace\">\n                <SideBar  \n                    mode={this.state.mode} \n                    onStateSwitch={this.handleStateSwitch.bind(this)} \n                    handleActionChange={this.handleActionChange.bind(this)}\n                    action={this.state.action}\n                >\n                </SideBar>\n                <Paper \n                    id={this.props.paper_id} \n                    mode={this.state.mode} \n                    action={this.state.action}\n                    handleClearAction={this.handleClearAction.bind(this)}\n                    handleActionChange={this.handleActionChange}\n                    handleOpenModal={this.handleOpenModal}\n                    handlePlayAudio={this.props.handlePlayAudio}\n                    ref={this.mainPaper}\n                >\n                </Paper>\n\n                <Paper \n                    id={this.props.paper_id + '-proof-paper'} \n                    mode={this.state.mode} \n                    action={this.state.action}\n                    handleClearAction={this.handleClearAction.bind(this)}\n                    handleActionChange={this.handleActionChange}\n                    handleOpenModal={this.handleOpenModal}\n                    handlePlayAudio={this.props.handlePlayAudio}\n                    ref={this.proofPaper}\n                >\n                </Paper>\n\n\n                <Modal show={this.state.showModal} buttons={buttons}>\n                    <Paper \n                        id={this.props.paper_id + '-modal-paper'} \n                        mode={'create'} \n                        action={null}\n                        handleClearAction={null}\n                        handleActionChange={null}\n                        handleOpenModal={null}\n                        handlePlayAudio={this.props.handlePlayAudio}\n                        wrapperWidth='100%'\n                        wrapperHeight='72vh'\n                        ref={this.modalPaper}\n                    >\n                    </Paper>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport '../../index.css'; \nimport MenuBar from '../MenuBar/MenuBar.jsx';\nimport Workspace from '../Workspace/Workspace.jsx';\nimport $ from 'jquery'\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.workspace = React.createRef();\n        this.sound = null;\n        this.state = {\n            muted: true\n        }\n    }\n\n    componentDidMount() {\n        console.log('WORKSPACE', this.workspace);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.muted && this.sound) {\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n    }\n\n    handleMuteToggle = () => {\n        this.setState({\n            muted: !this.state.muted\n        });\n\n        const mute_button = getMenuItem(\"Toggle Sound\");\n        const mute_button_label = mute_button.find('.menu-item-label');\n        mute_button.toggleClass('mute-active');\n\n        if (mute_button.hasClass('mute-active')) {\n            mute_button_label.html('Unmute');\n        }\n        else {\n            mute_button_label.html('Mute');\n        }\n        \n    }\n\n    handlePlayAudio = (audio) => {\n        if (this.state.muted) return;\n        this.sound = audio;\n        this.sound.play();\n    }\n\n    render() {\n        return (\n            <div id=\"app\" className=\"app\">\n                <MenuBar id=\"header\" muted={this.state.muted} handleMuteToggle={this.handleMuteToggle}/>\n                <Workspace paper_id=\"main-paper\" ref={this.workspace} handlePlayAudio={this.handlePlayAudio}></Workspace>\n            </div>\n        );\n    }\n}\n\n\nfunction getMenuItem(item_label) {\n    return $('.header-bar').find(`[aria-label=\"${item_label}\"]`)\n}","import ReactDOM from 'react-dom';\nimport * as joint from 'jointjs';\nimport App from './components/App/App';\n\nconsole.log(\"Starting...\");\nwindow.joint = joint;\n\n\nconst APP = ReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\nconsole.log(APP);\nconsole.log(APP.workspace);\n"],"sourceRoot":""}
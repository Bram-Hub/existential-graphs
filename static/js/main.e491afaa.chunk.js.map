{"version":3,"sources":["components/MenuBar/MenuItem.js","components/MenuBar/MenuBar.jsx","EventController.js","sounds/delete.wav","sounds/snip.wav","util/color.js","shapes/Cut/Cut.js","shapes/Premise/Premise.js","util/collisions.js","sounds/pop.wav","util/otherUtil.js","components/Paper/Sheet/Sheet.js","components/Paper/History/HistoryItem.jsx","components/Paper/History/History.jsx","components/Paper/UtilBar/UtilBar.jsx","components/Paper/UtilBar/UtilBarItem.jsx","components/Paper/Paper.jsx","components/Button/Button.jsx","components/ButtonGroup/ButtonGroup.jsx","util/proof-util.js","components/SideBar/SideBar.jsx","components/Modal/Modal.jsx","components/Workspace/Workspace.jsx","components/App/App.jsx","index.js"],"names":["MenuItem","props","styling","SVGS","id","xmlns","viewBox","width","height","className","d","transform","style","fill","text","img","custom_style","classString","onClick","label","fontSize","MenuBar","MenuItems","left","window","open","marginLeft","importMainGraph","exportMainGraph","right","muted","handleMuteToggle","map","menu_item","E","this","mousePosition","x","y","keys","which","key","isMouseDown","toLocaleLowerCase","$","document","on","event","clientX","clientY","color","background","odd","inactive","active","even","default","CUT_DEFAULTS","position","size","attrs","rect","class","stroke","strokeWidth","ref","graph","Cut","markup","tagName","selector","type","config","sheet","options","_","cloneDeep","Object","assign","child","attributes","cut","level","addTo","addTools","Audio","Snip","play","hasparent","get","parent","getCell","unembed","embed","toBack","treeResize","getParentCell","children","getEmbeddedCells","remove","handleCollisions","paper","handleDeleteCell","embeds","forEach","obliterate","destroy","colorByLevel","premise","element","elementView","findView","jpaper","removeTools","boundaryTool","joint","Boundary","NWresizeTool","Button","createResizeTool","cursor","NEresizeTool","SWresizeTool","SEresizeTool","el","resize_mousedown","bind","rect_tools","toolsView","ToolsView","tools","hideTools","Element","prev_pos","current_pos","MIN_SIZE","target","attr","resize_mouseup","direction","getAttribute","resize_mousemove","stopPropagation","data","delta","modifiers","size_x","size_y","pos_x","pos_y","RangeError","set","off","onGraphUpdate","r","offset","substring","rotate","PREMISE_DEFAULTS","Premise","fast","findSmallestCell","cells","length","smallest_area","smallest_cell","cell","area","contains","bbox","otherbbox","bbox_info","otherbbox_info","overlapsCells","cell_collisions","intersects","getBoundingBox","push","mainbbox","cellInArray","arr","e","NSPremise","define","NSCut","DEFAULT_BACKGROUND_COLORS","Sheet","handlePlayAudio","Graph","cellNamespace","nameSpace","spacing","mute","create","pop","Pop","collisions","snip","clear","clones","clone","resetCells","exported","getCells","JSON","stringify","json","parsed","parse","new_element","addPremise","addCut","dom_element","trigger","clean","cellbbox","potential_parents","findPotentialParents","filterChildren","treeToFront","elements_inside","findElementsInside","pack","cleanOverlaps","root","findRoot","pack_rec","siblings","siblingsbbox","min_x","max_x","min_y","max_y","i","getCellsBoundingBox","roots","getCellsByLevel","sort","a","b","getArea","current","next","overlaps","invader","separate","dupe","main","invaderbbox","shared_x","shared_y","Math","abs","dir","sign","treeMove","result","elements","targetbbox","new_child_bbox","potential_children","node","toFront","subgraph","selected","root_clone","new_root","subgraphToGraph","findCellInSubgraph","alert","resize_value","center_nodes","color_config","parity","next_children","HistoryItem","prevProps","prevState","num","total","importCells","scaleContentToFit","Paper","getElementById","model","preventContextMenu","clickThreshold","updateViews","setInteractivity","closest","addClass","removeClass","backgroundColor","React","Component","History","handleJump","setState","index","handleHistoryJump","getItem","MAX_SIZE","batch_mode","batch_state","locked","state","callback","item","splice","shift","console","error","history_item","id_prefix","UtilBar","handleChangeActive","Children","isValidElement","cloneElement","UtilBarItem","icon","PAPER_SIZE","history","lock","unlock","log","onKeyUp","keyCode","previousPremiseCode","canInsertPremise","onKeyDown","getMode","selected_premise","delete_noise","Delete","shiftKey","toLocaleUpperCase","code","charCodeAt","ctrlKey","metaKey","getRelativeMousePos","saved_template","cloneSubgraph","deep","mouse_adjusted","addSubgraph","onMouseDown","initial_cut_pos","paper_element","getBoundingClientRect","top","temp_cut","preventDefault","onMouseUp","startBatch","action","name","handleClearAction","endBatch","onMouseMove","min","onMouseEnter","focus","paperRoot","createRef","show","setPaperEvents","exportAsJSON","css","graphJSON","toJSON","file","Blob","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","input","onchange","ev","files","reader","FileReader","readAsText","onload","readerEvent","content","confirm","dataObj","parseJSON","ids","hasOwnProperty","mode","sourcePaper","modal_cells","addCells","cellView","evt","showTools","modelView","undefined","nextAction","handleActionChange","new_state","undo","redo","styles","wrapperWidth","wrapperHeight","tabIndex","faHistory","handleInitializeHistory","tooltip_text","defaultProps","faCoffee","ButtonGroup","buttons","button","inferenceInsertion","arguments","__proto__","constructor","handleOpenModal","inferenceErasure","insertDoubleCut","Error","multipliers","new_cuts","deleteDoubleCut","iteration","iterationend","model_clone","sub_id","legalIteration","deiteration","model_id","ancestor","matchingModel","all_models","models","model_one","model_two","model_one_children","model_two_children","outer","search","indexOf","SideBar","faPlus","faVectorSquare","proof","faMinus","faPlusSquare","faMinusSquare","faClone","faEraser","charAt","toUpperCase","slice","onStateSwitch","faExchangeAlt","Modal","Event","Workspace","handleModalExit","showModal","insertPosition","handleModalInsert","proofPaper","importFromJSON","modalPaper","mainPaper","hide","copy","handleStateSwitch","paper_id","App","item_label","mute_button","find","mute_button_label","toggleClass","hasClass","html","audio","sound","getGraphForExport","workspace","export","import","setGraphDataOnImport","fromJSON","pause","currentTime","APP","ReactDOM","render"],"mappings":"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","file":"static/js/main.e491afaa.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MenuBar.css'\n\nexport default function MenuItem(props) {\n\n\n  const styling = `\n    .cls-1{\n      fill:#ed6b4d;\n      stroke:#e2f3f7;\n      stroke-miterlimit:10;\n      stroke-width:12px;\n    }\n    .cls-2 {\n      fill:#e2f3f7;\n    }\n  `;\n\n  //get SVG path of icon to include instead of PNG because unless we make the PNGs the correct size to begin with,\n  //it will cause weird scaling issues when it tries to fix the aspect ratio\n  const SVGS = {\n    './MenuIcons/logo.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.23 762.74\" width=\"8vh\" height=\"8vh\"><defs><style>{styling}</style></defs><path className=\"cls-1\" d=\"M1022,769v96.74q0,19.28-3.79,30.81a49,49,0,0,1-13.94,20.83q-10.17,9.28-26,17.9Q932.46,960,890.12,971.41t-92.27,11.36q-58.17,0-106-17.91t-81.58-52q-33.75-34.08-51.81-82.62Q543.75,790.83,541,743.9c-1,0-1.92,0-2.9,0H256.29q-33.87,0-48.71-15t-14.84-48.54V295.58q0-22.33,6.63-36.49a41.18,41.18,0,0,1,20.78-20.6Q234.3,232,256.29,232H530.06q24.78,0,36.84,11t12,28.81q0,18.15-12,29.15t-36.84,11H296.45V437.7h215.1q23.74,0,35.44,10.65t11.7,28.11q0,17.48-11.52,28.46t-35.62,11H296.45V661.53H538.09q3.76,0,7.26.27a287.88,287.88,0,0,1,12.56-47.73q17.55-48.89,51.64-83t83-52.15q48.88-18.07,110.85-18.08,51,0,90.2,13.6t63.69,34.25q24.43,20.67,36.83,43.73t12.39,41q0,19.29-14.28,32.88a47.94,47.94,0,0,1-34.26,13.6,46.05,46.05,0,0,1-21.17-5.17,48,48,0,0,1-17-14.46q-18.93-29.6-32-44.75T852.42,550q-22.2-10.34-56.63-10.33-35.46,0-63.34,12.22a130.87,130.87,0,0,0-47.68,35.46q-19.8,23.24-30.3,57T644,719.07q0,88.81,40.8,136.67t113.77,47.85a231.88,231.88,0,0,0,66.62-9.3,337.73,337.73,0,0,0,63.17-26.51V785.85H849.15q-28.57,0-43.21-8.61T791.31,748q0-16.86,12.22-27.88t33.22-11h116q21.35,0,36.15,3.79a40.81,40.81,0,0,1,23.92,16.87Q1022,742.82,1022,769Z\" transform=\"translate(-186.74 -226.03)\"/></svg>\n    ,'./MenuIcons/export.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.24 898.25\" width=\"4vh\" height=\"4vh\"><defs><style>{styling}</style></defs><path className=\"cls-2\" d=\"M1020.62,789.78v249a40.18,40.18,0,0,1-40.18,40.17H219.56a40.18,40.18,0,0,1-40.18-40.17v-249a40.18,40.18,0,0,1,40.18-40.18h58.25A40.18,40.18,0,0,1,318,789.78V940.34H882V789.78a40.18,40.18,0,0,1,40.17-40.18h58.25A40.18,40.18,0,0,1,1020.62,789.78Z\" transform=\"translate(-179.38 -180.69)\"/><path className=\"cls-2\" d=\"M384.19,390.1,533.64,240.66l48.21-48.21a38.5,38.5,0,0,1,55.4,0l48.22,48.22L834.9,390.1a40.17,40.17,0,0,1,0,56.81L793.71,488.1a40.17,40.17,0,0,1-56.81,0L679,430.18V751.79A40.18,40.18,0,0,1,638.81,792H580.55a40.18,40.18,0,0,1-40.17-40.17V429.91L482.19,488.1a40.17,40.17,0,0,1-56.81,0l-41.19-41.19A40.17,40.17,0,0,1,384.19,390.1Z\" transform=\"translate(-179.38 -180.69)\"/><path className=\"cls-2\" d=\"M665.69,620.82a40.39,40.39,0,0,1-5.61,7L618.9,669a40.08,40.08,0,0,1-29.11,11.76A40,40,0,0,0,617.48,669Z\" transform=\"translate(-179.38 -180.69)\"/><path className=\"cls-2\" d=\"M589.79,680.79A40,40,0,0,1,560.67,669l-41.19-41.19a40.14,40.14,0,0,1-5.62-7L562.08,669A40,40,0,0,0,589.79,680.79Z\" transform=\"translate(-179.38 -180.69)\"/></svg>\n    ,'./MenuIcons/import.png': <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.24 898.26\" width=\"4vh\" height=\"4vh\"><defs><style>{styling}</style></defs><path className=\"cls-2\" d=\"M1020.62,789.78v249a40.18,40.18,0,0,1-40.18,40.17H219.56a40.18,40.18,0,0,1-40.18-40.17v-249a40.18,40.18,0,0,1,40.18-40.18h58.25A40.18,40.18,0,0,1,318,789.78V940.34H882V789.78a40.18,40.18,0,0,1,40.17-40.18h58.25A40.18,40.18,0,0,1,1020.62,789.78Z\" transform=\"translate(-179.38 -180.68)\"/><path className=\"cls-2\" d=\"M834.91,582.54,685.46,732l-48.21,48.21a38.5,38.5,0,0,1-55.4,0L533.63,732,384.2,582.54a40.17,40.17,0,0,1,0-56.81l41.19-41.19a40.17,40.17,0,0,1,56.81,0l57.92,57.92V220.85a40.18,40.18,0,0,1,40.17-40.17h58.26a40.18,40.18,0,0,1,40.17,40.17V542.73l58.19-58.19a40.17,40.17,0,0,1,56.81,0l41.19,41.19A40.17,40.17,0,0,1,834.91,582.54Z\" transform=\"translate(-179.38 -180.68)\"/><path className=\"cls-2\" d=\"M665.69,620.82a40.39,40.39,0,0,1-5.61,7L618.9,669a40.08,40.08,0,0,1-29.11,11.76A40,40,0,0,0,617.48,669Z\" transform=\"translate(-179.38 -180.68)\"/><path className=\"cls-2\" d=\"M589.79,680.79A40,40,0,0,1,560.67,669l-41.19-41.19a40.14,40.14,0,0,1-5.62-7L562.08,669A40,40,0,0,0,589.79,680.79Z\" transform=\"translate(-179.38 -180.68)\"/></svg>\n    ,'muted': <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M301.2 34.85c-11.5-5.188-25.02-3.122-34.44 5.253L131.8 160H48c-26.51 0-48 21.49-48 47.1v95.1c0 26.51 21.49 47.1 48 47.1h83.84l134.9 119.9c5.984 5.312 13.58 8.094 21.26 8.094c4.438 0 8.972-.9375 13.17-2.844c11.5-5.156 18.82-16.56 18.82-29.16V64C319.1 51.41 312.7 40 301.2 34.85zM513.9 255.1l47.03-47.03c9.375-9.375 9.375-24.56 0-33.94s-24.56-9.375-33.94 0L480 222.1L432.1 175c-9.375-9.375-24.56-9.375-33.94 0s-9.375 24.56 0 33.94l47.03 47.03l-47.03 47.03c-9.375 9.375-9.375 24.56 0 33.94c9.373 9.373 24.56 9.381 33.94 0L480 289.9l47.03 47.03c9.373 9.373 24.56 9.381 33.94 0c9.375-9.375 9.375-24.56 0-33.94L513.9 255.1z\" style={{fill: 'rgb(255, 255, 255)'}}/></svg>\n    , 'unmuted' : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M412.6 182c-10.28-8.334-25.41-6.867-33.75 3.402c-8.406 10.24-6.906 25.35 3.375 33.74C393.5 228.4 400 241.8 400 255.1c0 14.17-6.5 27.59-17.81 36.83c-10.28 8.396-11.78 23.5-3.375 33.74c4.719 5.806 11.62 8.802 18.56 8.802c5.344 0 10.75-1.779 15.19-5.399C435.1 311.5 448 284.6 448 255.1S435.1 200.4 412.6 182zM473.1 108.2c-10.22-8.334-25.34-6.898-33.78 3.34c-8.406 10.24-6.906 25.35 3.344 33.74C476.6 172.1 496 213.3 496 255.1s-19.44 82.1-53.31 110.7c-10.25 8.396-11.75 23.5-3.344 33.74c4.75 5.775 11.62 8.771 18.56 8.771c5.375 0 10.75-1.779 15.22-5.431C518.2 366.9 544 313 544 255.1S518.2 145 473.1 108.2zM534.4 33.4c-10.22-8.334-25.34-6.867-33.78 3.34c-8.406 10.24-6.906 25.35 3.344 33.74C559.9 116.3 592 183.9 592 255.1s-32.09 139.7-88.06 185.5c-10.25 8.396-11.75 23.5-3.344 33.74C505.3 481 512.2 484 519.2 484c5.375 0 10.75-1.779 15.22-5.431C601.5 423.6 640 342.5 640 255.1S601.5 88.34 534.4 33.4zM301.2 34.98c-11.5-5.181-25.01-3.076-34.43 5.29L131.8 160.1H48c-26.51 0-48 21.48-48 47.96v95.92c0 26.48 21.49 47.96 48 47.96h83.84l134.9 119.8C272.7 477 280.3 479.8 288 479.8c4.438 0 8.959-.9314 13.16-2.835C312.7 471.8 320 460.4 320 447.9V64.12C320 51.55 312.7 40.13 301.2 34.98z\" style={{fill: 'rgb(255, 255, 255)'}}/></svg>\n    , 'settings' : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M495.9 166.6C499.2 175.2 496.4 184.9 489.6 191.2L446.3 230.6C447.4 238.9 448 247.4 448 256C448 264.6 447.4 273.1 446.3 281.4L489.6 320.8C496.4 327.1 499.2 336.8 495.9 345.4C491.5 357.3 486.2 368.8 480.2 379.7L475.5 387.8C468.9 398.8 461.5 409.2 453.4 419.1C447.4 426.2 437.7 428.7 428.9 425.9L373.2 408.1C359.8 418.4 344.1 427 329.2 433.6L316.7 490.7C314.7 499.7 307.7 506.1 298.5 508.5C284.7 510.8 270.5 512 255.1 512C241.5 512 227.3 510.8 213.5 508.5C204.3 506.1 197.3 499.7 195.3 490.7L182.8 433.6C167 427 152.2 418.4 138.8 408.1L83.14 425.9C74.3 428.7 64.55 426.2 58.63 419.1C50.52 409.2 43.12 398.8 36.52 387.8L31.84 379.7C25.77 368.8 20.49 357.3 16.06 345.4C12.82 336.8 15.55 327.1 22.41 320.8L65.67 281.4C64.57 273.1 64 264.6 64 256C64 247.4 64.57 238.9 65.67 230.6L22.41 191.2C15.55 184.9 12.82 175.3 16.06 166.6C20.49 154.7 25.78 143.2 31.84 132.3L36.51 124.2C43.12 113.2 50.52 102.8 58.63 92.95C64.55 85.8 74.3 83.32 83.14 86.14L138.8 103.9C152.2 93.56 167 84.96 182.8 78.43L195.3 21.33C197.3 12.25 204.3 5.04 213.5 3.51C227.3 1.201 241.5 0 256 0C270.5 0 284.7 1.201 298.5 3.51C307.7 5.04 314.7 12.25 316.7 21.33L329.2 78.43C344.1 84.96 359.8 93.56 373.2 103.9L428.9 86.14C437.7 83.32 447.4 85.8 453.4 92.95C461.5 102.8 468.9 113.2 475.5 124.2L480.2 132.3C486.2 143.2 491.5 154.7 495.9 166.6V166.6zM256 336C300.2 336 336 300.2 336 255.1C336 211.8 300.2 175.1 256 175.1C211.8 175.1 176 211.8 176 255.1C176 300.2 211.8 336 256 336z\" style={{fill: 'rgb(255, 255, 255)'}}/></svg>\n  }\n  // let size = props.text==='' ? '100%' : '70%';\n  let text = props.img==='' ? \"100%\" : \"70%\";\n  // let img_vis = props.img==='' ? \"hidden\" : \"visable\";\n\n  const style = props.custom_style;\n\n  return (\n    <div style={style} className={`menu-item ${props.classString || ''}`} onClick={props.onClick} aria-label={props.label}>\n      {SVGS[props.img]}\n      {/* <img style={{visibility:img_vis}} src={props.img} alt={props.text} width={size+\"\"} height={size+\"\"}/> */}\n      <h4 className=\"menu-item-label\" style={{fontSize: text}}>{props.text}</h4>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport MenuItem from './MenuItem.js';\nimport './MenuBar.css';\n\nexport default function MenuBar(props) {\n  //have to have menu items inside Menu Bar here since some buttons (such as the mute button) are responsible\n  //for updating the state of other components, so their on click event handlers will come through props\n  const MenuItems = {\n    //menu items that float left on the menu bar\n    left: [\n      {\n        text: '',\n        img: './MenuIcons/logo.png',\n        onClick: function(){\n          window.open('https://github.com/eddiekrystowski/existential-graphs')\n        },\n        custom_style: {\n          marginLeft: '0vw'\n        }\n      },\n      {\n        text: 'Existential Graphs',\n        img: '',\n        onClick: function(){\n          return;\n        },\n        custom_style: {\n          marginLeft: '1vw'\n        }\n      },\n      {\n        text: 'Import',\n        img: './MenuIcons/import.png',\n        onClick: props.importMainGraph,\n        custom_style: {\n          marginLeft: '10vw'\n        }\n      },\n      {\n        text: 'Export',\n        img: './MenuIcons/export.png',\n        onClick: props.exportMainGraph,\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      },\n    ],\n\n    //menu items that float right on the menu bar\n    right: [\n      {\n        text: props.muted  ? 'Muted' : 'Unmuted',\n        label: 'Toggle Sound',\n        classString: props.muted  ? 'muted' : 'unmuted',\n        img: props.muted  ? 'muted' : 'unmuted',\n        onClick: props.handleMuteToggle,\n        custom_style: {\n          marginLeft: '5vw'\n        }\n      },\n      {\n        text: 'Settings',\n        img: 'settings',\n        onClick: () => {},\n        custom_style: {\n          marginLeft: '5vw',\n          height: '4vw',\n          width: '4vw',\n        }\n      }\n    ]\n  }\n  \n    //Funtions for the above MenuItems\n    //all were moved... keeping comment here for now in case we add more\n    // later we can put them here\n\n  return (\n    <div className=\"header-bar\">\n      <div className=\"header-bar-left\">\n        {MenuItems.left.map(menu_item => <MenuItem \n                                    text={menu_item.text} \n                                    img={menu_item.img}\n                                    classString={menu_item.classString} \n                                    onClick={menu_item.onClick} \n                                    custom_style={menu_item.custom_style} \n                                    label={menu_item.label}\n                                    key={menu_item.text}\n                                  />)}\n      </div>\n      <div className=\"header-bar-right\">\n        {MenuItems.right.map(menu_item => <MenuItem \n                                    text={menu_item.text} \n                                    img={menu_item.img} \n                                    classString={menu_item.classString} \n                                    onClick={menu_item.onClick} \n                                    custom_style={menu_item.custom_style} \n                                    label={menu_item.label}\n                                    key={menu_item.text}\n                                  />)}\n      </div>\n    </div>\n  )\n}","import $ from \"jquery\";\n\nclass EventController {\n    constructor() {\n        this.mousePosition =  {x: 0, y: 0};\n        this.keys = [];\n        this.which = 0;\n        this.key = '';\n        this.isMouseDown = false;\n    }\n\n    isActive(key) {\n        return this.key.toLocaleLowerCase() === key || this.which === key || this.keys[key] === true;\n    }\n\n}\n\nlet E = new EventController();\n\n$(document).on('keydown', function(event) {\n    E.keys[event.which] = true;\n    E.which = event.which;\n    E.key = event.key;\n});\n\n$(document).on('keyup', function(event){\n    E.keys[event.which] = false;\n    E.which = event.which;\n    E.key = event.key;\n});\n\n$(document).on('mousemove', function(event) {\n    E.mousePosition = {\n        x: event.clientX,\n        y: event.clientY\n    }\n});\n\n$(document).on('mousedown', function(event) {\n    E.isMouseDown = true;\n});\n\n$(document).on('mouseup', function(event) {\n    E.isMouseDown = false;\n});\n\nexport default E;","export default __webpack_public_path__ + \"static/media/delete.775131a8.wav\";","export default __webpack_public_path__ + \"static/media/snip.6f2bc4d7.wav\";","export let color = {\n    shapes: {\n        background: {\n            odd: {\n                inactive: \"#f2f8fc\",\n                active: \"#f2f8fcE0\"\n            },\n            even: {\n                inactive: \"#ffffff\",\n                active: \"#ffffffE0\"\n            },\n            default: {\n                color: \"#ffffff00\"\n            }\n        }\n    }\n}","// class for cuts\nimport * as joint from 'jointjs'\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport Snip from '../../sounds/snip.wav'\nimport { color } from '../../util/color.js';\n\n\nconst CUT_DEFAULTS = {\n    position: {\n        x: 10,\n        y: 10\n    },\n    size: {\n        width: 40, \n        height: 40\n    },\n    attrs: {\n        rect: {\n            class: 'cut_rect',\n            width: 40,\n            height: 40,\n            fill: '#ffffff99',\n            stroke: 'black',\n            strokeWidth: 2,\n        },\n        text: {\n            class: 'cut_text',\n            fontSize: 30,\n            'ref-x': 0.5,\n            'ref-y': 0.5,\n            ref: 'rect',\n            'y-alignment': 'middle',\n            'x-alignment': 'middle',\n        }\n    },\n    graph: {}\n}\n\nexport class Cut extends joint.dia.Element {\n    defaults() {\n        return {\n            ...super.defaults,\n            type: \"dia.Element.Cut\",\n            attrs: {\n                rect: CUT_DEFAULTS.attrs.rect,\n                text: CUT_DEFAULTS.attrs.text\n            }\n        }\n    }\n\n    markup = [{\n        tagName: \"rect\",\n        selector: \"body\"\n    },{\n        tagName: \"text\",\n        selector: \"label\"\n    }]\n\n    //custom constructor for shape, should more or less always use this over the default constructor\n    create(config, sheet) {\n        const options = _.cloneDeep(CUT_DEFAULTS);\n        if (config) {\n            options.position = Object.assign(options.position, config.position);\n            options.size = Object.assign(options.size, config.size);\n            options.attrs.rect = Object.assign(options.attrs.rect, config.attrs && config.attrs.rect);\n            options.attrs.text = Object.assign(options.attrs.text, config.attrs && config.attrs.text);\n        }\n        options.sheet = sheet;\n\n        // adjust size / position if cut was created with a child\n        // in order for undo/redo to function properly\n        if (config.child) {\n            const child = config.child;\n            options.attrs.rect.width = child.attributes.attrs.rect.width + options.attrs.rect.width;\n            options.attrs.rect.height = child.attributes.attrs.rect.height + options.attrs.rect.height;\n            options.position = {\n                x: child.attributes.position.x - (options.attrs.rect.width - child.attributes.attrs.rect.width) / 2,\n                y: child.attributes.position.y - (options.attrs.rect.height - child.attributes.attrs.rect.height) / 2,\n            }\n        }\n       \n        const cut = new Cut({\n            markup: '<rect/><text/>',\n            position: {\n                ...options.position\n            },\n            size: {\n                ...options.size\n            },\n            attrs: {\n                rect: {\n                    ...options.attrs.rect\n                },\n                text: {\n                    ...options.attrs.text\n                },\n                level: 0\n            },\n            // set custom attributes here:\n            sheet: options.sheet\n        });\n\n        //have to set this out here since we actually do want a reference to this object, not a copy\n        cut.sheet = options.sheet;\n\n        cut.addTo(cut.sheet.graph);\n        //add tools (some events events also)\n        this.addTools(cut);\n        let audio = new Audio(Snip);\n        audio.play();\n        //check for children\n        if (config && config.child) {\n            let child = config.child;\n            let hasparent = false;\n            if (child.get(\"parent\")) {\n                let parent = cut.sheet.graph.getCell(child.get(\"parent\"));\n                parent.unembed(child);\n                parent.embed(cut)\n                parent.toBack()\n                hasparent = true;\n            }\n            cut.embed(child)\n            if (hasparent) {\n                cut.sheet.treeResize(cut, cut.attributes.attrs.rect.width / 2);\n            }\n        }\n        //console.log(cut);\n        return cut;\n    }\n\n    destroy() {\n        //check if cut has parents or children, if so children become new children of parent;\n        let parent = this.getParentCell();\n        let children = this.getEmbeddedCells()\n        for (const child of children) {\n            this.unembed(child)\n        }\n        this.remove();\n        if (parent) {\n            this.sheet.handleCollisions(parent);\n        }\n\n        this.sheet.paper.handleDeleteCell();\n    }\n    //Destroys itself and all decendants\n    obliterate() {\n        //  If non-empty cell, destroy all children\n        let children = this.attributes.embeds;\n        if (children) children.forEach(child => {this.sheet.graph.getCell(child).obliterate()});\n        //  Then destroy self\n        this.destroy();\n  }\n\n    active() {\n        //cut is being interacted with (ie grabbing, dragging or moving etc)\n        this.sheet.colorByLevel(this, {even:color.shapes.background.even.active, odd:color.shapes.background.odd.active, premise: color.shapes.background.default.color});\n    }\n\n    inactive() {\n        //cut is not being interacted with (ie grabbing, dragging or moving etc)\n        this.sheet.colorByLevel(this, {even:color.shapes.background.even.inactive, odd:color.shapes.background.odd.inactive, premise: color.shapes.background.default.color});\n    }\n\n    getBoundingBox() {\n        return  {\n                    width: this.attributes.attrs.rect.width,\n                    height: this.attributes.attrs.rect.height,\n                    x: this.attributes.position.x,\n                    y: this.attributes.position.y\n                }\n    }\n\n    getArea() {\n        return this.attributes.attrs.rect.width * this.attributes.attrs.rect.height;\n    }\n\n    // move(position, timestep = 1000, frames = 500) {\n    //     let difference = {\n    //       x: position.x - this.attributes.position.x,\n    //       y: position.y - this.attributes.position.y\n    //     }\n    //     let step = {\n    //       x: difference.x / frames,\n    //       y: difference.y / frames\n    //     }\n    //     for (let i = 0; i < frames; i++) {\n    //       this.position(this.attributes.position.x + step.x, this.attributes.position.y + step.y);\n    //       this.sleep(timestep);\n    //     }\n    //     console.log(\"move over!\");\n    //   }\n  \n    //   sleep(ms) {\n    //     return new Promise(resolve => setTimeout(resolve, ms));\n    //   }\n\n    //TODO: refactor function to not take in element. Instead, can we either store model/element in Cut class or access it directly?\n    ///     ( i think we can? )\n    addTools(element) {\n        //element view is in charge of rendering the elements on the paper\n        let elementView = element.findView(element.sheet.paper.jpaper);\n        //clear any old tools\n        elementView.removeTools();\n        // boundary tool shows boundaries of element\n        let boundaryTool = new joint.elementTools.Boundary();\n    \n        let NWresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"0%\",\n            y:\"0%\",\n            cursor: \"nw-resize\"\n        }));\n        let NEresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"100%\",\n            y:\"0%\",\n            cursor: \"ne-resize\"\n        }));\n        let SWresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"0%\",\n            y:\"100%\",\n            cursor: \"sw-resize\"\n        }));\n        let SEresizeTool = new joint.elementTools.Button(createResizeTool({\n            x: \"100%\",\n            y:\"100%\",\n            cursor: \"se-resize\"\n        }));\n    \n        //add event handlers to tools for resizing\n        $(NWresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(NEresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(SWresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n        $(SEresizeTool.el).on('mousedown', resize_mousedown.bind(element));\n    \n        let rect_tools = [boundaryTool, NWresizeTool, NEresizeTool, SEresizeTool, SWresizeTool];\n    \n        let toolsView = new joint.dia.ToolsView({\n            tools: rect_tools\n        });\n    \n        elementView.addTools(toolsView);\n        //start with tools hidden\n        elementView.hideTools();\n        // element.on(\"change:position\", function (eventView) {\n        //     element.toFront();\n        // });\n        // --- end of paper events -----\n    }\n}\n\nObject.assign(joint, {\n    \"dia.Element\": {\n        Cut\n    }\n})\n\n\n\n\n//global objects for cut resizing\nlet prev_pos = {\n    x: 0,\n    y: 0\n}\n\nlet current_pos = {\n    x: 0,\n    y: 0\n}\n\n//TODO: THIS NEEDS TO CHANGE BASED ON HOW MANY THINGS ARE IN THE\n//CUT AND WHERE THEY ARE\nconst MIN_SIZE = {\n    width: 40,\n    height: 40\n}\n\n/**\n * Event handler that sets up resizing when the user first puts their mouse down\n * on a resize tool.\n * @param {MouseEvent} event\n */\nfunction resize_mousedown(event) {\n    const target = this.sheet.graph.getCell($(event.target).parent().attr('model-id'));\n    prev_pos = {\n        x: event.clientX,\n        y: event.clientY\n    }\n    \n    $(document).on('mouseup', { target }, resize_mouseup);\n    $(document).on('mousemove', { target, direction: event.target.getAttribute('data-direction') },  resize_mousemove);\n    event.stopPropagation();\n\n    if (target.get('parent')) {\n        this.sheet.graph.getCell(target.get('parent')).unembed(target);\n    }\n}\n\n/**\n * Performs different resizing algorithms based on the direction of resizing\n * @param {MouseEvent} event `event.data` has the following data:\n *          * target: Cut object representing what Cut the tool belongs to\n */\nfunction resize_mousemove(event) {\n    //update current pos to mouse position\n    current_pos = {\n        x: event.clientX,\n        y: event.clientY\n    }\n\n    //extract copy of size from target Cut \n    const size = {\n        width: event.data.target.attributes.attrs.rect.width,\n        height: event.data.target.attributes.attrs.rect.height\n    };\n\n    //extract copy of position from target Cut\n    const position = {\n        x: event.data.target.attributes.position.x,\n        y: event.data.target.attributes.position.y\n    }\n\n    //calclulate change in mouse position\n    const delta = {\n        x: current_pos.x - prev_pos.x,\n        y: current_pos.y - prev_pos.y\n    }\n\n    //define modifiers to determine how\n    //size/position should respond to the deltas\n    const modifiers = {\n        size_x: 1,\n        size_y: 1,\n        pos_x: 0,\n        pos_y: 0\n    }\n\n    //set the modifiers based on the direction we are resizing\n    switch (event.data.direction) {\n        case 'nw':\n            modifiers.size_x = -1;\n            modifiers.size_y = -1;\n            modifiers.pos_x = 1;\n            modifiers.pos_y = 1;\n            break;\n        case 'ne':\n            modifiers.size_x = 1;\n            modifiers.size_y = -1;\n            modifiers.pos_x = 0;\n            modifiers.pos_y = 1;\n            break;\n        case 'sw':\n            modifiers.size_x = -1;\n            modifiers.size_y = 1;\n            modifiers.pos_x = 1;\n            modifiers.pos_y = 0;\n            break;\n        case 'se':\n            modifiers.size_x = 1;\n            modifiers.size_y = 1;\n            modifiers.pos_x = 0;\n            modifiers.pos_y = 0;\n            break;\n        default:\n            throw new RangeError('Invalid direction value. Expected nw, ne, sw, se. Got ' + event.data.direction);\n    }\n    \n    //if the resize will put us at under MIN_SIZE, then set respective delta to 0 to cancel resize\n    if (size.width + modifiers.size_x * delta.x < MIN_SIZE.width) delta.x = 0;\n    if (size.height + modifiers.size_y * delta.y < MIN_SIZE.height) delta.y = 0;\n\n    //set size based on modifiers and deltas\n    event.data.target.attr('rect/width',  size.width + modifiers.size_x * delta.x);\n    event.data.target.attr('rect/height', size.height + modifiers.size_y * delta.y);\n\n    //adjust position to offset size changes in certain directions\n    event.data.target.set('position',  { x: position.x + modifiers.pos_x * delta.x, y: position.y + modifiers.pos_y * delta.y});\n    \n    //copy current_pos to prev_pos\n    prev_pos = Object.assign({}, current_pos);\n}\n\n/**\n * Cleans up resize event\n * @param {MouseEvent} event `event.data` has the following data:\n *          * target: Cut object representing what Cut the tool belongs to\n */\nfunction resize_mouseup (event) {\n    $(document).off('mouseup', resize_mouseup);\n    $(document).off('mousemove', resize_mousemove);\n    event.data.target.sheet.handleCollisions(event.data.target);\n    event.data.target.sheet.paper.onGraphUpdate();\n}\n\nfunction createResizeTool(config) {\n    let r = (config && config.r) || 7;\n    let fill = (config && config.fill) || \"transparent\";\n    let x = (config && config.x) || \"0%\";\n    let y = (config && config.y) || \"0%\";\n    let offset = (config && config.offset) || {x: 0, y:0};\n    let cursor = (config && config.cursor) || \"nw-resize\";\n\n    let ResizeTool = {\n        markup: [{\n            tagName: 'circle',\n            selector: 'button',\n            attributes: {\n                'r': r,\n                'fill': fill,\n                'cursor': cursor,\n                'data-direction': cursor.substring(0,2)\n            }\n        }],\n        x: x,\n        y: y,\n        offset: offset,\n        rotate: true,\n    };\n    return ResizeTool\n}\n\n","import * as joint from 'jointjs'\nimport _ from 'lodash'\nimport './Premise.css'\n// class for premises (letters)\n\nconst PREMISE_DEFAULTS = {\n  position: {\n    x: 10,\n    y: 10\n  },\n  size: {\n    width: 40,\n    height: 40\n  },\n  attrs: {\n    rect: {\n      class: 'premise_rect',\n      width: 40, \n      height: 40, \n      fill: '#ffffff00', \n      stroke: 'black', \n      strokeWidth: 0\n    },\n    text: {\n      class: 'premise_text',\n      text: 'P',\n      fontSize: 50,\n      'ref-x': 0.5,\n      'ref-y': 0.5,\n      ref: 'rect',\n      'x-alignment': 'middle',\n      'y-alignment': 'middle'\n    }\n  },\n  graph: {}\n}\n\nexport class Premise extends joint.dia.Element {\n    defaults() {\n        return {\n            ...super.defaults,\n            type: \"dia.Element.Premise\",\n            attrs: {\n                rect: PREMISE_DEFAULTS.attrs.rect,\n                text: PREMISE_DEFAULTS.attrs.text\n            }\n        }\n    }\n\n    markup = [{\n        tagName: \"rect\",\n        selector: \"body\"\n    },{\n        tagName: \"text\",\n        selector: \"label\"\n    }]\n\n    //custom constructor for shape, should more or less always use this over the default constructor\n    create(config, sheet, fast) {\n        const options = _.cloneDeep(PREMISE_DEFAULTS);\n\n        if (config) {\n          options.position = Object.assign(options.position, config.position);\n          options.size = Object.assign(options.size, config.size);\n          options.attrs.rect = Object.assign(options.attrs.rect, config.attrs && config.attrs.rect);\n          options.attrs.text = Object.assign(options.attrs.text, config.attrs && config.attrs.text);\n        }\n        options.sheet = sheet;\n\n        const premise = new Premise({\n          markup: '<g class=\"rotatable\"><rect/><text/></g>',\n          position: {\n              ...options.position\n          },\n          size: {\n              ...options.size\n          },\n          attrs: {\n              rect: {\n                  ...options.attrs.rect\n              },\n              text: {\n                  ...options.attrs.text\n              },\n              level: 0\n          },\n          // set custom attributes here:\n        });\n\n        //have to set this out here since we actually do want a reference to this object, not a copy\n        premise.sheet = options.sheet;\n\n        premise.addTo(premise.sheet.graph)\n      \n        //add tools (some events events also)\n        if(!fast) this.addTools(premise);\n\n        return premise;\n    }\n\n    destroy() {\n      this.remove();\n      this.sheet.paper.handleDeleteCell();\n    }\n\n    obliterate() {\n      this.destroy();\n    }\n  \n    active() {\n      return;\n    }\n\n    inactive(){\n      return;\n    }\n\n    getBoundingBox() {\n      return  {\n                width: this.attributes.attrs.rect.width,\n                height: this.attributes.attrs.rect.height,\n                x: this.attributes.position.x,\n                y: this.attributes.position.y\n              }\n    }\n\n    getArea() {\n      return this.attributes.attrs.rect.width * this.attributes.attrs.rect.height;\n    }\n        \n    // move(position, timestep = 1000, frames = 500) {\n    //   let difference = {\n    //     x: position.x - this.attributes.position.x,\n    //     y: position.y - this.attributes.position.y\n    //   }\n    //   let step = {\n    //     x: difference.x / frames,\n    //     y: difference.y / frames\n    //   }\n    //   for (let i = 0; i < frames; i++) {\n    //     this.position(this.attributes.position.x + step.x, this.attributes.position.y + step.y);\n    //     this.sleep(timestep);\n    //   }\n    //   console.log(\"move over!\");\n    // }\n\n    // sleep(ms) {\n    //   return new Promise(resolve => setTimeout(resolve, ms));\n    // }\n    \n\n    //TODO: see Cut.addTools()\n    addTools(element) {\n      //element view is in charge of rendering the elements on the paper\n      let elementView = element.findView(element.sheet.paper.jpaper);\n      //clear any old tools\n      elementView.removeTools();\n      // boundary tool shows boundaries of element\n      let boundaryTool = new joint.elementTools.Boundary();\n  \n      let rect_tools = [boundaryTool];\n  \n      let toolsView = new joint.dia.ToolsView({\n          tools: rect_tools\n      });\n  \n      elementView.addTools(toolsView);\n      //start with tools hidden\n      elementView.hideTools();\n      // element.on(\"change:position\", function (eventView) {\n      //     element.toFront();\n      // });\n      // --- end of paper events -----\n  }\n\n}\n\nObject.assign(joint.shapes, {\n    \"dia.Element\": {\n        Premise\n    }\n})\n\n","export function findSmallestCell(cells) {\n    // returns the smallest cell (by area) of an array of joint.dia.Cell objects\n    if (cells.length === 0) { return undefined }\n    let smallest_area = cells[0].attributes.attrs.rect.width * cells[0].attributes.attrs.rect.height;\n    let smallest_cell = cells[0];\n    for (const cell of cells) {\n        let width = cell.attributes.attrs.rect.width;\n        let height = cell.attributes.attrs.rect.height;\n        let area = width * height;\n        if (area < smallest_area) {\n            smallest_area = area;\n            smallest_cell = cell;\n        }\n    }\n    return smallest_cell\n}\n\nexport function contains(bbox, otherbbox) {\n    // returns true of otherbbox fits completely inside of bbox\n    let bbox_info = {\n        left_x: bbox.x,\n        right_x: bbox.x + bbox.width,\n        top_y: bbox.y,\n        bottom_y: bbox.y + bbox.height\n    }\n    let otherbbox_info = {\n        left_x: otherbbox.x,\n        right_x: otherbbox.x + otherbbox.width,\n        top_y: otherbbox.y,\n        bottom_y: otherbbox.y + otherbbox.height\n    }\n    if (bbox_info.left_x < otherbbox_info.left_x && bbox_info.right_x > otherbbox_info.right_x && bbox_info.top_y < otherbbox_info.top_y && bbox_info.bottom_y > otherbbox_info.bottom_y) {\n        //console.log(\"bbox contains otherbbox\", bbox, otherbbox);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function overlapsCells(target, cells) {\n    let cell_collisions = []\n    for (const cell of cells) {\n        if (target.id === cell.id) continue;\n        if (intersects(target.getBoundingBox(), cell.getBoundingBox())) {\n            cell_collisions.push(cell);\n        }\n    }\n    return cell_collisions;\n}\n\nexport function intersects(mainbbox, otherbbox) {\n    if (contains(mainbbox, otherbbox) || contains(otherbbox, mainbbox)) {\n        return true;\n    }\n\n    // check if bounding boxes overlap one another\n    \n    //check if either bbox is completely above the other\n    //      bbox.y          is the top edge\n    //      bbox.y + height is the bottom edge\n    //check if some bottom edge is < some top edge\n    if (mainbbox.y + mainbbox.height < otherbbox.y || otherbbox.y + otherbbox.height < mainbbox.y) {\n        //one of the bbox is completely above the other\n        return false;\n    }\n    //check if either bbox is completely to the left of the other\n    //      bbox.x          is the left edge \n    //      bbox.x + width  is the right edge\n    // check if some right edge < other left edge\n    if (mainbbox.x + mainbbox.width < otherbbox.x || otherbbox.x + otherbbox.width < mainbbox.x) {\n        //one of the bbox is completely to the left of the other\n        return false;\n    }\n\n    return true;\n}\n\n/*\n    move_vector: {\n        start: {\n            x: int,\n            y: int\n        },\n        target: {\n            x: int,\n            y: int\n        }\n    }\n*/\n\n//Not used right now.... but it may need to be at some point.... DO NOT REMOVE!\n//checks to make sure that you dont create parent/child relationships by moving cells\nexport function safeMove(main, move_target) {\n    let move_vector = {\n        start: { \n            x: main.attributes.position.x,\n            y: main.attributes.position.y\n        },\n        target: {\n            x: move_target.x,\n            y: move_target.y\n        }\n    }\n    let mainbbox = main.getBoundingBox();\n    let new_bbox = {\n        x: move_vector.target.x,\n        y: move_vector.target.y,\n        width: mainbbox.width,\n        height: mainbbox.height\n    }\n    //check if moving a cell somewhere would either contain a new cell or be contained by another cell\n    let cells = main.sheet.getCellsByLevel(0);\n    for (const invader of cells) {\n        if (invader.id === main.id) continue;\n        if (contains(new_bbox, invader.getBoundingBox()) || contains(invader.getBoundingBox(), new_bbox)) {\n            //moving cell would contain invader or invader would contain cell\n            //move the invader out\n            let diff_y = move_vector.target.y - move_vector.start.y;\n            let diff_x = move_vector.target.x - move_vector.start.x\n            if (diff_x === 0) {\n                if (diff_y < 0) {\n                    //if main is being pushed up, push invader up also\n                    pushTop(main, invader);\n                } else if (diff_y > 0) {\n                    //if the main cell is being moved down, move the invader down too\n                    pushBottom(main, invader);\n                } else {\n                    alert(\"Error in safeMove, diff_y === 0 for vertical movement\");\n                }\n            } else if (diff_y === 0) {\n                if (diff_x < 0) {\n                    pushLeft(main, invader);\n                } else if (diff_x > 0) {\n                    pushRight(main, invader);\n                } else {\n                    alert(\"Error in safeMove, diff_x === 0 for horizontal movement\");\n                }\n            }\n        }\n    }\n    main.position(move_vector.target.x, move_vector.target.y)\n}\n\nfunction pushTop(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x,\n        y: invader.attributes.position.y - Math.abs(main.sheet.spacing + (invader.attributes.position.y + invader.attributes.attrs.rect.height) - (main.attributes.position.y))\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushBottom(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x,\n        y: invader.attributes.position.y + Math.abs(main.sheet.spacing + (invader.attributes.position.y + invader.attributes.attrs.rect.height) - (main.attributes.position.y))\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushLeft(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x - Math.abs(main.sheet.spacing + (invader.attributes.position.x + invader.attributes.attrs.rect.width) - (main.attributes.position.x)),\n        y: invader.attributes.position.y\n    }\n    safeMove(invader, move_target);\n}\n\nfunction pushRight(main, invader) {\n    let move_target = {\n        x: invader.attributes.position.x + Math.abs(main.sheet.spacing + (invader.attributes.position.x + invader.attributes.attrs.rect.width) - (main.attributes.position.x)),\n        y: invader.attributes.position.y\n    }\n    safeMove(invader, move_target);\n}\n\nexport function getCellsBoundingBox(cells) {\n    let min_x = cells[0].attributes.position.x\n    let max_x = cells[0].attributes.attrs.rect.width + min_x\n    let min_y = cells[0].attributes.position.y\n    let max_y = cells[0].attributes.attrs.rect.height + min_y\n    for (let i = 1; i < cells.length; i++) {\n        let cell = cells[i];\n        let cellbbox = cell.getBoundingBox();\n        if (cellbbox.x < min_x) min_x = cellbbox.x;\n        if (cellbbox.y < min_y) min_y = cellbbox.y;\n        if (cellbbox.x + cellbbox.width > max_x) max_x = cellbbox.x + cellbbox.width;\n        if (cellbbox.y + cellbbox.height > max_y) max_y = cellbbox.y + cellbbox.height; \n    }\n    return {\n        x: min_x,\n        y: min_y,\n        width: max_x - min_x,\n        height: max_y - min_y\n    }\n}","export default __webpack_public_path__ + \"static/media/pop.cddf7df9.wav\";","export function cellInArray(cell, arr) {\n    for (const e of arr) {\n        if (cell.id === e.id) {\n            return true;\n        }\n    }\n    return false;\n} ","import * as joint from 'jointjs';\n\nimport { Cut } from '../../../shapes/Cut/Cut';\nimport { Premise } from '../../../shapes/Premise/Premise';\nimport { color } from '../../../util/color';\nimport { findSmallestCell, overlapsCells, contains, getCellsBoundingBox, intersects } from '../../../util/collisions';\nimport Pop from '../../../sounds/pop.wav';\nimport Snip from '../../../sounds/snip.wav';\nimport $ from 'jquery'\nimport { cellInArray } from '../../../util/otherUtil';\n\nconst NSPremise = joint.dia.Element.define('nameSpace.Premise',Premise);\nconst NSCut = joint.dia.Element.define('nameSpace.Cut',Cut);\n\nconst DEFAULT_BACKGROUND_COLORS = {\n    even: color.shapes.background.even.inactive,\n    odd: color.shapes.background.odd.inactive,\n    premise: color.shapes.background.default.color\n}\n\nexport default class Sheet {\n    constructor(paper) {\n        this.paper = paper;\n        this.handlePlayAudio = paper.props.handlePlayAudio\n        this.graph = new joint.dia.Graph({}, {\n            cellNamespace: {\n                nameSpace: { \n                    Premise: NSPremise,\n                    Cut: NSCut\n                }\n            }\n        });\n        this.spacing = 10;\n    }\n\n    addPremise(config, mute, fast=false) {\n        const premise = (new Premise()).create(config, this, fast);\n        this.handleCollisions(premise);\n\n        // Play snip sound\n        let pop = new Audio(Pop); \n        this.handlePlayAudio(pop);\n        this.paper.onGraphUpdate();\n        return premise;\n    }\n\n    addCut(config, collisions=true) {\n        const cut = (new Cut()).create(config, this, collisions);\n        if (collisions) this.handleCollisions(cut);\n\n        // Play snip sound\n        let snip = new Audio(Snip); \n        this.handlePlayAudio(snip);\n        this.paper.onGraphUpdate();\n        return cut;\n    }\n\n    importCells(cells) {\n        this.graph.clear();\n        if (cells === \"[]\") return;\n        const clones =  cells.map(cell => {\n            cell = cell.clone();\n            cell.sheet = this;\n            return cell;\n        })\n        this.graph.resetCells(clones);\n\n        for(let cell of clones) {\n            this.handleCollisions(cell, false)\n        }\n    }\n\n    exportAsJSON() {\n        const cells = this.graph.getCells();\n        const exported = cells.map(cell => Object.assign(cell.attributes, { sheet: null }));\n        const json = JSON.stringify(exported, null, 2);\n        return json;\n    }\n\n    //VERY SLOW, USE sheet.importCells(cells) instead if possible, which takes an array of cells\n    importFromJSON(json) {\n        const parsed = JSON.parse(json);\n        for (let cell of parsed) {\n            let new_element;\n            if (cell.type === 'dia.Element.Premise') {\n                new_element = this.addPremise(cell, true, true);\n            }\n            else if (cell.type === 'dia.Element.Cut') {\n                new_element = this.addCut(cell, true, true);\n            }\n            else {\n                throw new RangeError(`Cell type must be either dia.Element.Premise or dia.Element.Cut, got ${cell.type}`);\n            }\n\n            //fix for small outline box first time mousing over after importing\n            const dom_element = $(`svg [model-id=\"${new_element.attributes.id}\"]`);\n            dom_element.trigger('mouseenter');\n            dom_element.trigger('mouseleave');\n        }\n    }\n\n    //TODO: some of these functions kind of fit here and also kind of don't. I'm moving them here for now\n    // because in the future it would be beneficial to at least have a \"entire graph update\" be possible, which would be very simple to \n    // do if they are all bundled up.\n    handleCollisions(cell, clean=true) {\n        //console.log(\"=================== HANDLE COLLISIONS =========================\")\n        //This function takes a Cell as input and, using its position\n        // makes any necessary changes to the internal representation of\n        // the diagram (parent / child structure (embedding)) to reflect what the user\n        // sees on the paper\n        let cellbbox = cell.getBoundingBox();\n    \n        let potential_parents = this.findPotentialParents(cellbbox);\n        let parent = findSmallestCell(potential_parents);\n    \n        if (parent) {\n            let children = this.filterChildren(parent, cellbbox)\n            //embed cell into parent\n            parent.embed(cell);\n    \n            //reroot children\n            for (const child of children) {\n                if (child.get(\"parent\")) {\n                    parent.unembed(child);\n                }\n                cell.embed(child)\n            }\n            this.treeToFront(parent)\n        } else {\n            let elements_inside = this.findElementsInside(cellbbox)\n            for (const element of elements_inside) {\n                if (element.get(\"parent\") || element.id === cell.id) {\n                    continue;\n                }\n                cell.embed(element)\n            }\n            this.treeToFront(cell)\n        }\n        //recolor trees to reflect new level structure\n        this.colorByLevel(cell);\n        if (clean) {\n            this.pack(cell);\n            this.cleanOverlaps();\n        }\n    }\n\n    pack(cell) {\n        let root = this.findRoot(cell);\n        //console.log(\"ROOT EMBEDS\", root.getEmbeddedCells())\n        this.pack_rec(root);\n    }\n\n    pack_rec(cell) {\n        //let level = cell.attributes.attrs.level;\n        let siblings = cell.getEmbeddedCells()\n        //console.log(\"siblings\", siblings)\n        if (siblings.length === 0) {\n            return;\n        }\n        for (const child of siblings) {\n            this.pack_rec(child);\n        }\n        //cell is inside a cut\n        //get siblings\n        this.cleanOverlaps(siblings);\n        let siblingsbbox = getCellsBoundingBox(siblings)\n        let cellbbox = cell.getBoundingBox()\n        if (!contains(cellbbox, siblingsbbox)) {\n            if (!intersects(cellbbox, siblingsbbox)) return;\n            if (siblingsbbox.x < cellbbox.x || siblingsbbox.x + siblingsbbox.width > cellbbox.x + cellbbox.width) {\n                cell.position(siblingsbbox.x - this.spacing, cell.attributes.position.y)\n                cell.attr(\"rect/width\", siblingsbbox.width + 2 * this.spacing)\n            }\n            if (siblingsbbox.y < cellbbox.y || siblingsbbox.y + siblingsbbox.height > cellbbox.y + cellbbox.height) {\n                cell.position(cell.attributes.position.x, siblingsbbox.y - this.spacing)\n                cell.attr(\"rect/height\", siblingsbbox.height + 2 * this.spacing)\n            }\n        }\n    }\n\n    cleanOverlaps(roots = this.getCellsByLevel(0)) {\n        // sort the roots from largest to smallest. this will cause a ripple effect,\n        // starting checks for overlaps at the largest cells and moving outward\n        roots.sort(function(a, b) {\n            return b.getArea() - a.getArea()\n        }) \n        let current = roots;\n        while (current.length > 0) {\n            let next = [];\n            //let total_overlaps = 0;\n            for (const cell of current) {\n                let overlaps = overlapsCells(cell, roots);\n\n                for (const invader of overlaps) {\n                    this.separate(cell, invader);\n                    let dupe = cellInArray(invader, next);\n                    if (!dupe) next.push(invader);\n                }\n            }\n            current = next;\n        }\n    }\n\n    separate(main, invader) {\n        //assumes main and invader partially overlap\n\n        let mainbbox = main.getBoundingBox();\n        let invaderbbox = invader.getBoundingBox();\n\n        //find the amount of each directional axis that the two cells occupy together\n        //whichever is lower will be chosen to reduce the movement of the invader the smallest possible distance\n\n        let shared_x = (mainbbox.x < invaderbbox.x) ? mainbbox.x + mainbbox.width - invaderbbox.x : mainbbox.x - invaderbbox.x - invaderbbox.width; \n        let shared_y = (mainbbox.y < invaderbbox.y) ? mainbbox.y + mainbbox.height - invaderbbox.y : mainbbox.y - invaderbbox.y - invaderbbox.height;\n\n        if (Math.abs(shared_x) > Math.abs(shared_y)) {\n            //make adjustment vertically (shorter change)\n            //if shared value is positive, then main is somewhat above the invader\n            let dir = Math.sign(shared_y);\n            if (dir === 0) dir = 1;\n            this.treeMove(invader, {x: invaderbbox.x, y: invaderbbox.y + shared_y + (this.spacing * dir)});\n        } else {\n            //make adjustment horizontally (shorter change)\n            //if shared value is positive, then main is somewhat to the left of the invader\n            let dir = Math.sign(shared_x);\n            if (dir === 0) dir = 1;\n            this.treeMove(invader, {x: invaderbbox.x + shared_x + (this.spacing * dir), y: invaderbbox.y});\n        }\n\n    }\n\n    getCellsByLevel(level) {\n        //returns an array of all cells with the matching level\n        let cells = this.graph.getCells();\n        let result = []\n        for (const cell of cells) {\n            if (cell.attributes.attrs.level === level) result.push(cell);\n        }\n        return result;\n    }\n\n    findElementsInside(bbox, cells=this.graph.getCells()) {\n        //takes two bbox objects as input\n        //bbox objects should have the structure:\n        // {\n        //      width: int,\n        //      height: int,\n        //      x: int,\n        //      y: int\n        // }\n        let elements = []\n        for (const cell of cells) {\n            let otherbbox = cell.getBoundingBox();\n            if (contains(bbox, otherbbox)) {\n                elements.push(cell)\n            }\n        }\n        return elements\n    }\n\n\n    findPotentialParents(targetbbox) {\n        // POTENTIAL PARENTS -- potential parents are only the cells that \n        //                      contain (completely) the CELL.\n        let cells = this.graph.getCells()\n        let potential_parents = []\n        for (const cell of cells) {\n            let otherbbox = cell.getBoundingBox();\n            //find cells who contain target cell\n            if (contains(otherbbox, targetbbox)) {\n                //console.log(\"potential parent found\")\n                potential_parents.push(cell)\n            }\n        }\n    \n        return potential_parents\n    }\n\n\n    filterChildren(parent, new_child_bbox) {\n        //function returns array of children who fit inside new child\n        let cells = this.graph.getCells();\n        let potential_children = [];\n        for (const cell of cells) {\n            if (cell.get(\"parent\") === parent.id){\n                potential_children.push(cell)\n            }\n        }\n        let children = this.findElementsInside(new_child_bbox, potential_children)\n        return children;\n    }\n\n    treeToFront(root) {\n        //loops through a tree from its root to the leaves\n        //to ensure correct z order\n        let current = [root]\n        let next = []\n        while (current.length > 0) {\n            for (const node of current) {\n                //console.log(node);\n                node.toFront();\n                let children = node.getEmbeddedCells();\n                next.push(...children);\n            }\n            current = next\n            next = []\n        }\n    }\n\n\n    //i think these are graph related functions??? since they call handle collisions, tree stuff, etc which\n    //could be specific to a graph\n    addSubgraph(subgraph, position, selected = null) {\n        let root = subgraph[Object.keys(subgraph)[0]];\n        let root_clone = root.clone();\n        let new_root = this.subgraphToGraph(root, root_clone, subgraph)\n        this.treeMove(new_root, position);\n        if (selected && selected.attributes.type === \"dia.Element.Cut\") {\n            selected.embed(new_root);\n        }\n        this.handleCollisions(new_root)\n        return root_clone.id;\n    }\n\n    subgraphToGraph(node, clone, subgraph, parent=null) {\n        clone.sheet = this;\n        clone.addTo(this.graph);\n        if (parent != null) {\n            parent.embed(clone);\n        }\n        let embeds = node.get('embeds');\n        if (embeds){\n            for (const embed of embeds) {\n                let child = this.findCellInSubgraph(embed, subgraph);\n                this.subgraphToGraph(child, child.clone(), subgraph, clone);\n            }\n        }\n        return clone;\n    }\n\n    findCellInSubgraph(id, subgraph) {\n        let keys = Object.keys(subgraph);\n        for (const key of keys) {\n            let cell = subgraph[key];\n            if (cell.id === id) {\n                return cell;\n            }\n        }\n        alert(\"find subgraph failed!\");\n        return null;\n    }\n\n    //FIXME: these functions don't seem to be related to a specific graph, yet i'm not sure where to put them.\n    // I don't think just having them sit out in the open is a great idea either.\n    // Possibly we can just have these functions sit at the bottom of this file (outside of the class)\n    // We can't really make a class with these functions since the graph itself is the tree and we are just defining operations on it\n    //      - or maybe we can if we get creative, have to think more about it\n    treeResize(root, resize_value = 20, center_nodes = true) {\n        //resizes all the children of a root, not including the root\n        let current = root.getParentCell();\n        while (current) {\n            current.attr(\"rect/width\", current.attributes.attrs.rect.width + resize_value);\n            current.attr(\"rect/height\", current.attributes.attrs.rect.height + resize_value);\n            if (center_nodes) {\n                current.set(\"position\", {x: current.attributes.position.x - resize_value/2,\n                                         y: current.attributes.position.y - resize_value/2});\n            }\n            current = current.getParentCell();\n        }\n    }\n    \n    findRoot(node) {\n        while (true) {\n            if (node.get(\"parent\")) {\n                node = node.getParentCell();\n            } else {\n                break;\n            }\n        }\n        return node;\n    }\n    \n    findLevel(node) {\n        let level = 0;\n        let parent = node.getParentCell();\n        while (parent) {\n            level++;\n            parent = parent.getParentCell();\n        }\n        return level;\n    }\n    \n    colorByLevel(node, color_config = DEFAULT_BACKGROUND_COLORS) {\n        //find root of node's tree\n        let root = this.findRoot(node);\n        root.attr(\"level\", 0)\n    \n        if (root.attributes.type === \"dia.Element.Premise\") {\n            root.attr('rect/fill', color_config.premise);\n            return;\n        }\n        //otherwise its a cut root\n        root.attr(\"rect/fill\", color_config.odd)\n        let level = 0;\n        let children = root.getEmbeddedCells();\n        while(children.length > 0) {\n            level++\n            //the color applies to the level contained within the cut, not the level the cut is on\n            let parity = (level+1) % 2;\n            let next_children = []\n            for (const child of children) {\n                child.attr(\"level\", level);\n                if (child.attributes.type === \"dia.Element.Premise\") {\n                    child.attr(\"rect/fill\", color_config.premise)\n                    continue;\n                }\n                //coloring cut\n                child.attributes.attrs.level = level;\n                if (parity === 0) {\n                    child.attr(\"rect/fill\", color_config.even) \n                } else {\n                    child.attr(\"rect/fill\", color_config.odd);   \n                }                                 \n                next_children.push(...child.getEmbeddedCells());\n            }\n            children = next_children;\n        }\n    \n    }\n    \n    treeMove(root, position) {\n        let offset = {\n            x: position.x - root.attributes.position.x,\n            y: position.y - root.attributes.position.y\n        }\n        let current = [];\n        let next = [root];\n        while (next.length > 0) {\n            current = next;\n            next = [];\n            for (const node of current) {\n                next.push(...node.getEmbeddedCells());\n                //node.move({x: node.attributes.position.x + offset.x, y: node.attributes.position.y + offset.y})\n                //safeMove(node, {x: node.attributes.position.x + offset.x, y: node.attributes.position.y + offset.y})\n                node.position(node.attributes.position.x + offset.x, node.attributes.position.y + offset.y);\n            }\n        }\n    }\n\n\n}","import React from 'react';\nimport $ from 'jquery';\nimport * as joint from 'jointjs';\n\nimport Sheet from '../Sheet/Sheet';\n\n/**\n * This class renders an individual JointJS paper inside a History component. \n * The actual data that makes up the paper is entirely derived from the History it is part of.\n */\nexport default class HistoryItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // keeps track of joint paper object \n        this.jpaper = null;\n\n        // Sheet component for managing graph\n        this.sheet = new Sheet(this);\n    }\n\n    // if any of the properties of this component change, make sure cells are correct\n    // (only need to do this if it is the last item in the history since we could be making a new branch)\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.num === this.props.total -1 ){\n            this.sheet.importCells(this.props.cells);\n            this.jpaper.scaleContentToFit();\n        }\n    }\n\n    // initialize component\n    componentDidMount() {\n        this.jpaper = new joint.dia.Paper({\n            el: document.getElementById(this.props.id),\n            model: this.sheet.graph,\n            width: 200,\n            height: 200,\n            preventContextMenu: false,\n            clickThreshold: 1\n        });\n\n        this.sheet.importCells(this.props.cells);\n        this.jpaper.scaleContentToFit();\n        this.jpaper.updateViews();\n\n        this.jpaper.setInteractivity(false);\n        \n\n        //add and remove highlight on hover\n        $(`#${this.props.id}`).on('mouseover', function() {\n            $(this).closest('.history-item').addClass('history-selected');\n            \n        });\n        $(`#${this.props.id}`).on('mouseout', function() {\n            $(this).closest('.history-item').removeClass('history-selected');\n        });\n    }\n\n    //TODO: This was just sitting here empty, not sure if it is necessary to have or not\n    refresh() {}\n\n    render() {\n        const style = {\n            backgroundColor: this.props.active ? '#ed6b4d' : ''\n        }\n        return(\n            <div className=\"history-item\"style={style}>\n                    <div \n                        id={this.props.id}\n                        className=\"joint-paper history-item-paper\"\n                        onClick={this.props.onClick}\n                    ></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nimport './History.css';\nimport HistoryItem from \"./HistoryItem\";\n\n/**\n * This class manages and renders the timeline for the main workspace.\n * See components/Paper/History/HistoryItems.jsx for the individual timeline components\n */\nexport default class History extends React.Component {\n    constructor(props) {\n        super(props);\n\n        //if MAX_SIZE is exceeded, will start removing from bottom of stack\n        this.MAX_SIZE = 1024;\n\n        // The idea of batch mode is to allow multiple premises/cuts to be added at once,\n        // but only count it as one HistoryItem on the timeline\n        //\n        // this.batch_mode simply toggles this behavior on and off, but should NOT be set directly.\n        // Instead, use this.startBatch() and this.endBatch().\n        this.batch_mode = false;\n        // this.batch_state reflects the cells that were most recently pushed while batch_mode is true.\n        // Callling this.endBatch() will create a HistoryItem using this.batch_state cells.\n        // Never set this manually, use this.push(item)\n        this.batch_state = false;\n\n        // if this.locked is true, no items will be able to be added to this.state.data,\n        // so no new HistoryItems can be created\n        this.locked = false;\n\n\n        this.state = {\n            //simple stack, each item is a collection of cells to be rendered by the paper \n            //of the respective HistoryItem component\n            data: [],\n\n            //index represents the index of the current HistoryItem being viewed in the data array.\n            //For example, index = this.data.length - 1 is always the last thing you have done (present)\n            //             index = 0 is always the first thing you have done (except for MAX_SIZE overflow)   \n            index: 0\n        }\n    }\n\n    /**\n     * Call handler function on paper (passed through props) when multiple HistoryItems are \n     * skipped at a time (through clicking).\n     * @param {int} num index to jump to\n     */\n    handleJump = (num) => {\n        this.setState({\n            index: num\n        });\n        this.props.handleHistoryJump(this.getItem(num));\n    }\n\n    /**\n     * Clears the History timeline.\n     * @param {function} callback function to be executed after data has been emptied\n     */\n    clear(callback) {\n        this.setState({\n            data: [],\n            index: 0\n        }, callback && callback);\n    }\n\n\n    /**\n     * Adds collection of cells to data stack at the current index of the History timeline.\n     * \n     * Any entries after the current index will be erased since we only maintain one branch of history.\n     * \n     * If the size of the stack exceeds MAX_SIZE, the oldest entry will be deleted to make space.\n     * __RETURNS EARLY__ if this.locked is true.\n     * @param {*} item \n     * @returns \n     */\n    push(item) {\n        if(this.locked) return;\n\n        if(this.batch_mode) {\n            this.batch_state = item\n            return;\n        }\n\n        //create a copy of state data (necessary since react state must be immutable, cant change it directly)\n        const data = [...this.state.data];\n\n        // if we aren't on the last HistoryItem (the present/most recent)\n        if (this.state.index !== this.state.data.length - 1) {\n            //remove all states after current index\n            data.splice(this.state.index + 1);\n        }\n\n        data.push(item);\n\n        //remove from bottom of stack if we have more items than the max size allows\n        if (data.length >= this.MAX_SIZE) {\n            data.shift();\n        }\n\n        this.setState({\n            data: data,\n            index: data.length - 1\n        });\n    }\n\n\n    /**\n     * Moves index of current HistoryItem to previous HistoryItem if there is one\n     * @returns HistoryItem at the previous index if undoing is allowed, false otherwise\n     */\n    undo() {\n        let index = this.state.index;\n        if (this.state.index > 0) {\n            this.setState({\n                index: this.state.index - 1\n            });\n            index -= 1;\n            return this.getItem(index);\n        }\n        return false;\n    }\n\n    /**\n     * Moves index of current HistoryItem to subsequent HistoryItem if there is one\n     * @returns HistoryItem at the subsequent index if redoing is allowed, false otherwise\n     */\n    redo() {\n        let index = this.state.index;\n        if (this.state.index < this.state.data.length - 1) {\n            this.setState({\n                index: this.state.index + 1\n            });\n            index += 1;\n            return this.getItem(index);\n        }\n        return false;\n    }\n\n    /**\n     * Gets a HistoryItem at a given index\n     * @param {int} index \n     * @returns HistoryItem at a given index if the index is valid, null otherwise\n     */\n    getItem(index) {\n        if (index < 0 || index >= this.state.data.length) {\n            console.error(`ERROR: Tried to get HistoryItem this.state.data[${index}], index must be ${0} < ${index} <= ${this.state.data.length}`);\n            return null;\n        }\n        return this.state.data[index];\n    }\n\n    /**\n     * Locks the History so new HistoryItems cannot be added\n     */\n    lock() {\n        this.locked = true;\n    }\n\n    /**\n     * Unlocks the History so new HistoryItems can be added\n     */\n    unlock() {\n        this.locked = false;\n    }\n\n    /**\n     * Initializes a batch HistoryItem.\n     * \n     * Will make the History keep track of the most recent state sent to it through `this.push(item)`\n     * but will not actually update the History with that new item. \n     * \n     * `(see this.endBatch() for more info)`\n     */\n    startBatch() {\n        this.batch_mode = true;\n        this.batch_state = null;\n    }\n\n    /**\n     * Adds a batch HistoryItem to the History.\n     * \n     * Will take changes since `this.startBatch()` was called and add them to the History in one HistoryItem\n     */\n    endBatch() {\n        this.batch_mode = false;\n        if (this.batch_state !== null) {\n            this.push(this.batch_state);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"history\">\n                {\n                    this.state.data.map((history_item, num) => (\n                        (num === 0) ?  null :\n                        <HistoryItem \n                            num={num}\n                            total={this.state.data.length}\n                            id={this.props.id_prefix + num}\n                            cells={history_item}\n                            active={this.state.index === num}\n                            onClick={this.handleJump.bind(this, num)}\n                            key={num}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nimport './UtilBar.css';\n\nexport default class UtilBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: -1\n        }\n    }\n\n    handleChangeActive = (num) => {\n        this.setState({\n            active: num === this.state.active ? -1 : num\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"util-bar-root\">\n                { \n                    //loop through children and pass active prop to child whose index corresponds to\n                    //this.state.active\n                    // Ex. if History is the first child (index 0), then when this.state.active === 0 \n                    //then History will be passed active=true  as a prop\n                    React.Children.map(this.props.children, (child, num) => {\n                        if (React.isValidElement(child)) {\n                            return React.cloneElement(child, {\n                                active: this.state.active === num,\n                                handleChangeActive: this.handleChangeActive.bind(this, num)\n                            });\n                        }\n                        return child;\n                    })\n                }\n            </div>\n        );\n    }\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nconst UtilBarItem = (props) => {\n    return (\n        <div className=\"util-bar-item-root\">\n            <FontAwesomeIcon icon={props.icon} className=\"util-bar-item-icon\" onClick={props.handleChangeActive} />\n            <div className={`util-bar-active-menu ${props.active === false ? 'visually-hidden' : ''}`}>\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default UtilBarItem;","import React from 'react';\nimport * as joint from 'jointjs'\nimport E from '../../EventController.js';\nimport _ from 'lodash';\nimport $ from 'jquery'\n\nimport Delete from '../../sounds/delete.wav';\nimport Sheet from './Sheet/Sheet.js';\nimport History from './History/History.jsx'\n\nimport './Paper.css';   \nimport UtilBar from './UtilBar/UtilBar.jsx';\nimport UtilBarItem from './UtilBar/UtilBarItem.jsx';\nimport './UtilBar/UtilBar.css';\nimport { faHistory } from '@fortawesome/free-solid-svg-icons';\n\nconst PAPER_SIZE = { width: 4000, height: 4000 };\n\nexport default class Paper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sheet = new Sheet(this);\n        this.jpaper = null;\n        this.paper_element = null;\n        this.paperRoot = React.createRef();\n    \n        this.selected_premise = null;\n        this.saved_template = null;\n        this.temp_cut = null;\n        this.initial_cut_pos = {x: 0, y: 0};\n        this.canInsertPremise = true;\n        this.previousPremiseCode = 0;\n\n        this.state = {\n            show: true\n        }\n\n        this.UtilBar = React.createRef();\n        this.history = React.createRef();\n    }\n\n    componentDidMount() {\n        this.jpaper = new joint.dia.Paper({\n            el: document.getElementById(this.props.id),\n            model: this.sheet.graph,\n            width: PAPER_SIZE.width,\n            height: PAPER_SIZE.height,\n            preventContextMenu: false,\n            clickThreshold: 1\n        });\n\n        this.paper_element = document.getElementById(this.props.id);\n        \n        this.setPaperEvents();\n        this.history.current.push(this.sheet.exportAsJSON());\n    }\n\n    handleHistoryJump = (cells) => {\n        this.history.current.lock();\n        this.sheet.importCells(cells);\n        this.history.current.unlock();\n    }\n\n    onGraphUpdate() {\n        //const new_graph = this.sheet.exportAsJSON();\n        //const cells = Object.values(this.sheet.graph.cloneCells(this.sheet.graph.getCells()));\n        const cells = this.sheet.graph.getCells()\n        this.history.current.push(cells);\n    }\n\n    show() {\n        $(this.paperRoot.current).css('display', 'flex');\n    }\n\n    hide() {\n        $(this.paperRoot.current).css('display', 'none');\n    }\n\n    export() {\n        // delete graph.changed;\n        let graphJSON = this.sheet.graph.toJSON();\n        for(let i = 0; i < graphJSON.cells.length; i++) {\n            delete graphJSON.cells[i].sheet;\n        }\n\n        //console.log(graphJSON);\n        const file = new Blob([JSON.stringify(graphJSON, null, 2)], { type: 'application/json'});\n        const a = document.createElement(\"a\");\n        let url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = 'graph.json';\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(function () {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 0);\n    }\n\n\n    import() {\n        const input = document.createElement(\"input\");\n        input.type = \"file\";\n        // choosing the file\n        input.onchange = (ev) => {\n            const file = ev.target.files[0];\n            if (file.type !== \"application/json\") {\n                alert(\"File must be of .JSON type\");\n                return;\n            }\n            // read the file\n            const reader = new FileReader();\n            reader.readAsText(file, 'UTF-8');\n            reader.onload = (readerEvent) => {\n                const content = readerEvent.target.result;\n                const erase = window.confirm(\"Erase your current workspace and import graph?\");\n                if (erase) {\n                    this.sheet.graph.clear();\n                    // const dataObj = JSON.parse(content);\n                    // graph.fromJSON(dataObj);\n                    //props.setGraphDataOnImport(content);\n\n                    const dataObj = JSON.parse(content);\n                    this.parseJSON(dataObj.cells);\n                }\n            };\n        };\n        input.click();\n    }\n\n    parseJSON(cells) {\n        //console.log(\"CELLS:\", cells)\n        const ids = {};\n        while (cells.length > 0) {\n            const cell = cells.shift();\n            const type = cell.type;\n\n            if (cell.parent && !ids.hasOwnProperty(cell.parent)) {\n                //console.log('has parent, skipping for now...')\n                cells.push(cell);\n                continue;\n            }\n\n            if (type === \"dia.Element.Cut\") {\n                this.sheet.addCut(cell);\n                ids[cell.id] = true;\n            }\n            else if (type === \"dia.Element.Premise\") {\n                this.sheet.addPremise(cell);\n                ids[cell.id] = true;\n            }\n        }\n    }\n\n    //assume that if there is no workspace associated then we are in create mode\n    getMode() {\n        return this.props.mode || 'create';\n    }\n\n    setupModalPaper() {\n        this.sheet.graph.clear();\n    }\n\n    copyFrom(sourcePaper) {\n        const modal_cells = sourcePaper.sheet.graph.getCells();\n        for (let i = 0; i < modal_cells.length; i++) {\n            modal_cells[i] = modal_cells[i].clone();\n            modal_cells[i].graph = this.sheet.graph;\n        }\n        this.sheet.graph.addCells(modal_cells);\n    }\n\n    setPaperEvents(){\n        // paper events\n        //arrow functions are required to keep proper this context binding\n        this.jpaper.on(\"element:mouseenter\", ( cellView, evt) =>{\n            let model = cellView.model\n            let modelView = model.findView(this.jpaper);\n            modelView.showTools()\n            model.attr(\"rect/stroke\", \"red\")\n            model.attr(\"text/fill\", \"red\")\n            this.selected_premise = model\n        });\n\n        this.jpaper.on(\"element:mouseleave\", ( cellView, evt) =>{\n            let model = cellView.model\n            let modelView = model.findView(this.jpaper);\n            if(!modelView) return;\n            modelView.hideTools()\n            model.attr(\"rect/stroke\", \"black\")\n            model.attr(\"text/fill\", \"black\")\n            this.selected_premise = undefined;\n        })\n\n        // First, unembed the cell that has just been grabbed by the user.\n        this.jpaper.on('cell:pointerdown', (cellView, evt, x, y) => {\n            \n            console.log(cellView)\n            let cell = cellView.model;\n            console.log(\"cell\", cell)\n\n            if (!cell.get('embeds') || cell.get('embeds').length === 0) {\n                // Show the dragged element above all the other cells (except when the\n                // element is a parent).\n                cell.toFront();\n            }\n            \n            if (cell.get('parent')) {\n                this.sheet.graph.getCell(cell.get('parent')).unembed(cell);\n            }\n            cell.active();\n            this.sheet.treeToFront(this.sheet.findRoot(cell));\n        });\n\n        // When the dragged cell is dropped over another cell, let it become a child of the\n        // element below.\n        this.jpaper.on('cell:pointerup', (cellView, evt, x, y) => {\n\n            let cell = cellView.model;\n            \n            this.sheet.handleCollisions(cell)\n            cell.inactive();\n\n            if(!this.props.action) this.onGraphUpdate();\n            let nextAction;\n            if (this.props.action) {\n                nextAction = this.props.action(this.sheet, cell, this.getRelativeMousePos());\n            }\n            if (this.props.handleClearAction && !nextAction) this.props.handleClearAction();\n            if(nextAction) this.props.handleActionChange(nextAction);\n            this.selected_premise = null;\n        });\n\n        // this.sheet.graph.on('add', () => {\n        //     this.onGraphUpdate();\n        // });\n\n        //PAPER UNDO AND REDO EVENTS\n        $(this.paperRoot.current).on('keydown', (event) => {\n            if (event.keyCode === 90 && (event.ctrlKey || event.metaKey) && !event.shiftKey) {\n                const new_state = this.history.current.undo();\n                this.selected_premise = null;\n                //only update graph if new state exists\n                //undo will return false if can't undo anymore\n                if (new_state) {\n                    this.history.current.lock();\n                    this.sheet.importCells(new_state);\n                    this.history.current.unlock();\n                }\n            }\n            if (event.keyCode === 90 && (event.ctrlKey || event.metaKey) && event.shiftKey) {\n                const new_state = this.history.current.redo();\n                //only update graph if new state exists\n                //redo will return false if can't redo anymore\n                if (new_state) {\n                    this.history.current.lock();\n                    this.sheet.importCells(new_state);\n                    this.history.current.unlock();\n                }\n            }\n        });\n    }\n\n    handleDeleteCell = () => {\n        this.onGraphUpdate();\n    }\n\n    onClick = () => {\n        console.log('clicked', this);\n    }\n\n    onKeyUp = (event) => {\n        if(event.keyCode === this.previousPremiseCode) this.canInsertPremise = true;\n    }\n\n    onKeyDown = (event) => {\n        if(this.getMode() === 'proof'){\n            return;\n        }\n\n        if(this.getMode() === 'create'){\n            if (E.keys[16]) {\n                this.jpaper.setInteractivity(false);\n            }\n        }\n\n        //backspace (delete premise or cut)\n        if (event.keyCode === 8) {\n            if (!this.selected_premise) return;\n            let delete_noise = new Audio(Delete);\n            if (event.shiftKey) {\n                //obliterate\n                this.props.handlePlayAudio(delete_noise);\n                this.selected_premise.obliterate();\n            } else  {\n                //single deletion\n                if (this.selected_premise.attributes.type === \"dia.Element.Premise\") {\n                    this.selected_premise.destroy()\n                    this.props.handlePlayAudio(delete_noise);\n                } else if (this.selected_premise.attributes.type === \"dia.Element.Cut\") {\n                    this.selected_premise.destroy();        // Play pop sound\n                    this.props.handlePlayAudio(delete_noise);\n                } else {\n                    console.error(\"attempted to delete shape of unknown type: \" + this.selected_premise.attributes.type)\n                }\n            }\n            this.selected_premise = null;\n        }\n\n        //a-z for creating premise\n        const key = event.key.toLocaleUpperCase();\n        const code = key.charCodeAt(0);\n        if (this.canInsertPremise && key.length === 1 && !(event.ctrlKey || event.metaKey) && code >= 65 && code <= 90) {\n            let config = {\n                //use capital letters by default, can press shift to make lowercase\n                attrs:{\n                    text: {\n                        text: key\n                    }\n                },\n                position: this.getRelativeMousePos()\n            }\n            //eslint-disable-next-line\n            //let new_rect = new Premise().create(config)\n            this.sheet.addPremise(config);\n            this.canInsertPremise = false;\n            this.previousPremiseCode = code;\n        }\n        //ENTER\n        // new cut\n        if (event.keyCode === 13) {\n            let config = {\n                position: this.getRelativeMousePos()\n            }\n            if (this.selected_premise) {\n                config[\"child\"] = this.selected_premise;\n                this.sheet.addCut(config);\n            } else {\n                //console.log(\"creating empty cut\")\n                this.sheet.addCut(config);\n                //console.log(\"cut\", new_cut)\n            }\n        }\n    \n        if (event.keyCode === 49) {\n            //save template\n            if (this.selected_premise) {\n                this.saved_template = this.sheet.graph.cloneSubgraph([this.selected_premise], {deep: true});\n            }\n        }\n    \n        if (event.keyCode === 50) {\n            const mouse_adjusted = this.getRelativeMousePos();\n            //console.log(\"position\", mouse_adjusted)\n            if (this.saved_template) {\n                this.sheet.addSubgraph(this.saved_template, mouse_adjusted, this.selected_premise);\n            }\n        }\n    }\n\n    onMouseDown = (event) => {\n        //console.log('mousedown', this);\n        if (E.keys[16] && this.getMode() === 'create') {\n            this.initial_cut_pos = Object.assign({}, E.mousePosition);\n            this.initial_cut_pos.x -= this.paper_element.getBoundingClientRect().left;\n            this.initial_cut_pos.y -= this.paper_element.getBoundingClientRect().top;\n            let config  = {\n                position: Object.assign({}, this.initial_cut_pos),\n                size: {width: 0, height: 0}\n            }\n            //this.temp_cut = new Cut().create(config);\n            this.history.current.lock();\n            this.temp_cut = this.sheet.addCut(config);\n            this.temp_cut.active();\n            event.preventDefault();\n            //console.log(\"CREATED TEMP CUT\", this.temp_cut);\n        }\n    }\n\n    onMouseUp = () => {\n        //console.log('mouseup', this);\n        if (this.getMode() === 'proof') {\n            this.history.current.startBatch();\n            if (!this.selected_premise && this.props.action && this.props.action.name === 'insertDoubleCut') {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.props.action(this.sheet, null, mouse_adjusted);\n                this.props.handleClearAction();\n            }\n            if (!this.selected_premise && this.props.action && this.props.action.name === 'bound iterationend') {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.props.action(this.sheet, null, mouse_adjusted);\n                this.props.handleClearAction();\n            }\n            this.history.current.endBatch();\n        }\n        if (this.temp_cut && this.getMode() === 'create') {\n            const position = _.clone(this.temp_cut.get('position'));\n            const size = _.clone({width: this.temp_cut.attr('rect/width'), height: this.temp_cut.attr('rect/height')});\n            const config = {\n                position: position,\n                attrs:{\n                    rect: {\n                        ...size\n                    }\n                }\n            }\n            //eslint-disable-next-line\n            //let new_rect = new Cut().create(config);\n            //console.log('mouse released, deleting temp cut...');\n            this.temp_cut.remove();\n            this.history.current.unlock();\n            //NOTE: Temp cut must be deleted first or there will be uwnanted conflicts with  collisions\n            this.sheet.addCut(config);\n        }\n    \n        this.jpaper.setInteractivity(true);\n        this.temp_cut = null;\n    }\n\n    onMouseMove = () => {\n        //console.log('mousemove', this);\n        if(this.getMode() === 'create'){\n            //console.log(E.isMouseDown);\n            if (E.isMouseDown && E.keys[16] && this.temp_cut) {\n                const mouse_adjusted = this.getRelativeMousePos();\n                this.temp_cut.set('position', {\n                    x: Math.min(mouse_adjusted.x, this.initial_cut_pos.x),\n                    y: Math.min(mouse_adjusted.y, this.initial_cut_pos.y)\n                });\n                this.temp_cut.attr('rect/width', Math.abs(mouse_adjusted.x - this.initial_cut_pos.x));\n                this.temp_cut.attr('rect/height', Math.abs(mouse_adjusted.y - this.initial_cut_pos.y));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        this.paper_element.focus();\n    }\n\n    getRelativeMousePos() {\n        return {\n            x: E.mousePosition.x - this.paper_element.getBoundingClientRect().left,\n            y: E.mousePosition.y - this.paper_element.getBoundingClientRect().top\n        };\n    }\n\n    render() {\n        if (!this.state.show) return null;\n        const styles = {\n            width: this.props.wrapperWidth || '100%',\n            height: this.props.wrapperHeight || '100%'\n        }\n\n        return(\n            <div className=\"paper-root\" ref={this.paperRoot}>\n                <div className=\"paper-wrapper\" style={styles}>\n                    <div \n                        id={this.props.id}\n                        className=\"joint-paper\"\n                        onClick={this.onClick}\n                        onKeyDown={(event) => this.onKeyDown(event)}\n                        onKeyUp={(event) => this.onKeyUp(event)}\n                        onMouseDown={(event) => this.onMouseDown(event)}\n                        onMouseUp={this.onMouseUp}\n                        onMouseMove={this.onMouseMove}\n                        onMouseEnter={this.onMouseEnter}\n                        tabIndex=\"0\"\n                    ></div>\n                </div>\n                <UtilBar ref={this.UtilBar}>\n                    <UtilBarItem icon={faHistory}>\n                        <History \n                            ref={this.history} \n                            id_prefix={`${this.props.id}-`}\n                            handleHistoryJump={this.handleHistoryJump}\n                            handleInitializeHistory={this.handleInitializeHistory}\n                        />\n                    </UtilBarItem>\n                </UtilBar>\n            </div>\n        );\n    }\n}\n\nexport function initializeContainerDrag(container_id){\n    const ele = document.getElementById(container_id);\n    ele.style.cursor = 'default';\n  \n      let pos = { top: 0, left: 0, x: 0, y: 0 };\n  \n      const mouseDownHandler = function(e) {\n          if (!E.keys[16]) return;\n          ele.style.cursor = 'grabbing';\n          ele.style.userSelect = 'none';\n  \n          pos = {\n              left: ele.scrollLeft,\n              top: ele.scrollTop,\n              // Get the current mouse position\n              x: e.clientX,\n              y: e.clientY,\n          };\n  \n          ele.addEventListener('mousemove', mouseMoveHandler);\n          ele.addEventListener('mouseup', mouseUpHandler);\n      };\n  \n      const mouseMoveHandler = function(e) {\n          // How far the mouse has been moved\n          const dx = e.clientX - pos.x;\n          const dy = e.clientY - pos.y;\n  \n          // Scroll the element\n          ele.scrollTop = pos.top - dy;\n          ele.scrollLeft = pos.left - dx;\n      };\n    \n      const mouseUpHandler = function() {\n          ele.style.cursor = 'default';\n          ele.style.removeProperty('user-select');\n  \n          ele.removeEventListener('mousemove', mouseMoveHandler);\n          ele.removeEventListener('mouseup', mouseUpHandler);\n      };\n  \n      // Attach the handler\n      ele.addEventListener('mousedown', mouseDownHandler);\n  }\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nimport './Button.css';\n\nexport default class Button extends React.Component {\n\n    \n    render() {\n        return (\n            <button className={'button ' + (this.props.active ? 'button-active' : '')} onClick={this.props.onClick}>\n                <div className='tooltip-text'>{this.props.tooltip_text}</div>\n                <FontAwesomeIcon icon={this.props.icon} className='button-icon'/>\n                <p>{this.props.text}</p>\n            </button>\n        );\n    }\n}\n\nButton.propTypes = {\n    /** Text to be displayed for a button */\n    text : PropTypes.string,\n    /** Function to be exicuted when the button is pressed */\n    onClick : PropTypes.func,\n    /** Icon title on FontAwesome */\n    icon : PropTypes.string,\n    /** Tooltip text */\n    tooltip_text : PropTypes.string,\n}\n\nButton.defaultProps = {\n    text: 'Button',\n    onClick: console.log('Button Clicked! Please define a on click function.'),\n    icon : faCoffee,\n    tooltip_text : 'Tooltip!',\n}","import React from 'react';\n\nimport Button from '../Button/Button';\n\nimport './ButtonGroup.css';\n\nexport default class ButtonGroup extends React.Component {\n    render() {\n        return (\n            <div className=\"button-group\">\n                {this.props.buttons.map(button => <Button key={button.text} active={this.props.action === button.action} text={button.text} onClick={button.onClick} icon={button.icon} tooltip_text={button.tooltip_text}/>)}\n            </div>\n        );\n    }\n}","\n\n\nexport const inferenceInsertion = function(sheet, model, mousePosition) {\n  console.log('ARGS', arguments);\n  if(model.__proto__.constructor.name === \"Cut\" && (model.attributes.level) % 2 === 0) return;\n  console.log('opening modal...')\n  const paper = sheet.paper;\n  paper.props.handleOpenModal(mousePosition);\n}\n\nexport const inferenceErasure = function(sheet, model) {\n  console.log(model.attributes.attrs.level)\n  if(model.attributes.attrs.level % 2 === 0) {\n    const children = model.getEmbeddedCells({deep: true});\n    const parent = sheet.graph.getCell(model.attributes.parent);\n\n    model.destroy();\n    for (let i = 0; i < children.length; i++){\n      children[i].destroy();\n    }\n\n    if(parent) {\n      sheet.handleCollisions(parent);\n    }\n  }\n}\n\nexport const insertDoubleCut = function(sheet, model, mousePosition={}) {\n    let position = {};\n    let size = {}\n    if (!model && mousePosition) {\n        position = mousePosition;\n        size = { width: 80, height: 80 }\n    }\n    else if (model){\n        position = model.get('position');\n        size = { width: model.attr('rect/width'), height: model.attr('rect/height') }\n    }\n    else {\n        throw new Error('Bad arguments');\n    }\n    const multipliers = [0.8, 0.25];\n    let new_cuts = []\n    for(let i = 0; i < multipliers.length; i++) { \n        new_cuts.push(sheet.addCut({\n            position:  {\n              x: position.x - (size.width * multipliers[i]/2),\n              y: position.y - (size.height * multipliers[i]/2)\n            },\n            attrs: {\n                rect: {\n                    width: size.width * (1 + multipliers[i]),\n                    height: size.height * (1 + multipliers[i])\n                }\n            }\n        }, false));\n    } \n    new_cuts[0].embed(new_cuts[1])\n    sheet.colorByLevel(new_cuts[0])\n    let selected_premise = sheet.paper.selected_premise;\n    if (selected_premise && selected_premise.attributes.type === \"dia.Element.Cut\") {\n      selected_premise.embed(new_cuts[0]);\n      sheet.colorByLevel(selected_premise)\n      sheet.pack(selected_premise)\n    }\n    sheet.handleCollisions(new_cuts[0]) \n}\n\nexport const deleteDoubleCut = function(sheet, model) {\n    console.log(\"MODEL: \", model);\n    const graph = sheet.graph;\n    if(model.__proto__.constructor.name === \"Cut\" && model.attributes.embeds?.length === 1 && \n        graph.getCell(model.attributes.embeds[0]).__proto__.constructor.name === \"Cut\") {\n        const children = graph.getCell(model.attributes.embeds[0]).attributes.embeds;\n        graph.getCell(model.attributes.embeds[0]).destroy();\n        model.destroy();\n        if(model.attributes.parent) {\n          sheet.handleCollisions(graph.getCell(model.attributes.parent));\n        }\n        else {\n          children?.forEach(element => {\n              if(graph.getCell(element).__proto__.constructor.name === \"Cut\") {\n                sheet.handleCollisions(graph.getCell(element))\n              }\n          });\n        }\n    }\n}\n\nexport const iteration = function(sheet, model) {\n  return iterationend.bind(null, model);\n}\n\nconst iterationend = function(model, sheet, model_clone, mousePosition={}) {\n  let subgraph = sheet.graph.cloneSubgraph([model], {deep: true});\n  let sub_id = sheet.addSubgraph(subgraph, mousePosition, model_clone);\n  \n  subgraph = sheet.graph.getCell(sub_id);\n  if(!legalIteration(sheet,model,subgraph)) {\n    obliterate(sheet, subgraph);\n  }\n}\n\nexport const deiteration = function(sheet, model) {\n  const model_id = model.id;\n\n  let ancestor = model;\n  while(ancestor.attributes.parent) {\n    //  Iterate up to parent\n    ancestor = sheet.graph.getCell(ancestor.attributes.parent);\n\n    //  Parent must be of type cut, however we check for redundancy\n    if(ancestor.__proto__.constructor.name !== \"Cut\") {\n      console.error(\"Parent is of type \" + ancestor.__proto__.constructor.name + \". Expected Cut. Contact administrator.\" );\n      return;\n    }\n\n    //  Now, recursivly check all premises in the cut and look for a matching subgraph\n    let children = ancestor.attributes.embeds\n\n    children?.forEach(element => {\n      let child = sheet.graph.getCell(element);\n        //Check if premise text is the same and if premise id is dissimilar\n        if(child.id !== model_id &&\n        matchingModel(sheet, model, child)) {\n          //  Remove desired element and return\n          obliterate(sheet, model);\n          return;\n        }\n    });\n  }\n\n  //  Finally, check sheet of assertion becuase of Joey's \"Multi-tree\" theory...\n\n  let all_models = sheet.graph.attributes.cells.models;\n\n  all_models?.forEach(element => {\n    let child = sheet.graph.getCell(element);\n    if(child?.attributes.attrs.level === 0 && \n    child?.id !== model_id &&\n    matchingModel(sheet, model,child)) {\n      //  Remove desired element and return\n      obliterate(sheet, model);\n      return;\n      }\n  });\n} \n\n\n/**\n * Returns if two subgraphs match.\n * @param {Sheet} sheet - The sheet the two subgraphs are contained by.\n * @param {Cell} model_one - The root cell of the first subgraph.\n * @param {Cell} model_two - The root cell of the second subgraph.\n * @returns {Boolean} - If the two subgraphs match.\n */\nfunction matchingModel(sheet, model_one, model_two) {\n    \n  //  If comparing premise to a cut, return false\n  if(model_one.__proto__.constructor.name !== model_two.__proto__.constructor.name) return false;\n\n  //  If comparing a premise to a premise, return based on text\n  if (model_one.__proto__.constructor.name === \"Premise\") {\n    return model_one.attributes.attrs.text.text === model_two.attributes.attrs.text.text;\n  }\n\n  //  If comparing a cut, return based on a match to all children\n  if(model_one.__proto__.constructor.name === \"Cut\") {\n    \n    // Get the children of each cut\n    let model_one_children = [...(model_one.attributes.embeds || [])];\n    let model_two_children = [...(model_two.attributes.embeds || [])];\n\n    //  If both embeds dont exist\n    if(!model_one_children && !model_two_children) return true;\n    \n    //  If dissimilar sizes, return false\n    if(model_one_children.length !== model_two_children.length) return false;\n\n    //  Match children until children array are of size zero, or all options are exaughsted\n    //  Runtime : O(n^2) where n = number of children per model.\n    //  To attempt optimization, search for \"Graph Isomorphism Problem\"\n    outer:\n    while(model_one_children.length > 0) {\n      let child = sheet.graph.getCell(model_one_children[0]);\n\n      //  Iterate through all children of model_two and compare to child\n      for (let i = 0; i < model_two_children.length; i++) {\n        if(matchingModel(sheet, child, sheet.graph.getCell(model_two_children[i]))) {\n          //  Remove the elements from the arrays\n          model_one_children.shift() // Removes the first index\n          model_two_children.splice(i, 1) //  Removes index i\n          continue outer;\n         }\n      }\n      //  If you get here, it didn't match :(\n      return false;\n    }\n    //  If you get here, it matched! Congrats! :)\n    return true;\n  }\n  //  If comparing something other than a premise or cut, contact an administatior\n  console.error(\"Can not compare models of type \" + model_one.__proto__.constructor.name + \". Contact administrator\");\n  return false;\n}\n\n/**\n * Destroys the root and all decendants.\n * @param {Sheet} sheet - The sheet the subgraph is contained by.\n * @param {Cell} model - Root of subgraph to be destroyed.\n */\nfunction obliterate(sheet, model) {\n  //  If premise or empty cell\n  if(model.__proto__.constructor.name === \"Premise\" || model.attributes.embeds?.length === 0) {\n    model.destroy();\n    console.log('ballse');\n    return;\n  }\n\n  //  If non-empty cell, destroy all children\n  let children = model.attributes.embeds;\n  children.forEach(child => {obliterate(sheet, sheet.graph.getCell(child))});\n  //  Then destroy self\n  model.destroy();\n\n\n\n}\n\n/**\n * Returns if a iteration is legal\n * @param {Sheet} sheet - The sheet the subgraphs are contained by.\n * @param {Cell} model - The origin subgraph.\n * @param {Cell} model_clone - The clone of the origin subgraph\n * @returns {Boolean} - If the iteration is legal.\n */\nfunction legalIteration(sheet, model, model_clone) {\n  //  First, confirm the two models are the same.\n  if(!matchingModel(sheet, model,model_clone)) {\n    console.error(\"Model discrepency when detecting legality of iteration.\");\n    return false;\n  }\n  //  If the first model is on the sheet of assertion return true\n  if(model.attributes.attrs.level === 0) { return true; }\n\n  //  If the clone is on a lower level than the origin, return false\n  if(model.attributes.attrs.level > model_clone.attributes.attrs.level) { return false; }\n\n  //  Add all sibling cuts to a list (all children of parent, remove self)\n  let search = [...sheet.graph.getCell(model.attributes.parent).attributes.embeds];\n  search.splice(search.indexOf(model.id, 1));\n\n  //Iterativly search\n\n  while(search.length > 0) {\n    let current = search.shift();\n    //  Check if it is clone\n    if( current === model_clone.id) {\n      return true;\n    }\n    //  If it is a cut, add all children\n    if(sheet.graph.getCell(current).__proto__.constructor.name === \"Cut\") {\n      sheet.graph.getCell(current).attributes.embeds?.forEach( element => {\n        search.push(element);\n      });\n    }\n  }\n\n  //  If you get here, it's illegal! >:o\n  return false;\n}","import React from 'react';\n\nimport ButtonGroup from '../ButtonGroup/ButtonGroup';\nimport Button from '../Button/Button';\n\nimport './SideBar.css';\nimport { deiteration, deleteDoubleCut, inferenceErasure, inferenceInsertion, insertDoubleCut, iteration } from '../../util/proof-util';\n\n//  Import all of the FontAwesome icons\nimport { faExchangeAlt, faPlus, faMinus, faVectorSquare, faClone, faMinusSquare, faPlusSquare, faEraser} from '@fortawesome/free-solid-svg-icons'\n\nexport default class SideBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttons: {\n                create: [\n                    {\n                        text: 'Add Premise',\n                        action: deiteration,\n                        onClick: () => {\n                            console.log('Adding premise...')\n                        },\n                        icon : faPlus,\n                        tooltip_text : 'Add a premise by hovering over the sheet and pressing a letter on your keyboard.'\n                    },\n                    {\n                        text: 'Cut',\n                        action: deiteration,\n                        onClick: () => {\n                            console.log('Cutting...');\n                        },\n                        icon : faVectorSquare,\n                        tooltip_text : 'Add a cut by clicking and dragging on the sheet of assertion.'\n                    }\n                ],\n                proof: [\n                    {\n                        text: 'Insertion',\n                        action: inferenceInsertion,\n                        onClick: () => {\n                            this.props.handleActionChange(inferenceInsertion);\n                            console.log('Loading insertion into action...');\n                        },\n                        icon : faPlus,\n                        tooltip_text : 'Insert a graph by clicking on any odd level.'\n                    },\n                    {\n                        text: 'Erasure',\n                        action: inferenceErasure,\n                        onClick: () => {\n                            this.props.handleActionChange(inferenceErasure);\n                            console.log('Performing erasure...');\n                        },\n                        icon : faMinus,\n                        tooltip_text : 'Remove a graph by clicking on anything on an even level.'\n                    },\n                    {\n                        text: 'Insert Double Cut',\n                        action: insertDoubleCut,\n                        onClick: () => {\n                            this.props.handleActionChange(insertDoubleCut);\n                            console.log('Inserting double cut...');\n                        },\n                        icon : faPlusSquare,\n                        tooltip_text : 'Add a double cut by clicking on the subgraph you want to encapsulate.'\n                    },\n                    {\n                        text: 'Delete Double Cut',\n                        action: deleteDoubleCut,\n                        onClick: () => {\n                            this.props.handleActionChange(deleteDoubleCut);\n                            console.log('Deleting double cut...');\n                        },\n                        icon : faMinusSquare,\n                        tooltip_text : 'Remove a double cut by clicking on the outer-most cut of the double cut.'\n                    },\n                    {\n                        text: 'Iteration',\n                        action: iteration,\n                        onClick: () => {\n                            this.props.handleActionChange(iteration);\n                            console.log('Performing iteration...');\n                        },\n                        icon : faClone,\n                        tooltip_text : 'Clone any premise an even number of layers layers deeper by first clicking on the premise and then the desired location.'\n                    },\n                    {\n                        text: 'Deiteration',\n                        action: deiteration,\n                        onClick: () => {\n                            this.props.handleActionChange(deiteration);\n                            console.log('Performing deiteration...');\n                        },\n                        icon : faEraser,\n                        tooltip_text : 'Remove any premise an even number of layers deeper by clicking on the premise you wish to remove.'\n                    }\n                ]\n            },\n            color : {\n                text : {\n                    create : \"#E0FBFC\",\n                    proof : \"#293241\"\n                },\n                background : {\n                    create : \"#3D5A80\",\n                    proof : \"#98C1D9\"\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <div className=\"menu-bar\" style={{backgroundColor: this.state.color.background[this.props.mode] , color: this.state.color.text[this.props.mode]}}>\n                <div id=\"side-wrapper\" >\n                    <div id=\"mode-header\">\n                        <h2>{this.props.mode.charAt(0).toUpperCase() + this.props.mode.slice(1)} Mode</h2>\n                        <Button text=\"Switch Mode\" onClick={this.props.onStateSwitch} icon={faExchangeAlt} tooltip_text={'Toggles to ' + (this.props.mode === 'proof' ? 'create' : 'proof') + ' mode'} ></Button>\n                    </div>\n\n                    <ButtonGroup buttons={this.state.buttons[this.props.mode]} mode={this.props.mode} action={this.props.action}/>\n                </div>\n            </div>\n        ); \n    }\n}\n\n","import React from 'react';\n\nimport './Modal.css'\n\nexport default class Modal extends React.Component {\n    render() {\n        if (!this.props.show) {\n            return null;\n        }\n        console.log('rendering...');\n        return (\n            <div class='modal-bg'>\n                <div class='modal-body'>\n                    <div class=\"modal-top-bar\">\n                        { this.props.buttons.map(b => \n                            <button key={b.name} class={`modal-item modal-item-${b.name}`} onClick={b.onClick}>{b.text}</button>\n                        )}\n                        {/* <button class=\"modal-item modal-item-cancel\" onClick={this.props.onClose}>X</button>\n                        <button class=\"modal-item modal-item-cancel\" onClick={this.props.onClose}>X</button> */}\n                    </div>\n                    <div class=\"modal-content\">\n                        { this.props.children }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}   ","import React from 'react';\nimport Paper from '../Paper/Paper';\nimport SideBar from '../SideBar/SideBar';\nimport Modal from '../Modal/Modal.jsx';\n\nimport './Workspace.css'\n\nnew Event('load-modal');\n\nexport default class Workspace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'create',\n            action: null,\n            showModal: false\n        }\n        this.insertPosition = { x: 0, y: 0 };\n        this.modalPaper = React.createRef();\n        this.mainPaper = React.createRef();\n        this.proofPaper = React.createRef();\n        this.history = [];\n    }\n\n    componentDidMount() {\n        this.proofPaper.current.hide();\n        this.proofPaper.current.history.current.clear();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        // //if state.mode changed\n         if (prevState.mode !== this.state.mode) {\n            //switch to proof mode\n            if (this.state.mode === 'proof') {\n                this.mainPaper.current.hide();\n                this.proofPaper.current.sheet.graph.clear();\n                const copy = this.mainPaper.current.sheet.exportAsJSON();\n                this.proofPaper.current.sheet.importFromJSON(copy);\n                this.proofPaper.current.show();\n            }\n            //switch to create mode\n            else {\n                this.mainPaper.current.show();\n                this.proofPaper.current.hide();\n                this.proofPaper.current.history.current.clear();\n            }\n        }\n    }\n\n    handleStateSwitch() {\n        this.setState({\n            mode: this.state.mode === 'create' ? 'proof' : 'create'\n        });\n    }\n\n    handleActionChange = (action) => {\n        this.setState({\n            action: action\n        });\n    }\n\n    handleClearAction(){\n        this.handleActionChange(null);\n    }\n\n    //TODO: MOVE MODAL TO WORKSPACE\n    handleModalExit = () => {\n        this.setState({\n            showModal: false\n        });\n    }\n\n    handleOpenModal = (mousePosition) => {\n        this.setState({\n            showModal: true\n        })\n        this.insertPosition = Object.assign({}, mousePosition);\n    }\n\n    handleModalInsert = (position) => {\n        console.log('inserting...', position);\n        this.proofPaper.current.sheet.importFromJSON(this.modalPaper.current.sheet.exportAsJSON());\n        this.handleModalExit();\n    }\n\n    render() {\n\n        const buttons = [\n            {\n                name: 'insert',\n                text: 'Insert',\n                onClick: this.handleModalInsert\n            },\n            {\n                name: 'cancel',\n                text: 'X',\n                onClick: this.handleModalExit\n            },\n        ]\n\n        return (\n            <div className=\"workspace\">\n                <SideBar  \n                    mode={this.state.mode} \n                    onStateSwitch={this.handleStateSwitch.bind(this)} \n                    handleActionChange={this.handleActionChange.bind(this)}\n                    action={this.state.action}\n                >\n                </SideBar>\n                <Paper \n                    id={this.props.paper_id} \n                    mode={this.state.mode} \n                    action={this.state.action}\n                    handleClearAction={this.handleClearAction.bind(this)}\n                    handleActionChange={this.handleActionChange}\n                    handleOpenModal={this.handleOpenModal}\n                    handlePlayAudio={this.props.handlePlayAudio}\n                    ref={this.mainPaper}\n                >\n                </Paper>\n\n                <Paper \n                    id={this.props.paper_id + '-proof-paper'} \n                    mode={this.state.mode} \n                    action={this.state.action}\n                    handleClearAction={this.handleClearAction.bind(this)}\n                    handleActionChange={this.handleActionChange}\n                    handleOpenModal={this.handleOpenModal}\n                    handlePlayAudio={this.props.handlePlayAudio}\n                    ref={this.proofPaper}\n                >\n                </Paper>\n\n\n                <Modal show={this.state.showModal} buttons={buttons}>\n                    <Paper \n                        id={this.props.paper_id + '-modal-paper'} \n                        mode={'create'} \n                        action={null}\n                        handleClearAction={null}\n                        handleActionChange={null}\n                        handleOpenModal={null}\n                        handlePlayAudio={this.props.handlePlayAudio}\n                        wrapperWidth='100%'\n                        wrapperHeight='72vh'\n                        ref={this.modalPaper}\n                    >\n                    </Paper>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport '../../index.css'; \nimport MenuBar from '../MenuBar/MenuBar.jsx';\nimport Workspace from '../Workspace/Workspace.jsx';\nimport $ from 'jquery'\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.workspace = React.createRef();\n        this.sound = null;\n        this.state = {\n            muted: true\n        }\n    }\n\n    componentDidMount() {\n        console.log('WORKSPACE', this.workspace);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.muted && this.sound) {\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n    }\n\n    handleMuteToggle = () => {\n        this.setState({\n            muted: !this.state.muted\n        });\n\n        const mute_button = getMenuItem(\"Toggle Sound\");\n        const mute_button_label = mute_button.find('.menu-item-label');\n        mute_button.toggleClass('mute-active');\n\n        if (mute_button.hasClass('mute-active')) {\n            mute_button_label.html('Unmute');\n        }\n        else {\n            mute_button_label.html('Mute');\n        }\n        \n    }\n\n    handlePlayAudio = (audio) => {\n        if (this.state.muted) return;\n        this.sound = audio;\n        this.sound.play();\n    }\n\n    getGraphForExport = () => {\n        return this.workspace.current.mainPaper.current.sheet.graph; \n    }\n\n    exportMainGraph = () => {\n        this.workspace.current.mainPaper.current.export();\n    }\n\n    importMainGraph = () => {\n        this.workspace.current.mainPaper.current.import();\n    }\n\n    setGraphDataOnImport = (data) => {\n        const graph = this.workspace.current.mainPaper.current.sheet.graph; \n        graph.clear();\n        const dataObj = JSON.parse(data);\n        for (let i = 0; i < dataObj.cells.length; i++) {\n            if (dataObj.cells[i].type === \"dia.Element.Cut\") {\n                dataObj.cells[i].sheet = this.workspace.current.mainPaper.current.sheet;\n            }\n        }   \n\n        graph.fromJSON(dataObj);\n    }\n\n    render() {\n        return (\n            <div id=\"app\" className=\"app\">\n                <MenuBar \n                    id=\"header\" \n                    muted={this.state.muted} \n                    handleMuteToggle={this.handleMuteToggle}\n                    exportMainGraph={this.exportMainGraph}\n                    importMainGraph={this.importMainGraph}\n                    getGraphForExport={this.getGraphForExport}\n                    setGraphDataOnImport={this.setGraphDataOnImport}\n                />\n                <Workspace paper_id=\"main-paper\" ref={this.workspace} handlePlayAudio={this.handlePlayAudio}></Workspace>\n            </div>\n        );\n    }\n}\n\n\nfunction getMenuItem(item_label) {\n    return $('.header-bar').find(`[aria-label=\"${item_label}\"]`)\n}","import ReactDOM from 'react-dom';\nimport * as joint from 'jointjs';\nimport App from './components/App/App';\n\nconsole.log(\"Starting...\");\nwindow.joint = joint;\n\n\nconst APP = ReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\nconsole.log(APP);\nconsole.log(APP.workspace);\n"],"sourceRoot":""}